{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "updateTokenURIBaseUrl",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenURIBaseUrl",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"updateTokenURIBaseUrl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIBaseUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,uint48,uint48,bool,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,uint48,uint48,bool,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,uint48,uint48,bool,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"updateTokenURIBaseUrl(string)\":{\"details\":\"Update the base url for all tokenURI's\"},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x038b15a3cebe2f5e8d32975712bc3dd265700ca17efcd202355bbc978ea1a54a\",\"urls\":[\"bzz-raw://171e9a4c92688995dd9157114042275958c4399227892c62077810992f1e9889\",\"dweb:/ipfs/QmQQtMsuW6va34TxQ8y1BaqAhi8zwdzorSjNHBMa8db63D\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x45fb6eddb422590ad9eec286d07eae2bd45db219aa127066eb23c7e3da4d0029\",\"urls\":[\"bzz-raw://840173239762fa8808437c611cdb3858b2d115a1a97153d330f6ed5ab4ff6412\",\"dweb:/ipfs/QmZ53b1m2kAA6PKotGU4htzNVFzRKe6MyWVfpKBpaYPMij\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x6002805460ff60a01b19169055655af3107a400060035560a06040819052600060808190526200003291600c9162000306565b503480156200004057600080fd5b5060405162003dad38038062003dad833981016040819052620000639162000417565b620000977f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03620001a716565b620000cb7f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03620001a716565b620000de6001600160e01b036200024c16565b600180546001600160a01b0319166001600160a01b0392909216919091179055620001086200024c565b600280546001600160a01b0319166001600160a01b039290921691909117905582516200013d90600f90602086019062000306565b5081516200015390601090602085019062000306565b50620001887f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03620001a716565b6200019e816200025160201b620017e31760201c565b505050620005eb565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200020f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002069062000510565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002706001600160e01b036200024c16565b6001600160a01b03161480620002ab57506002546001600160a01b0316620002a06001600160e01b036200024c16565b6001600160a01b0316145b620002e4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002069062000522565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034957805160ff191683800117855562000379565b8280016001018555821562000379579182015b82811115620003795782518255916020019190600101906200035c565b50620003879291506200038b565b5090565b6200024e91905b8082111562000387576000815560010162000392565b8051620003b581620005d1565b92915050565b600082601f830112620003cd57600080fd5b8151620003e4620003de826200055b565b62000534565b915080825260208301602083018583830111156200040157600080fd5b6200040e8382846200059e565b50505092915050565b6000806000606084860312156200042d57600080fd5b83516001600160401b038111156200044457600080fd5b6200045286828701620003bb565b93505060208401516001600160401b038111156200046f57600080fd5b6200047d86828701620003bb565b92505060406200049086828701620003a8565b9150509250925092565b6000620004a9601c8362000583565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004e460138362000583565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b60208082528101620003b5816200049a565b60208082528101620003b581620004d5565b6040518181016001600160401b03811182821017156200055357600080fd5b604052919050565b60006001600160401b038211156200057257600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b038216620003b5565b60005b83811015620005bb578181015183820152602001620005a1565b83811115620005cb576000848401525b50505050565b620005dc816200058c565b8114620005e857600080fd5b50565b6137b280620005fb6000396000f3fe60806040526004361061021a5760003560e01c80637368891411610123578063a4ede128116100ab578063e4bacbc51161006f578063e4bacbc5146105ff578063e5c2492414610614578063e89fecc014610647578063e982d5a91461065a578063e985e9c51461067a5761021a565b8063a4ede12814610552578063b88d4fde1461057f578063c57a88251461059f578063c87b56dd146105bf578063e2b375a9146105df5761021a565b80638456cb59116100f25780638456cb59146104d55780638462151c146104ea57806395d89b411461050a578063a002c3761461051f578063a22cb465146105325761021a565b8063736889141461045e578063748b0fa1146104735780637b1039991461049357806384017e52146104b55761021a565b80633f4ba83a116101a65780635a393bc2116101755780635a393bc2146103e15780635c975abb146103f45780635fd8c710146104095780636352211e1461041e57806370a082311461043e5761021a565b80633f4ba83a1461037757806342842e0e1461038c57806342966c68146103ac57806352709725146103cc5761021a565b806313966db5116101ed57806313966db5146102c6578063180b9e3f146102e857806318160ddd1461031557806323b872dd1461032a5780632a0c77991461034a5761021a565b806301ffc9a71461021f57806306fdde0314610255578063081812fc14610277578063095ea7b3146102a4575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612aed565b61069a565b60405161024c9190613438565b60405180910390f35b34801561026157600080fd5b5061026a6106bd565b60405161024c9190613454565b34801561028357600080fd5b50610297610292366004612ca0565b610754565b60405161024c9190613355565b3480156102b057600080fd5b506102c46102bf366004612a9f565b6107a0565b005b3480156102d257600080fd5b506102db61089c565b60405161024c9190613585565b3480156102f457600080fd5b50610308610303366004612ca0565b6108a2565b60405161024c9190613593565b34801561032157600080fd5b506102db6108ba565b34801561033657600080fd5b506102c46103453660046129a9565b6108cb565b34801561035657600080fd5b5061036a610365366004612951565b610a47565b60405161024c9190613427565b34801561038357600080fd5b506102c4610b4f565b34801561039857600080fd5b506102c46103a73660046129a9565b610bd3565b3480156103b857600080fd5b506102c46103c7366004612ca0565b610bf3565b3480156103d857600080fd5b50610297610d37565b6102db6103ef366004612bea565b610d46565b34801561040057600080fd5b5061023f610eb1565b34801561041557600080fd5b506102c4610ec1565b34801561042a57600080fd5b50610297610439366004612ca0565b610f9d565b34801561044a57600080fd5b506102db610459366004612951565b610fb8565b34801561046a57600080fd5b50610297611007565b34801561047f57600080fd5b506102c461048e366004612b29565b611016565b34801561049f57600080fd5b506104a8611088565b60405161024c9190613446565b3480156104c157600080fd5b506102c46104d0366004612ca0565b611097565b3480156104e157600080fd5b506102c46110fb565b3480156104f657600080fd5b5061036a610505366004612951565b611186565b34801561051657600080fd5b5061026a611240565b6102db61052d366004612b5e565b6112a1565b34801561053e57600080fd5b506102c461054d366004612a6f565b61140a565b34801561055e57600080fd5b5061057261056d366004612951565b6114ef565b60405161024c9190613416565b34801561058b57600080fd5b506102c461059a3660046129f6565b611665565b3480156105ab57600080fd5b506102c46105ba366004612951565b6117e3565b3480156105cb57600080fd5b5061026a6105da366004612ca0565b611864565b3480156105eb57600080fd5b506102c46105fa366004612951565b6118b5565b34801561060b57600080fd5b5061026a611942565b34801561062057600080fd5b5061063461062f366004612ca0565b6119d0565b60405161024c9796959493929190613363565b6102db610655366004612b5e565b611b5b565b34801561066657600080fd5b506102c4610675366004612951565b611c87565b34801561068657600080fd5b5061023f61069536600461296f565b611d15565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600f8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b820191906000526020600020905b81548152906001019060200180831161072c57829003601f168201915b505050505090505b90565b600061075f82611d43565b6107845760405162461bcd60e51b815260040161077b90613545565b60405180910390fd5b506000908152600d60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107b757600080fd5b60006107c282610f9d565b9050806001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161077b906134c5565b806001600160a01b0316610808611d60565b6001600160a01b03161480610824575061082481610695611d60565b6108405760405162461bcd60e51b815260040161077b90613575565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108c66005611d64565b905090565b600254600160a01b900460ff16156108e257600080fd5b6108f36108ed611d60565b82611d68565b61090f5760405162461bcd60e51b815260040161077b90613565565b6000818152600a60205260408120546001600160a01b03169061093183610f9d565b600084815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff1661098f57610972868686611ded565b1561098f5760405162461bcd60e51b815260040161077b90613475565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109c89185918b918b918b918b918b91016135bc565b60206040518083038186803b1580156109e057600080fd5b505afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a189190810190612acf565b610a345760405162461bcd60e51b815260040161077b90613565565b610a3f868686611e44565b505050505050565b60606001600160a01b038216610a6f5760405162461bcd60e51b815260040161077b906134a5565b6001600160a01b0382166000908152600860205260408120610a9090611d64565b905080610ab25760408051600080825260208201909252905b509150506106b8565b606081604051908082528060200260200182016040528015610ade578160200160208202803883390190505b5090506000610aeb6108ba565b9050600060015b828111610b42576000818152600a60205260409020546001600160a01b0388811691161415610b3a5780848381518110610b2857fe5b60209081029190910101526001909101905b600101610af2565b83955050505050506106b8565b6001546001600160a01b0316610b63611d60565b6001600160a01b03161480610b9257506002546001600160a01b0316610b87611d60565b6001600160a01b0316145b610bae5760405162461bcd60e51b815260040161077b90613515565b600254600160a01b900460ff16610bc457600080fd5b6002805460ff60a01b19169055565b610bee83838360405180602001604052806000815250611665565b505050565b600254600160a01b900460ff1615610c0a57600080fd5b6000818152600a60205260408120546001600160a01b031690610c2c83610f9d565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415610cfb576004546001600160a01b03166312d26ac882610c72611d60565b6040518363ffffffff1660e01b8152600401610c8f9291906135a1565b60206040518083038186803b158015610ca757600080fd5b505afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cdf9190810190612acf565b610cfb5760405162461bcd60e51b815260040161077b906134b5565b610d0c610d06611d60565b85611d68565b610d285760405162461bcd60e51b815260040161077b906134b5565b610d3184611f4a565b50505050565b6002546001600160a01b031681565b600254600090600160a01b900460ff1615610d6057600080fd5b600354341015610d6f57600080fd5b60008363ffffffff1611610d955760405162461bcd60e51b815260040161077b90613505565b6004546001600160a01b03166312d26ac884610daf611d60565b6040518363ffffffff1660e01b8152600401610dcc9291906135a1565b60206040518083038186803b158015610de457600080fd5b505afa158015610df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e1c9190810190612acf565b610e385760405162461bcd60e51b815260040161077b90613555565b610e4487878786611f5c565b610e605760405162461bcd60e51b815260040161077b90613535565b6000610e73610e6d611d60565b84612036565b9050610e82818989898961206d565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509695505050505050565b600254600160a01b900460ff1681565b6001546001600160a01b0316610ed5611d60565b6001600160a01b03161480610f0457506002546001600160a01b0316610ef9611d60565b6001600160a01b0316145b610f205760405162461bcd60e51b815260040161077b90613515565b60405130319060009033908390610f369061334a565b60006040518083038185875af1925050503d8060008114610f73576040519150601f19603f3d011682016040523d82523d6000602084013e610f78565b606091505b5050905080610f995760405162461bcd60e51b815260040161077b906134d5565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b038216610fe05760405162461bcd60e51b815260040161077b906134a5565b6001600160a01b038216600090815260076020526040902061100190611d64565b92915050565b6001546001600160a01b031681565b6001546001600160a01b031661102a611d60565b6001600160a01b0316148061105957506002546001600160a01b031661104e611d60565b6001600160a01b0316145b6110755760405162461bcd60e51b815260040161077b90613515565b8051610f9990600c90602084019061279e565b6004546001600160a01b031681565b6001546001600160a01b03166110ab611d60565b6001600160a01b031614806110da57506002546001600160a01b03166110cf611d60565b6001600160a01b0316145b6110f65760405162461bcd60e51b815260040161077b90613515565b600355565b6001546001600160a01b031661110f611d60565b6001600160a01b0316148061113e57506002546001600160a01b0316611133611d60565b6001600160a01b0316145b61115a5760405162461bcd60e51b815260040161077b90613515565b600254600160a01b900460ff161561117157600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061119383610fb8565b9050806111b0576040805160008082526020820190925290610aa9565b6060816040519080825280602002602001820160405280156111dc578160200160208202803883390190505b50905060006111e96108ba565b9050600060015b828111610b42576000818152600660205260409020546001600160a01b0388811691161415611238578084838151811061122657fe5b60209081029190910101526001909101905b6001016111f0565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b600254600090600160a01b900460ff16156112bb57600080fd5b6003543410156112ca57600080fd5b60008263ffffffff16116112f05760405162461bcd60e51b815260040161077b90613505565b6004546001600160a01b03166312d26ac88361130a611d60565b6040518363ffffffff1660e01b81526004016113279291906135a1565b60206040518083038186803b15801561133f57600080fd5b505afa158015611353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113779190810190612acf565b6113935760405162461bcd60e51b815260040161077b90613555565b61139f86868685611f5c565b6113bb5760405162461bcd60e51b815260040161077b90613535565b60006113cd6113c8611d60565b61222c565b90506113dc818888888861206d565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905095945050505050565b600254600160a01b900460ff161561142157600080fd5b611429611d60565b6001600160a01b0316826001600160a01b0316141561145a5760405162461bcd60e51b815260040161077b906134f5565b80600e6000611467611d60565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556114ab611d60565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114e39190613438565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b828210156115da57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115c25780601f10611597576101008083540402835291602001916115c2565b820191906000526020600020905b8154815290600101906020018083116115a557829003601f168201915b50505050508152505081526020019060010190611523565b5050505090506060815160405190808252806020026020018201604052801561161757816020015b60608152602001906001900390816116025790505b50905060005b825181101561165d5782818151811061163257fe5b60200260200101516000015182828151811061164a57fe5b602090810291909101015260010161161d565b509392505050565b600254600160a01b900460ff161561167c57600080fd5b61168d611687611d60565b83611d68565b6116a95760405162461bcd60e51b815260040161077b90613565565b6000828152600a60205260408120546001600160a01b0316906116cb84610f9d565b600085815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff166117295761170c878787611ded565b156117295760405162461bcd60e51b815260040161077b90613475565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916117629185918c918c918c918b918b91016135bc565b60206040518083038186803b15801561177a57600080fd5b505afa15801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117b29190810190612acf565b6117ce5760405162461bcd60e51b815260040161077b90613565565b6117da87878787612248565b50505050505050565b6001546001600160a01b03166117f7611d60565b6001600160a01b0316148061182657506002546001600160a01b031661181b611d60565b6001600160a01b0316145b6118425760405162461bcd60e51b815260040161077b90613515565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b606061186f82611d43565b61188b5760405162461bcd60e51b815260040161077b90613545565b600c8260405160200161189f929190613328565b6040516020818303038152906040529050919050565b6001546001600160a01b03166118c9611d60565b6001600160a01b031614806118f857506002546001600160a01b03166118ed611d60565b6001600160a01b0316145b6119145760405162461bcd60e51b815260040161077b90613515565b6001600160a01b0381161561193f57600280546001600160a01b0319166001600160a01b0383161790555b50565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156119c85780601f1061199d576101008083540402835291602001916119c8565b820191906000526020600020905b8154815290600101906020018083116119ab57829003601f168201915b505050505081565b60008060606000806000806119e488611d43565b611a005760405162461bcd60e51b815260040161077b90613545565b611a0861281c565b6000898152600a6020908152604091829020825160a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611ac05780601f10611a9557610100808354040283529160200191611ac0565b820191906000526020600020905b815481529060010190602001808311611aa357829003601f168201915b50505091835250506002919091015465ffffffffffff80821660208085019190915266010000000000008304909116604080850191909152600160601b90920460ff16151560609093019290925260008c81526009909252902054815191925063ffffffff1690611b308b610f9d565b602084015160408501516060860151608090960151939e929d50909b50995092975095509350915050565b600254600090600160a01b900460ff1615611b7557600080fd5b600354341015611b8457600080fd5b60008263ffffffff1611611baa5760405162461bcd60e51b815260040161077b90613505565b6004546001600160a01b03166312d26ac883611bc4611d60565b6040518363ffffffff1660e01b8152600401611be19291906135a1565b60206040518083038186803b158015611bf957600080fd5b505afa158015611c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c319190810190612acf565b611c4d5760405162461bcd60e51b815260040161077b90613555565b611c5986868685611f5c565b611c755760405162461bcd60e51b815260040161077b90613535565b60006113cd611c82611d60565b61227b565b6001546001600160a01b0316611c9b611d60565b6001600160a01b03161480611cca57506002546001600160a01b0316611cbf611d60565b6001600160a01b0316145b611ce65760405162461bcd60e51b815260040161077b90613515565b6001600160a01b0381161561193f57600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b6000611d7382611d43565b611d8f5760405162461bcd60e51b815260040161077b90613545565b6000611d9a83610f9d565b9050806001600160a01b0316846001600160a01b03161480611dd55750836001600160a01b0316611dca84610754565b6001600160a01b0316145b80611de55750611de58185611d15565b949350505050565b6000818152600a60205260408120546001600160a01b03908116908516811480611e285750806001600160a01b0316846001600160a01b0316145b15611e37576000915050611e3d565b60019150505b9392505050565b826001600160a01b0316611e5782610f9d565b6001600160a01b031614611e7d5760405162461bcd60e51b815260040161077b90613565565b6001600160a01b038216611ea35760405162461bcd60e51b815260040161077b90613495565b611eac8161235a565b6001600160a01b0383166000908152600760205260409020611ecd90612395565b6001600160a01b0382166000908152600760205260409020611eee906123ac565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61193f611f5682610f9d565b826123b5565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe6178391611f909186918a9101613616565b60206040518083038186803b158015611fa857600080fd5b505afa158015611fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe09190810190612acf565b611ffc5760405162461bcd60e51b815260040161077b906134e5565b8365ffffffffffff168365ffffffffffff161161202b5760405162461bcd60e51b815260040161077b90613525565b506001949350505050565b6000806120428461227b565b905061205160008583866124aa565b611e3d5760405162461bcd60e51b815260040161077b90613485565b61207685611d43565b6120925760405162461bcd60e51b815260040161077b90613545565b61209a61281c565b6040518060a001604052806120ad611d60565b6001600160a01b031681526020018681526020018565ffffffffffff1681526020018465ffffffffffff168152602001831515815250905080600a600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101908051906020019061214292919061279e565b5060408201516002919091018054606084015160809094015165ffffffffffff1990911665ffffffffffff938416176bffffffffffff000000000000191666010000000000009390941692909202929092176cff0000000000000000000000001916600160601b911515919091021790556121bc85612575565b610a3f57600b60006121cc611d60565b6001600160a01b03168152602080820192909252604090810160009081208251808501909352888352805460018101808355918352918490208351805192959190930192612220928492919091019061279e565b50505050505050505050565b600080611e3d8360405180602001604052806000815250612036565b612253848484611e44565b61225f848484846124aa565b610d315760405162461bcd60e51b815260040161077b90613485565b60006001600160a01b0382166122a35760405162461bcd60e51b815260040161077b90613465565b6122ad60056123ac565b60006122b96005611d64565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506122fb906123ac565b6001600160a01b038316600090815260086020526040902061231c906123ac565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000818152600d60205260409020546001600160a01b03161561193f576000908152600d6020526040902080546001600160a01b0319169055565b80546123a890600163ffffffff6126a016565b9055565b80546001019055565b816001600160a01b03166123c882610f9d565b6001600160a01b0316146123ee5760405162461bcd60e51b815260040161077b906134b5565b6123f78161235a565b6001600160a01b038216600090815260076020526040902061241890612395565b600081815260066020908152604080832080546001600160a01b0319908116909155600a90925282208054909116815590612456600183018261284b565b5060020180546cffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006124be846001600160a01b03166126e2565b6124ca57506001611de5565b6000846001600160a01b031663150b7a026124e3611d60565b8887876040518563ffffffff1660e01b815260040161250594939291906133d2565b602060405180830381600087803b15801561251f57600080fd5b505af1158015612533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125579190810190612b0b565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b8282101561265757600084815260209081902060408051918501805460026001821615610100026000190190911604601f810185900485028401830183529383018481529293909284929091849184018282801561263f5780601f106126145761010080835404028352916020019161263f565b820191906000526020600020905b81548152906001019060200180831161262257829003601f168201915b505050505081525050815260200190600101906125a0565b5092935060009250829150505b825181101561165d5761268e8584838151811061267d57fe5b602002602001015160000151612719565b1561269857600191505b600101612664565b6000611e3d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612772565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611de55750141592915050565b60008160405160200161272c919061331c565b6040516020818303038152906040528051906020012083604051602001612753919061331c565b6040516020818303038152906040528051906020012014905092915050565b600081848411156127965760405162461bcd60e51b815260040161077b9190613454565b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127df57805160ff191683800117855561280c565b8280016001018555821561280c579182015b8281111561280c5782518255916020019190600101906127f1565b5061281892915061288b565b5090565b6040805160a0810182526000808252606060208301819052928201819052918101829052608081019190915290565b50805460018160011615610100020316600290046000825580601f10612871575061193f565b601f01602090049060005260206000209081019061193f91905b61075191905b808211156128185760008155600101612891565b80356110018161372e565b803561100181613742565b805161100181613742565b80356110018161374b565b80516110018161374b565b600082601f8301126128ed57600080fd5b81356129006128fb8261365d565b613636565b9150808252602083016020830185838301111561291c57600080fd5b6129278382846136ec565b50505092915050565b803561100181613754565b80356110018161375d565b803561100181613766565b60006020828403121561296357600080fd5b6000611de584846128a5565b6000806040838503121561298257600080fd5b600061298e85856128a5565b925050602061299f858286016128a5565b9150509250929050565b6000806000606084860312156129be57600080fd5b60006129ca86866128a5565b93505060206129db868287016128a5565b92505060406129ec86828701612930565b9150509250925092565b60008060008060808587031215612a0c57600080fd5b6000612a1887876128a5565b9450506020612a29878288016128a5565b9350506040612a3a87828801612930565b925050606085013567ffffffffffffffff811115612a5757600080fd5b612a63878288016128dc565b91505092959194509250565b60008060408385031215612a8257600080fd5b6000612a8e85856128a5565b925050602061299f858286016128b0565b60008060408385031215612ab257600080fd5b6000612abe85856128a5565b925050602061299f85828601612930565b600060208284031215612ae157600080fd5b6000611de584846128bb565b600060208284031215612aff57600080fd5b6000611de584846128c6565b600060208284031215612b1d57600080fd5b6000611de584846128d1565b600060208284031215612b3b57600080fd5b813567ffffffffffffffff811115612b5257600080fd5b611de5848285016128dc565b600080600080600060a08688031215612b7657600080fd5b853567ffffffffffffffff811115612b8d57600080fd5b612b99888289016128dc565b9550506020612baa88828901612946565b9450506040612bbb88828901612946565b9350506060612bcc888289016128b0565b9250506080612bdd8882890161293b565b9150509295509295909350565b60008060008060008060c08789031215612c0357600080fd5b863567ffffffffffffffff811115612c1a57600080fd5b612c2689828a016128dc565b9650506020612c3789828a01612946565b9550506040612c4889828a01612946565b9450506060612c5989828a016128b0565b9350506080612c6a89828a0161293b565b92505060a087013567ffffffffffffffff811115612c8757600080fd5b612c9389828a016128dc565b9150509295509295509295565b600060208284031215612cb257600080fd5b6000611de58484612930565b6000611e3d8383612dbd565b6000612cd683836132f0565b505060200190565b612ce7816136a4565b82525050565b6000612cf882613697565b612d02818561369b565b935083602082028501612d1485613685565b8060005b85811015612d4e5784840389528151612d318582612cbe565b9450612d3c83613685565b60209a909a0199925050600101612d18565b5091979650505050505050565b6000612d6682613697565b612d70818561369b565b9350612d7b83613685565b8060005b83811015612da9578151612d938882612cca565b9750612d9e83613685565b925050600101612d7f565b509495945050505050565b612ce7816136af565b6000612dc882613697565b612dd2818561369b565b9350612de28185602086016136f8565b612deb81613724565b9093019392505050565b612ce7816136e1565b6000612e0982613697565b612e1381856106b8565b9350612e238185602086016136f8565b9290920192915050565b600081546001811660008114612e4a5760018114612e6d57612eac565b607f6002830416612e5b81876106b8565b60ff1984168152955085019250612eac565b60028204612e7b81876106b8565b9550612e868561368b565b60005b82811015612ea557815488820152600190910190602001612e89565b5050850192505b505092915050565b6000612ec160148361369b565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000612efa601a8361369b565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000612f33602a8361369b565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b6000612f7f60188361369b565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000612fb860198361369b565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b6000612ff160118361369b565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b600061302a60158361369b565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b6000613063600f8361369b565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b600061309c60238361369b565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b60006130e1601a8361369b565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b600061311a60158361369b565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b600061315360138361369b565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b600061318c60198361369b565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006110016000836106b8565b60006131d260118361369b565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b600061320b60128361369b565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b600061324460258361369b565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b600061328b60158361369b565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b60006132c460158361369b565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b612ce781610751565b612ce761330582610751565b610751565b612ce7816136cd565b612ce7816136d6565b6000611e3d8284612dfe565b60006133348285612e2d565b915061334082846132f9565b5060200192915050565b6000611001826131b8565b602081016110018284612cde565b60e08101613371828a612cde565b61337e6020830189612cde565b81810360408301526133908188612dbd565b905061339f6060830187613313565b6133ac6080830186613313565b6133b960a0830185612db4565b6133c660c083018461330a565b98975050505050505050565b608081016133e08287612cde565b6133ed6020830186612cde565b6133fa60408301856132f0565b818103606083015261340c8184612dbd565b9695505050505050565b60208082528101611e3d8184612ced565b60208082528101611e3d8184612d5b565b602081016110018284612db4565b602081016110018284612df5565b60208082528101611e3d8184612dbd565b6020808252810161100181612eb4565b6020808252810161100181612eed565b6020808252810161100181612f26565b6020808252810161100181612f72565b6020808252810161100181612fab565b6020808252810161100181612fe4565b602080825281016110018161301d565b6020808252810161100181613056565b602080825281016110018161308f565b60208082528101611001816130d4565b602080825281016110018161310d565b6020808252810161100181613146565b602080825281016110018161317f565b60208082528101611001816131c5565b60208082528101611001816131fe565b6020808252810161100181613237565b602080825281016110018161327e565b60208082528101611001816132b7565b6020810161100182846132f0565b60208101611001828461330a565b604081016135af828561330a565b611e3d6020830184612cde565b60c081016135ca828961330a565b6135d76020830188612cde565b6135e46040830187612cde565b6135f160608301866132f0565b6135fe6080830185612cde565b61360b60a0830184612cde565b979650505050505050565b60408101613624828561330a565b8181036020830152611de58184612dbd565b60405181810167ffffffffffffffff8111828210171561365557600080fd5b604052919050565b600067ffffffffffffffff82111561367457600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611001826136c1565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b6000611001826136a4565b82818337506000910152565b60005b838110156137135781810151838201526020016136fb565b83811115610d315750506000910152565b601f01601f191690565b613737816136a4565b811461193f57600080fd5b613737816136af565b613737816136b4565b61373781610751565b613737816136cd565b613737816136d656fea365627a7a723158201fc3c44006dcf823538e7f75160fbb23c158d93becdfa0a034403b52ba7f75576c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x60806040526004361061021a5760003560e01c80637368891411610123578063a4ede128116100ab578063e4bacbc51161006f578063e4bacbc5146105ff578063e5c2492414610614578063e89fecc014610647578063e982d5a91461065a578063e985e9c51461067a5761021a565b8063a4ede12814610552578063b88d4fde1461057f578063c57a88251461059f578063c87b56dd146105bf578063e2b375a9146105df5761021a565b80638456cb59116100f25780638456cb59146104d55780638462151c146104ea57806395d89b411461050a578063a002c3761461051f578063a22cb465146105325761021a565b8063736889141461045e578063748b0fa1146104735780637b1039991461049357806384017e52146104b55761021a565b80633f4ba83a116101a65780635a393bc2116101755780635a393bc2146103e15780635c975abb146103f45780635fd8c710146104095780636352211e1461041e57806370a082311461043e5761021a565b80633f4ba83a1461037757806342842e0e1461038c57806342966c68146103ac57806352709725146103cc5761021a565b806313966db5116101ed57806313966db5146102c6578063180b9e3f146102e857806318160ddd1461031557806323b872dd1461032a5780632a0c77991461034a5761021a565b806301ffc9a71461021f57806306fdde0314610255578063081812fc14610277578063095ea7b3146102a4575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612aed565b61069a565b60405161024c9190613438565b60405180910390f35b34801561026157600080fd5b5061026a6106bd565b60405161024c9190613454565b34801561028357600080fd5b50610297610292366004612ca0565b610754565b60405161024c9190613355565b3480156102b057600080fd5b506102c46102bf366004612a9f565b6107a0565b005b3480156102d257600080fd5b506102db61089c565b60405161024c9190613585565b3480156102f457600080fd5b50610308610303366004612ca0565b6108a2565b60405161024c9190613593565b34801561032157600080fd5b506102db6108ba565b34801561033657600080fd5b506102c46103453660046129a9565b6108cb565b34801561035657600080fd5b5061036a610365366004612951565b610a47565b60405161024c9190613427565b34801561038357600080fd5b506102c4610b4f565b34801561039857600080fd5b506102c46103a73660046129a9565b610bd3565b3480156103b857600080fd5b506102c46103c7366004612ca0565b610bf3565b3480156103d857600080fd5b50610297610d37565b6102db6103ef366004612bea565b610d46565b34801561040057600080fd5b5061023f610eb1565b34801561041557600080fd5b506102c4610ec1565b34801561042a57600080fd5b50610297610439366004612ca0565b610f9d565b34801561044a57600080fd5b506102db610459366004612951565b610fb8565b34801561046a57600080fd5b50610297611007565b34801561047f57600080fd5b506102c461048e366004612b29565b611016565b34801561049f57600080fd5b506104a8611088565b60405161024c9190613446565b3480156104c157600080fd5b506102c46104d0366004612ca0565b611097565b3480156104e157600080fd5b506102c46110fb565b3480156104f657600080fd5b5061036a610505366004612951565b611186565b34801561051657600080fd5b5061026a611240565b6102db61052d366004612b5e565b6112a1565b34801561053e57600080fd5b506102c461054d366004612a6f565b61140a565b34801561055e57600080fd5b5061057261056d366004612951565b6114ef565b60405161024c9190613416565b34801561058b57600080fd5b506102c461059a3660046129f6565b611665565b3480156105ab57600080fd5b506102c46105ba366004612951565b6117e3565b3480156105cb57600080fd5b5061026a6105da366004612ca0565b611864565b3480156105eb57600080fd5b506102c46105fa366004612951565b6118b5565b34801561060b57600080fd5b5061026a611942565b34801561062057600080fd5b5061063461062f366004612ca0565b6119d0565b60405161024c9796959493929190613363565b6102db610655366004612b5e565b611b5b565b34801561066657600080fd5b506102c4610675366004612951565b611c87565b34801561068657600080fd5b5061023f61069536600461296f565b611d15565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600f8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b820191906000526020600020905b81548152906001019060200180831161072c57829003601f168201915b505050505090505b90565b600061075f82611d43565b6107845760405162461bcd60e51b815260040161077b90613545565b60405180910390fd5b506000908152600d60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107b757600080fd5b60006107c282610f9d565b9050806001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161077b906134c5565b806001600160a01b0316610808611d60565b6001600160a01b03161480610824575061082481610695611d60565b6108405760405162461bcd60e51b815260040161077b90613575565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108c66005611d64565b905090565b600254600160a01b900460ff16156108e257600080fd5b6108f36108ed611d60565b82611d68565b61090f5760405162461bcd60e51b815260040161077b90613565565b6000818152600a60205260408120546001600160a01b03169061093183610f9d565b600084815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff1661098f57610972868686611ded565b1561098f5760405162461bcd60e51b815260040161077b90613475565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109c89185918b918b918b918b918b91016135bc565b60206040518083038186803b1580156109e057600080fd5b505afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a189190810190612acf565b610a345760405162461bcd60e51b815260040161077b90613565565b610a3f868686611e44565b505050505050565b60606001600160a01b038216610a6f5760405162461bcd60e51b815260040161077b906134a5565b6001600160a01b0382166000908152600860205260408120610a9090611d64565b905080610ab25760408051600080825260208201909252905b509150506106b8565b606081604051908082528060200260200182016040528015610ade578160200160208202803883390190505b5090506000610aeb6108ba565b9050600060015b828111610b42576000818152600a60205260409020546001600160a01b0388811691161415610b3a5780848381518110610b2857fe5b60209081029190910101526001909101905b600101610af2565b83955050505050506106b8565b6001546001600160a01b0316610b63611d60565b6001600160a01b03161480610b9257506002546001600160a01b0316610b87611d60565b6001600160a01b0316145b610bae5760405162461bcd60e51b815260040161077b90613515565b600254600160a01b900460ff16610bc457600080fd5b6002805460ff60a01b19169055565b610bee83838360405180602001604052806000815250611665565b505050565b600254600160a01b900460ff1615610c0a57600080fd5b6000818152600a60205260408120546001600160a01b031690610c2c83610f9d565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415610cfb576004546001600160a01b03166312d26ac882610c72611d60565b6040518363ffffffff1660e01b8152600401610c8f9291906135a1565b60206040518083038186803b158015610ca757600080fd5b505afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cdf9190810190612acf565b610cfb5760405162461bcd60e51b815260040161077b906134b5565b610d0c610d06611d60565b85611d68565b610d285760405162461bcd60e51b815260040161077b906134b5565b610d3184611f4a565b50505050565b6002546001600160a01b031681565b600254600090600160a01b900460ff1615610d6057600080fd5b600354341015610d6f57600080fd5b60008363ffffffff1611610d955760405162461bcd60e51b815260040161077b90613505565b6004546001600160a01b03166312d26ac884610daf611d60565b6040518363ffffffff1660e01b8152600401610dcc9291906135a1565b60206040518083038186803b158015610de457600080fd5b505afa158015610df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e1c9190810190612acf565b610e385760405162461bcd60e51b815260040161077b90613555565b610e4487878786611f5c565b610e605760405162461bcd60e51b815260040161077b90613535565b6000610e73610e6d611d60565b84612036565b9050610e82818989898961206d565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509695505050505050565b600254600160a01b900460ff1681565b6001546001600160a01b0316610ed5611d60565b6001600160a01b03161480610f0457506002546001600160a01b0316610ef9611d60565b6001600160a01b0316145b610f205760405162461bcd60e51b815260040161077b90613515565b60405130319060009033908390610f369061334a565b60006040518083038185875af1925050503d8060008114610f73576040519150601f19603f3d011682016040523d82523d6000602084013e610f78565b606091505b5050905080610f995760405162461bcd60e51b815260040161077b906134d5565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b038216610fe05760405162461bcd60e51b815260040161077b906134a5565b6001600160a01b038216600090815260076020526040902061100190611d64565b92915050565b6001546001600160a01b031681565b6001546001600160a01b031661102a611d60565b6001600160a01b0316148061105957506002546001600160a01b031661104e611d60565b6001600160a01b0316145b6110755760405162461bcd60e51b815260040161077b90613515565b8051610f9990600c90602084019061279e565b6004546001600160a01b031681565b6001546001600160a01b03166110ab611d60565b6001600160a01b031614806110da57506002546001600160a01b03166110cf611d60565b6001600160a01b0316145b6110f65760405162461bcd60e51b815260040161077b90613515565b600355565b6001546001600160a01b031661110f611d60565b6001600160a01b0316148061113e57506002546001600160a01b0316611133611d60565b6001600160a01b0316145b61115a5760405162461bcd60e51b815260040161077b90613515565b600254600160a01b900460ff161561117157600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061119383610fb8565b9050806111b0576040805160008082526020820190925290610aa9565b6060816040519080825280602002602001820160405280156111dc578160200160208202803883390190505b50905060006111e96108ba565b9050600060015b828111610b42576000818152600660205260409020546001600160a01b0388811691161415611238578084838151811061122657fe5b60209081029190910101526001909101905b6001016111f0565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b600254600090600160a01b900460ff16156112bb57600080fd5b6003543410156112ca57600080fd5b60008263ffffffff16116112f05760405162461bcd60e51b815260040161077b90613505565b6004546001600160a01b03166312d26ac88361130a611d60565b6040518363ffffffff1660e01b81526004016113279291906135a1565b60206040518083038186803b15801561133f57600080fd5b505afa158015611353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113779190810190612acf565b6113935760405162461bcd60e51b815260040161077b90613555565b61139f86868685611f5c565b6113bb5760405162461bcd60e51b815260040161077b90613535565b60006113cd6113c8611d60565b61222c565b90506113dc818888888861206d565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905095945050505050565b600254600160a01b900460ff161561142157600080fd5b611429611d60565b6001600160a01b0316826001600160a01b0316141561145a5760405162461bcd60e51b815260040161077b906134f5565b80600e6000611467611d60565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556114ab611d60565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114e39190613438565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b828210156115da57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115c25780601f10611597576101008083540402835291602001916115c2565b820191906000526020600020905b8154815290600101906020018083116115a557829003601f168201915b50505050508152505081526020019060010190611523565b5050505090506060815160405190808252806020026020018201604052801561161757816020015b60608152602001906001900390816116025790505b50905060005b825181101561165d5782818151811061163257fe5b60200260200101516000015182828151811061164a57fe5b602090810291909101015260010161161d565b509392505050565b600254600160a01b900460ff161561167c57600080fd5b61168d611687611d60565b83611d68565b6116a95760405162461bcd60e51b815260040161077b90613565565b6000828152600a60205260408120546001600160a01b0316906116cb84610f9d565b600085815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff166117295761170c878787611ded565b156117295760405162461bcd60e51b815260040161077b90613475565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916117629185918c918c918c918b918b91016135bc565b60206040518083038186803b15801561177a57600080fd5b505afa15801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117b29190810190612acf565b6117ce5760405162461bcd60e51b815260040161077b90613565565b6117da87878787612248565b50505050505050565b6001546001600160a01b03166117f7611d60565b6001600160a01b0316148061182657506002546001600160a01b031661181b611d60565b6001600160a01b0316145b6118425760405162461bcd60e51b815260040161077b90613515565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b606061186f82611d43565b61188b5760405162461bcd60e51b815260040161077b90613545565b600c8260405160200161189f929190613328565b6040516020818303038152906040529050919050565b6001546001600160a01b03166118c9611d60565b6001600160a01b031614806118f857506002546001600160a01b03166118ed611d60565b6001600160a01b0316145b6119145760405162461bcd60e51b815260040161077b90613515565b6001600160a01b0381161561193f57600280546001600160a01b0319166001600160a01b0383161790555b50565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156119c85780601f1061199d576101008083540402835291602001916119c8565b820191906000526020600020905b8154815290600101906020018083116119ab57829003601f168201915b505050505081565b60008060606000806000806119e488611d43565b611a005760405162461bcd60e51b815260040161077b90613545565b611a0861281c565b6000898152600a6020908152604091829020825160a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611ac05780601f10611a9557610100808354040283529160200191611ac0565b820191906000526020600020905b815481529060010190602001808311611aa357829003601f168201915b50505091835250506002919091015465ffffffffffff80821660208085019190915266010000000000008304909116604080850191909152600160601b90920460ff16151560609093019290925260008c81526009909252902054815191925063ffffffff1690611b308b610f9d565b602084015160408501516060860151608090960151939e929d50909b50995092975095509350915050565b600254600090600160a01b900460ff1615611b7557600080fd5b600354341015611b8457600080fd5b60008263ffffffff1611611baa5760405162461bcd60e51b815260040161077b90613505565b6004546001600160a01b03166312d26ac883611bc4611d60565b6040518363ffffffff1660e01b8152600401611be19291906135a1565b60206040518083038186803b158015611bf957600080fd5b505afa158015611c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c319190810190612acf565b611c4d5760405162461bcd60e51b815260040161077b90613555565b611c5986868685611f5c565b611c755760405162461bcd60e51b815260040161077b90613535565b60006113cd611c82611d60565b61227b565b6001546001600160a01b0316611c9b611d60565b6001600160a01b03161480611cca57506002546001600160a01b0316611cbf611d60565b6001600160a01b0316145b611ce65760405162461bcd60e51b815260040161077b90613515565b6001600160a01b0381161561193f57600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b6000611d7382611d43565b611d8f5760405162461bcd60e51b815260040161077b90613545565b6000611d9a83610f9d565b9050806001600160a01b0316846001600160a01b03161480611dd55750836001600160a01b0316611dca84610754565b6001600160a01b0316145b80611de55750611de58185611d15565b949350505050565b6000818152600a60205260408120546001600160a01b03908116908516811480611e285750806001600160a01b0316846001600160a01b0316145b15611e37576000915050611e3d565b60019150505b9392505050565b826001600160a01b0316611e5782610f9d565b6001600160a01b031614611e7d5760405162461bcd60e51b815260040161077b90613565565b6001600160a01b038216611ea35760405162461bcd60e51b815260040161077b90613495565b611eac8161235a565b6001600160a01b0383166000908152600760205260409020611ecd90612395565b6001600160a01b0382166000908152600760205260409020611eee906123ac565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61193f611f5682610f9d565b826123b5565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe6178391611f909186918a9101613616565b60206040518083038186803b158015611fa857600080fd5b505afa158015611fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe09190810190612acf565b611ffc5760405162461bcd60e51b815260040161077b906134e5565b8365ffffffffffff168365ffffffffffff161161202b5760405162461bcd60e51b815260040161077b90613525565b506001949350505050565b6000806120428461227b565b905061205160008583866124aa565b611e3d5760405162461bcd60e51b815260040161077b90613485565b61207685611d43565b6120925760405162461bcd60e51b815260040161077b90613545565b61209a61281c565b6040518060a001604052806120ad611d60565b6001600160a01b031681526020018681526020018565ffffffffffff1681526020018465ffffffffffff168152602001831515815250905080600a600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101908051906020019061214292919061279e565b5060408201516002919091018054606084015160809094015165ffffffffffff1990911665ffffffffffff938416176bffffffffffff000000000000191666010000000000009390941692909202929092176cff0000000000000000000000001916600160601b911515919091021790556121bc85612575565b610a3f57600b60006121cc611d60565b6001600160a01b03168152602080820192909252604090810160009081208251808501909352888352805460018101808355918352918490208351805192959190930192612220928492919091019061279e565b50505050505050505050565b600080611e3d8360405180602001604052806000815250612036565b612253848484611e44565b61225f848484846124aa565b610d315760405162461bcd60e51b815260040161077b90613485565b60006001600160a01b0382166122a35760405162461bcd60e51b815260040161077b90613465565b6122ad60056123ac565b60006122b96005611d64565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506122fb906123ac565b6001600160a01b038316600090815260086020526040902061231c906123ac565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000818152600d60205260409020546001600160a01b03161561193f576000908152600d6020526040902080546001600160a01b0319169055565b80546123a890600163ffffffff6126a016565b9055565b80546001019055565b816001600160a01b03166123c882610f9d565b6001600160a01b0316146123ee5760405162461bcd60e51b815260040161077b906134b5565b6123f78161235a565b6001600160a01b038216600090815260076020526040902061241890612395565b600081815260066020908152604080832080546001600160a01b0319908116909155600a90925282208054909116815590612456600183018261284b565b5060020180546cffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006124be846001600160a01b03166126e2565b6124ca57506001611de5565b6000846001600160a01b031663150b7a026124e3611d60565b8887876040518563ffffffff1660e01b815260040161250594939291906133d2565b602060405180830381600087803b15801561251f57600080fd5b505af1158015612533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125579190810190612b0b565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b8282101561265757600084815260209081902060408051918501805460026001821615610100026000190190911604601f810185900485028401830183529383018481529293909284929091849184018282801561263f5780601f106126145761010080835404028352916020019161263f565b820191906000526020600020905b81548152906001019060200180831161262257829003601f168201915b505050505081525050815260200190600101906125a0565b5092935060009250829150505b825181101561165d5761268e8584838151811061267d57fe5b602002602001015160000151612719565b1561269857600191505b600101612664565b6000611e3d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612772565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611de55750141592915050565b60008160405160200161272c919061331c565b6040516020818303038152906040528051906020012083604051602001612753919061331c565b6040516020818303038152906040528051906020012014905092915050565b600081848411156127965760405162461bcd60e51b815260040161077b9190613454565b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127df57805160ff191683800117855561280c565b8280016001018555821561280c579182015b8281111561280c5782518255916020019190600101906127f1565b5061281892915061288b565b5090565b6040805160a0810182526000808252606060208301819052928201819052918101829052608081019190915290565b50805460018160011615610100020316600290046000825580601f10612871575061193f565b601f01602090049060005260206000209081019061193f91905b61075191905b808211156128185760008155600101612891565b80356110018161372e565b803561100181613742565b805161100181613742565b80356110018161374b565b80516110018161374b565b600082601f8301126128ed57600080fd5b81356129006128fb8261365d565b613636565b9150808252602083016020830185838301111561291c57600080fd5b6129278382846136ec565b50505092915050565b803561100181613754565b80356110018161375d565b803561100181613766565b60006020828403121561296357600080fd5b6000611de584846128a5565b6000806040838503121561298257600080fd5b600061298e85856128a5565b925050602061299f858286016128a5565b9150509250929050565b6000806000606084860312156129be57600080fd5b60006129ca86866128a5565b93505060206129db868287016128a5565b92505060406129ec86828701612930565b9150509250925092565b60008060008060808587031215612a0c57600080fd5b6000612a1887876128a5565b9450506020612a29878288016128a5565b9350506040612a3a87828801612930565b925050606085013567ffffffffffffffff811115612a5757600080fd5b612a63878288016128dc565b91505092959194509250565b60008060408385031215612a8257600080fd5b6000612a8e85856128a5565b925050602061299f858286016128b0565b60008060408385031215612ab257600080fd5b6000612abe85856128a5565b925050602061299f85828601612930565b600060208284031215612ae157600080fd5b6000611de584846128bb565b600060208284031215612aff57600080fd5b6000611de584846128c6565b600060208284031215612b1d57600080fd5b6000611de584846128d1565b600060208284031215612b3b57600080fd5b813567ffffffffffffffff811115612b5257600080fd5b611de5848285016128dc565b600080600080600060a08688031215612b7657600080fd5b853567ffffffffffffffff811115612b8d57600080fd5b612b99888289016128dc565b9550506020612baa88828901612946565b9450506040612bbb88828901612946565b9350506060612bcc888289016128b0565b9250506080612bdd8882890161293b565b9150509295509295909350565b60008060008060008060c08789031215612c0357600080fd5b863567ffffffffffffffff811115612c1a57600080fd5b612c2689828a016128dc565b9650506020612c3789828a01612946565b9550506040612c4889828a01612946565b9450506060612c5989828a016128b0565b9350506080612c6a89828a0161293b565b92505060a087013567ffffffffffffffff811115612c8757600080fd5b612c9389828a016128dc565b9150509295509295509295565b600060208284031215612cb257600080fd5b6000611de58484612930565b6000611e3d8383612dbd565b6000612cd683836132f0565b505060200190565b612ce7816136a4565b82525050565b6000612cf882613697565b612d02818561369b565b935083602082028501612d1485613685565b8060005b85811015612d4e5784840389528151612d318582612cbe565b9450612d3c83613685565b60209a909a0199925050600101612d18565b5091979650505050505050565b6000612d6682613697565b612d70818561369b565b9350612d7b83613685565b8060005b83811015612da9578151612d938882612cca565b9750612d9e83613685565b925050600101612d7f565b509495945050505050565b612ce7816136af565b6000612dc882613697565b612dd2818561369b565b9350612de28185602086016136f8565b612deb81613724565b9093019392505050565b612ce7816136e1565b6000612e0982613697565b612e1381856106b8565b9350612e238185602086016136f8565b9290920192915050565b600081546001811660008114612e4a5760018114612e6d57612eac565b607f6002830416612e5b81876106b8565b60ff1984168152955085019250612eac565b60028204612e7b81876106b8565b9550612e868561368b565b60005b82811015612ea557815488820152600190910190602001612e89565b5050850192505b505092915050565b6000612ec160148361369b565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000612efa601a8361369b565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000612f33602a8361369b565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b6000612f7f60188361369b565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000612fb860198361369b565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b6000612ff160118361369b565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b600061302a60158361369b565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b6000613063600f8361369b565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b600061309c60238361369b565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b60006130e1601a8361369b565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b600061311a60158361369b565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b600061315360138361369b565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b600061318c60198361369b565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006110016000836106b8565b60006131d260118361369b565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b600061320b60128361369b565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b600061324460258361369b565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b600061328b60158361369b565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b60006132c460158361369b565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b612ce781610751565b612ce761330582610751565b610751565b612ce7816136cd565b612ce7816136d6565b6000611e3d8284612dfe565b60006133348285612e2d565b915061334082846132f9565b5060200192915050565b6000611001826131b8565b602081016110018284612cde565b60e08101613371828a612cde565b61337e6020830189612cde565b81810360408301526133908188612dbd565b905061339f6060830187613313565b6133ac6080830186613313565b6133b960a0830185612db4565b6133c660c083018461330a565b98975050505050505050565b608081016133e08287612cde565b6133ed6020830186612cde565b6133fa60408301856132f0565b818103606083015261340c8184612dbd565b9695505050505050565b60208082528101611e3d8184612ced565b60208082528101611e3d8184612d5b565b602081016110018284612db4565b602081016110018284612df5565b60208082528101611e3d8184612dbd565b6020808252810161100181612eb4565b6020808252810161100181612eed565b6020808252810161100181612f26565b6020808252810161100181612f72565b6020808252810161100181612fab565b6020808252810161100181612fe4565b602080825281016110018161301d565b6020808252810161100181613056565b602080825281016110018161308f565b60208082528101611001816130d4565b602080825281016110018161310d565b6020808252810161100181613146565b602080825281016110018161317f565b60208082528101611001816131c5565b60208082528101611001816131fe565b6020808252810161100181613237565b602080825281016110018161327e565b60208082528101611001816132b7565b6020810161100182846132f0565b60208101611001828461330a565b604081016135af828561330a565b611e3d6020830184612cde565b60c081016135ca828961330a565b6135d76020830188612cde565b6135e46040830187612cde565b6135f160608301866132f0565b6135fe6080830185612cde565b61360b60a0830184612cde565b979650505050505050565b60408101613624828561330a565b8181036020830152611de58184612dbd565b60405181810167ffffffffffffffff8111828210171561365557600080fd5b604052919050565b600067ffffffffffffffff82111561367457600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611001826136c1565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b6000611001826136a4565b82818337506000910152565b60005b838110156137135781810151838201526020016136fb565b83811115610d315750506000910152565b601f01601f191690565b613737816136a4565b811461193f57600080fd5b613737816136af565b613737816136b4565b61373781610751565b613737816136cd565b613737816136d656fea365627a7a723158201fc3c44006dcf823538e7f75160fbb23c158d93becdfa0a034403b52ba7f75576c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "1437:26:3:-;;;-1:-1:-1;;;;1437:26:3;;;1576:15;1551:40;;3651:34;850:1239:8;3651:34:3;;;1458:5;850:1239:8;3651:34:3;;;;;;;;:::i;:::-;;1366:336:8;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;5261::3;5280:20;-1:-1:-1;;;;;5261:18:3;:40;:::i;:::-;5381:12;-1:-1:-1;;;;;5381:10:3;:12;:::i;:::-;5372:6;:21;;-1:-1:-1;;;;;;5372:21:3;-1:-1:-1;;;;;5372:21:3;;;;;;;;;;5412:12;:10;:12::i;:::-;5403:6;:21;;-1:-1:-1;;;;;;5403:21:3;-1:-1:-1;;;;;5403:21:3;;;;;;;;;;1464:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1486:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1590:49:8;1609:29;-1:-1:-1;;;;;1590:18:8;:49;:::i;:::-;1650:44;1678:15;1650:27;;;;;:44;;:::i;:::-;1366:336;;;850:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;5898:90:3:-;5970:10;5898:90;;:::o;7224:144::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;-1:-1:-1;;;;;6463:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;-1:-1:-1;;;;;6491:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;;;;;;;;;;;7322:8;:39;;-1:-1:-1;;;;;;7322:39:3;-1:-1:-1;;;;;7322:39:3;;;;;;;;;;7224:144::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;850:1239:8;;;;;;",
  "deployedSourceMap": "850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1807:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:83:8;;;:::i;:::-;;;;;;;;22504:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22504:210:3;;;;;;;;:::i;:::-;;;;;;;;21742:477;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21742:477:3;;;;;;;;:::i;:::-;;1551:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:40:3;;;:::i;:::-;;;;;;;;2429:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2429:54:3;;;;;;;;:::i;:::-;;;;;;;;19103:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19103:98:3;;;:::i;24254:829::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24254:829:3;;;;;;;;:::i;17996:973::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17996:973:3;;;;;;;;:::i;:::-;;;;;;;;8359:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8359:78:3;;;:::i;25732:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25732:134:3;;;;;;;;:::i;32083:550::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32083:550:3;;;;;;;;:::i;1326:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1326:21:3;;;:::i;10902:901::-;;;;;;;;;:::i;1437:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:26:3;;;:::i;8502:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8502:305:3;;;:::i;19870:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19870:152:3;;;;;;;;:::i;19410:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19410:241:3;;;;;;;;:::i;1299:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1299:21:3;;;:::i;7640:127::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7640:127:3;;;;;;;;:::i;1769:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1769:32:3;;;:::i;:::-;;;;;;;;7461:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7461:105:3;;;;;;;;:::i;8203:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8203:78:3;;;:::i;20440:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20440:840:3;;;;;;;;:::i;1999:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:87:8;;;:::i;9873:868:3:-;;;;;;;;;:::i;23007:286::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23007:286:3;;;;;;;;:::i;17256:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17256:330:3;;;;;;;;:::i;:::-;;;;;;;;26588:862;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26588:862:3;;;;;;;;:::i;7224:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7224:144:3;;;;;;;;:::i;14104:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14104:241:3;;;;;;;;:::i;6902:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6902:169:3;;;;;;;;:::i;3651:34::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3651:34:3;;;:::i;16084:752::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16084:752:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8923:860;;;;;;;;;:::i;6726:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6726:169:3;;;;;;;;:::i;23632:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23632:185:3;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1807:83:8:-;1878:5;1871:12;;;;;;;;-1:-1:-1;;1871:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:13;;1871:12;;1878:5;;1871:12;;1878:5;1871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:83;;:::o;22504:210:3:-;22563:7;22604:16;22612:7;22604;:16::i;:::-;22583:81;;;;-1:-1:-1;;;22583:81:3;;;;;;;;;;;;;;;;;-1:-1:-1;22682:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;22682:24:3;;22504:210::o;21742:477::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;21840:18;21861:16;21869:7;21861;:16::i;:::-;21840:37;;21915:10;-1:-1:-1;;;;;21909:16:3;:2;-1:-1:-1;;;;;21909:16:3;;;21888:84;;;;-1:-1:-1;;;21888:84:3;;;;;;;;;22020:10;-1:-1:-1;;;;;22004:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;22004:26:3;;:72;;;;22034:42;22051:10;22063:12;:10;:12::i;22034:42::-;21983:140;;;;-1:-1:-1;;;21983:140:3;;;;;;;;;22134:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;22134:29:3;-1:-1:-1;;;;;22134:29:3;;;;;;;;;22178:33;;22134:24;;22178:33;;;;;;;7978:1;21742:477;;:::o;1551:40::-;;;;:::o;2429:54::-;;;;;;;;;;;;;;;:::o;19103:98::-;19147:7;19174:19;:9;:17;:19::i;:::-;19167:26;;19103:98;:::o;24254:829::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;24392:41;24411:12;:10;:12::i;:::-;24425:7;24392:18;:41::i;:::-;24371:109;;;;-1:-1:-1;;;24371:109:3;;;;;;;;;24491:14;24508:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;24508:32:3;;24566:16;24525:7;24566;:16::i;:::-;24592:19;24614:28;;;:19;:28;;;;;;;;;24657:16;:25;;;;;;:51;;;24550:32;;-1:-1:-1;24614:28:3;;;-1:-1:-1;;;24657:51:3;;;;24653:220;;24758:35;24775:4;24781:2;24785:7;24758:16;:35::i;:::-;:44;24733:129;;;;-1:-1:-1;;;24733:129:3;;;;;;;;;24904:8;;;:81;;-1:-1:-1;;;24904:81:3;;-1:-1:-1;;;;;24904:8:3;;;;:33;;:81;;24938:12;;24952:4;;24958:2;;24962:7;;24971:6;;24979:5;;24904:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24904:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24904:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24904:81:3;;;;;;;;;24883:149;;;;-1:-1:-1;;;24883:149:3;;;;;;;;;25043:32;25057:4;25063:2;25067:7;25043:13;:32::i;:::-;7978:1;;;24254:829;;;:::o;17996:973::-;18059:16;-1:-1:-1;;;;;18109:20:3;;18088:92;;;;-1:-1:-1;;;18088:92:3;;;;;;;;;-1:-1:-1;;;;;18212:26:3;;18191:18;18212:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;18191:57;-1:-1:-1;18262:15:3;18258:704;;18337:16;;;18351:1;18337:16;;;;;;;;;;;;18330:23;;;;;18258:704;18384:23;18424:10;18410:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;18410:25:3;;18384:51;;18449:19;18471:13;:11;:13::i;:::-;18449:35;-1:-1:-1;18498:19:3;18701:1;18686:238;18715:11;18704:7;:22;18686:238;;18761:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;18761:42:3;;;:32;;:42;18757:153;;;18849:7;18827:6;18834:11;18827:19;;;;;;;;;;;;;;;;;:29;18878:13;;;;;18757:153;18728:9;;18686:238;;;18945:6;18938:13;;;;;;;;;8359:78;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;8102:6;;-1:-1:-1;;;8102:6:3;;;;8094:15;;;;;;8416:6;:14;;-1:-1:-1;;;;8416:14:3;;;8359:78::o;25732:134::-;25819:39;25836:4;25842:2;25846:7;25819:39;;;;;;;;;;;;:16;:39::i;:::-;25732:134;;;:::o;32083:550::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;32146:14;32163:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;32163:32:3;;32226:16;32180:7;32226;:16::i;:::-;32252:19;32274:28;;;:19;:28;;;;;;32205:37;;-1:-1:-1;32274:28:3;;-1:-1:-1;;;;;32317:20:3;;;;;;;32313:172;;;32378:8;;-1:-1:-1;;;;;32378:8:3;:17;32396:12;32410;:10;:12::i;:::-;32378:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32378:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32378:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;32378:45:3;;;;;;;;;32353:121;;;;-1:-1:-1;;;32353:121:3;;;;;;;;;32516:41;32535:12;:10;:12::i;:::-;32549:7;32516:18;:41::i;:::-;32495:105;;;;-1:-1:-1;;;32495:105:3;;;;;;;;;32611:14;32617:7;32611:5;:14::i;:::-;7978:1;;;32083:550;:::o;1326:21::-;;;-1:-1:-1;;;;;1326:21:3;;:::o;10902:901::-;7961:6;;11175:7;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;11220:7;;11207:9;:20;;11199:29;;;;;;11262:1;11247:12;:16;;;11239:50;;;;-1:-1:-1;;;11239:50:3;;;;;;;;;11321:8;;-1:-1:-1;;;;;11321:8:3;:17;11339:12;11353;:10;:12::i;:::-;11321:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11321:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11321:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11321:45:3;;;;;;;;;11300:129;;;;-1:-1:-1;;;11300:129:3;;;;;;;;;11461:61;11478:9;11489;11500:7;11509:12;11461:16;:61::i;:::-;11440:125;;;;-1:-1:-1;;;11440:125:3;;;;;;;;;11576:15;11594:29;11604:12;:10;:12::i;:::-;11618:4;11594:9;:29::i;:::-;11576:47;;11633:84;11651:7;11660:9;11671;11682:7;11691:25;11633:17;:84::i;:::-;11727:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;11727:43:3;;;;;;11747:7;-1:-1:-1;10902:901:3;;;;;;;;:::o;1437:26::-;;;-1:-1:-1;;;1437:26:3;;;;;:::o;8502:305::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;8720:34;;8678:4;8670:21;;8655:12;;8720:10;;8670:21;;8720:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8701:53:3;;;8772:7;8764:35;;;;-1:-1:-1;;;8764:35:3;;;;;;;;;6569:1;;8502:305::o;19870:152::-;19925:7;19966:20;;;:11;:20;;;;;;-1:-1:-1;;;;;19966:20:3;;19870:152::o;19410:241::-;19470:7;-1:-1:-1;;;;;19511:24:3;;19490:96;;;;-1:-1:-1;;;19490:96:3;;;;;;;;;-1:-1:-1;;;;;19604:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;19597:46;19410:241;-1:-1:-1;;19410:241:3:o;1299:21::-;;;-1:-1:-1;;;;;1299:21:3;;:::o;7640:127::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7738:21;;;;:15;;:21;;;;;:::i;1769:32::-;;;-1:-1:-1;;;;;1769:32:3;;:::o;7461:105::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7545:7;:13;7461:105::o;8203:78::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;8261:6;:13;;-1:-1:-1;;;;8261:13:3;-1:-1:-1;;;8261:13:3;;;8203:78::o;20440:840::-;20505:16;20533:18;20554:21;20564:10;20554:9;:21::i;:::-;20533:42;-1:-1:-1;20589:15:3;20585:689;;20664:16;;;20678:1;20664:16;;;;;;;;;;;;20585:689;20711:23;20751:10;20737:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;20737:25:3;;20711:51;;20776:19;20798:13;:11;:13::i;:::-;20776:35;-1:-1:-1;20825:19:3;21021:1;21006:230;21035:11;21024:7;:22;21006:230;;21081:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;21081:34:3;;;:20;;:34;21077:145;;;21161:7;21139:6;21146:11;21139:19;;;;;;;;;;;;;;;;;:29;21190:13;;;;;21077:145;21048:9;;21006:230;;1999:87:8;2072:7;2065:14;;;;;;;;-1:-1:-1;;2065:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:13;;2065:14;;2072:7;;2065:14;;2072:7;2065:14;;;;;;;;;;;;;;;;;;;;;;;;9873:868:3;7961:6;;10119:7;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;10164:7;;10151:9;:20;;10143:29;;;;;;10206:1;10191:12;:16;;;10183:50;;;;-1:-1:-1;;;10183:50:3;;;;;;;;;10265:8;;-1:-1:-1;;;;;10265:8:3;:17;10283:12;10297;:10;:12::i;:::-;10265:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10265:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10265:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10265:45:3;;;;;;;;;10244:129;;;;-1:-1:-1;;;10244:129:3;;;;;;;;;10405:61;10422:9;10433;10444:7;10453:12;10405:16;:61::i;:::-;10384:125;;;;-1:-1:-1;;;10384:125:3;;;;;;;;;10520:15;10538:23;10548:12;:10;:12::i;:::-;10538:9;:23::i;:::-;10520:41;;10571:84;10589:7;10598:9;10609;10620:7;10629:25;10571:17;:84::i;:::-;10665:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;10665:43:3;;;;;;10685:7;-1:-1:-1;9873:868:3;;;;;;;:::o;23007:286::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;23127:12;:10;:12::i;:::-;-1:-1:-1;;;;;23121:18:3;:2;-1:-1:-1;;;;;23121:18:3;;;23113:57;;;;-1:-1:-1;;;23113:57:3;;;;;;;;;23220:8;23181:18;:32;23200:12;:10;:12::i;:::-;-1:-1:-1;;;;;23181:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;23181:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;23181:47:3;;;;;;;;;;;23258:12;:10;:12::i;:::-;-1:-1:-1;;;;;23243:42:3;;23276:8;23243:42;;;;;;;;;;;;;;;23007:286;;:::o;17256:330::-;-1:-1:-1;;;;;17383:32:3;;;;;;:24;:32;;;;;;;;17354:61;;;;;;;;;;;;;;;;;17326:15;;;;17354:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17354:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17425:17;17458:1;:8;17445:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17425:42:3;-1:-1:-1;17483:6:3;17478:82;17499:1;:8;17495:1;:12;17478:82;;;17535:1;17537;17535:4;;;;;;;;;;;;;;:14;;;17528:1;17530;17528:4;;;;;;;;;;;;;;;;;:21;17509:3;;17478:82;;;-1:-1:-1;17577:1:3;17256:330;-1:-1:-1;;;17256:330:3:o;26588:862::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;26749:41;26768:12;:10;:12::i;:::-;26782:7;26749:18;:41::i;:::-;26728:109;;;;-1:-1:-1;;;26728:109:3;;;;;;;;;26848:14;26865:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;26865:32:3;;26923:16;26882:7;26923;:16::i;:::-;26949:19;26971:28;;;:19;:28;;;;;;;;;27014:16;:25;;;;;;:51;;;26907:32;;-1:-1:-1;26971:28:3;;;-1:-1:-1;;;27014:51:3;;;;27010:220;;27115:35;27132:4;27138:2;27142:7;27115:16;:35::i;:::-;:44;27090:129;;;;-1:-1:-1;;;27090:129:3;;;;;;;;;27261:8;;;:81;;-1:-1:-1;;;27261:81:3;;-1:-1:-1;;;;;27261:8:3;;;;:33;;:81;;27295:12;;27309:4;;27315:2;;27319:7;;27328:6;;27336:5;;27261:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27261:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27261:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27261:81:3;;;;;;;;;27240:149;;;;-1:-1:-1;;;27240:149:3;;;;;;;;;27400:42;27418:4;27424:2;27428:7;27437:4;27400:17;:42::i;:::-;7978:1;;;26588:862;;;;:::o;7224:144::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7322:8;:39;;-1:-1:-1;;;;;;7322:39:3;-1:-1:-1;;;;;7322:39:3;;;;;;;;;;7224:144::o;14104:241::-;14162:13;14209:16;14217:7;14209;:16::i;:::-;14188:81;;;;-1:-1:-1;;;14188:81:3;;;;;;;;;14311:15;14328:7;14294:42;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14294:42:3;;;14280:57;;14104:241;;;:::o;6902:169::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;-1:-1:-1;;;;;6999:22:3;;;6995:70;;7037:6;:17;;-1:-1:-1;;;;;;7037:17:3;-1:-1:-1;;;;;7037:17:3;;;;;6995:70;6902:169;:::o;3651:34::-;;;;;;;;;;;;;;;-1:-1:-1;;3651:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16084:752::-;16154:14;16178:13;16201:23;16234:16;16260:14;16284:30;16324:19;16382:16;16390:7;16382;:16::i;:::-;16361:81;;;;-1:-1:-1;;;16361:81:3;;;;;;;;;16453:25;;:::i;:::-;16481;;;;:16;:25;;;;;;;;;16453:53;;;;;;;;;-1:-1:-1;;;;;16453:53:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16453:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;16481:25;;16453:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16453:53:3;;;-1:-1:-1;;16453:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16453:53:3;;;;;;;;;;;;;;;-1:-1:-1;16539:28:3;;;:19;:28;;;;;;16599:16;;;;-1:-1:-1;16539:28:3;;;16629:16;16539:28;16629:7;:16::i;:::-;16659:19;;;;16692;;;;16725:17;;;;16756:35;;;;;16578:250;;;;-1:-1:-1;16659:19:3;;-1:-1:-1;16692:19:3;-1:-1:-1;16725:17:3;;-1:-1:-1;16756:35:3;-1:-1:-1;16756:35:3;-1:-1:-1;16084:752:3;-1:-1:-1;;16084:752:3:o;8923:860::-;7961:6;;9165:7;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;9210:7;;9197:9;:20;;9189:29;;;;;;9252:1;9237:12;:16;;;9229:50;;;;-1:-1:-1;;;9229:50:3;;;;;;;;;9311:8;;-1:-1:-1;;;;;9311:8:3;:17;9329:12;9343;:10;:12::i;:::-;9311:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9311:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9311:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9311:45:3;;;;;;;;;9290:129;;;;-1:-1:-1;;;9290:129:3;;;;;;;;;9451:61;9468:9;9479;9490:7;9499:12;9451:16;:61::i;:::-;9430:125;;;;-1:-1:-1;;;9430:125:3;;;;;;;;;9566:15;9584:19;9590:12;:10;:12::i;:::-;9584:5;:19::i;6726:169::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;-1:-1:-1;;;;;6823:22:3;;;6819:70;;6861:6;:17;;-1:-1:-1;;;;;6861:17:3;;-1:-1:-1;;;;;;6861:17:3;;;;;;6726:169;:::o;23632:185::-;-1:-1:-1;;;;;23769:30:3;;;23741:4;23769:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;23632:185::o;28657:165::-;28714:4;28752:20;;;:11;:20;;;;;;-1:-1:-1;;;;;28752:20:3;28790:24;;;28657:165::o;5898:90::-;5970:10;5898:90;:::o;1061:112:1:-;1152:14;;1061:112::o;29183:384:3:-;29292:4;29334:16;29342:7;29334;:16::i;:::-;29313:81;;;;-1:-1:-1;;;29313:81:3;;;;;;;;;29405:18;29426:16;29434:7;29426;:16::i;:::-;29405:37;;29472:10;-1:-1:-1;;;;;29461:21:3;:7;-1:-1:-1;;;;;29461:21:3;;:56;;;;29510:7;-1:-1:-1;;;;;29486:31:3;:20;29498:7;29486:11;:20::i;:::-;-1:-1:-1;;;;;29486:31:3;;29461:56;:97;;;;29521:37;29538:10;29550:7;29521:16;:37::i;:::-;29453:106;29183:384;-1:-1:-1;;;;29183:384:3:o;33886:350::-;34033:4;34071:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;34071:32:3;;;;34118:14;;;;;:30;;;34142:6;-1:-1:-1;;;;;34136:12:3;:2;-1:-1:-1;;;;;34136:12:3;;34118:30;34114:115;;;34171:5;34164:12;;;;;34114:115;34214:4;34207:11;;;33886:350;;;;;;:::o;29948:486::-;30075:4;-1:-1:-1;;;;;30055:24:3;:16;30063:7;30055;:16::i;:::-;-1:-1:-1;;;;;30055:24:3;;30034:92;;;;-1:-1:-1;;;30034:92:3;;;;;;;;;-1:-1:-1;;;;;30158:16:3;;30137:87;;;;-1:-1:-1;;;30137:87:3;;;;;;;;;30235:23;30250:7;30235:14;:23::i;:::-;-1:-1:-1;;;;;30269:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;30314:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;30358:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;30358:25:3;-1:-1:-1;;;;;30358:25:3;;;;;;;;;30399:27;;30358:20;;30399:27;;;;;;;29948:486;;;:::o;33523:92::-;33575:32;33581:16;33589:7;33581;:16::i;:::-;33599:7;33575:5;:32::i;14403:461::-;14608:8;;;:63;;-1:-1:-1;;;14608:63:3;;14570:4;;-1:-1:-1;;;;;14608:8:3;;;;:38;;:63;;14647:12;;14661:9;;14608:63;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14608:63:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14608:63:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14608:63:3;;;;;;;;;14587:145;;;;-1:-1:-1;;;14587:145:3;;;;;;;;;14774:9;14764:19;;:7;:19;;;14743:91;;;;-1:-1:-1;;;14743:91:3;;;;;;;;;-1:-1:-1;14852:4:3;14403:461;;;;;;:::o;12997:301::-;13065:7;13085:15;13103:9;13109:2;13103:5;:9::i;:::-;13085:27;;13144:53;13175:1;13179:2;13183:7;13192:4;13144:22;:53::i;:::-;13123:142;;;;-1:-1:-1;;;13123:142:3;;;;;;;;15291:786;15513:16;15521:7;15513;:16::i;:::-;15492:81;;;;-1:-1:-1;;;15492:81:3;;;;;;;;;15584:25;;:::i;:::-;15612:257;;;;;;;;15651:12;:10;:12::i;:::-;-1:-1:-1;;;;;15612:257:3;;;;;15696:9;15612:257;;;;15738:9;15612:257;;;;;;15778:7;15612:257;;;;;;15832:25;15612:257;;;;;15584:285;;15908:9;15880:16;:25;15897:7;15880:25;;;;;;;;;;;:37;;;;;;;;;;;;;-1:-1:-1;;;;;15880:37:3;;;;;-1:-1:-1;;;;;15880:37:3;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15880:37:3;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15880:37:3;;;;;;;;-1:-1:-1;;15880:37:3;;;;;;;;;;;;;;-1:-1:-1;;15880:37:3;-1:-1:-1;;;15880:37:3;;;;;;;;;;15933;15960:9;15933:26;:37::i;:::-;15928:142;;15986:24;:38;16011:12;:10;:12::i;:::-;-1:-1:-1;;;;;15986:38:3;;;;;;;;;;;;;;;-1:-1:-1;15986:38:3;;;16031:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;15986:73:3;;;;;;;;;;;23:18:-1;;15986:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;15291:786;;;;;;:::o;12297:136::-;12346:7;12366:15;12384:17;12394:2;12384:17;;;;;;;;;;;;:9;:17::i;28154:308::-;28275:32;28289:4;28295:2;28299:7;28275:13;:32::i;:::-;28339:47;28362:4;28368:2;28372:7;28381:4;28339:22;:47::i;:::-;28318:136;;;;-1:-1:-1;;;28318:136:3;;;;;;;;13484:398;13529:7;-1:-1:-1;;;;;13557:16:3;;13549:49;;;;-1:-1:-1;;;13549:49:3;;;;;;;;;13609:21;:9;:19;:21::i;:::-;13640:15;13658:19;:9;:17;:19::i;:::-;13688:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;13688:25:3;-1:-1:-1;;;;;13688:25:3;;;;;;;;13723:21;;:17;:21;;;;;13688:20;;-1:-1:-1;13723:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;13766:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;13816:33;;13841:7;;-1:-1:-1;;;;;13816:33:3;;;13833:1;;13816:33;;13833:1;;13816:33;13867:7;13484:398;-1:-1:-1;;13484:398:3:o;31541:173::-;31641:1;31605:24;;;:15;:24;;;;;;-1:-1:-1;;;;;31605:24:3;:38;31601:106;;31694:1;31659:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;31659:37:3;;;31541:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;32907:435:3:-;33020:10;-1:-1:-1;;;;;33000:30:3;:16;33008:7;33000;:16::i;:::-;-1:-1:-1;;;;;33000:30:3;;32979:94;;;;-1:-1:-1;;;32979:94:3;;;;;;;;;33084:23;33099:7;33084:14;:23::i;:::-;-1:-1:-1;;;;;33118:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;33200:1;33169:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;33169:33:3;;;;;;33252:16;:25;;;;;33245:32;;;;;;;33252:25;33245:32;33169:33;33245:32;;33200:1;33245:32;:::i;:::-;-1:-1:-1;33245:32:3;;;;-1:-1:-1;;33245:32:3;;;33293:41;;33326:7;;33245:32;;-1:-1:-1;;;;;33293:41:3;;;;;33245:32;;33293:41;32907:435;;:::o;31022:357::-;31150:4;31176:15;:2;-1:-1:-1;;;;;31176:13:3;;:15::i;:::-;31171:58;;-1:-1:-1;31214:4:3;31207:11;;31171:58;31239:13;31271:2;-1:-1:-1;;;;;31255:36:3;;31292:12;:10;:12::i;:::-;31306:4;31312:7;31321:4;31255:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31255:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31255:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;31255:71:3;;;;;;;;;-1:-1:-1;;;;;;31344:26:3;-1:-1:-1;;;31344:26:3;;-1:-1:-1;;31022:357:3;;;;;;:::o;14871:413::-;15041:10;14970:4;15016:36;;;:24;:36;;;;;;;;14987:65;;;;;;;;;;;;;;;;;:26;;14970:4;;14987:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14987:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14987:65:3;;-1:-1:-1;15062:15:3;;-1:-1:-1;15062:15:3;;-1:-1:-1;;15095:155:3;15116:1;:8;15112:1;:12;15095:155;;;15149:39;15162:9;15173:1;15175;15173:4;;;;;;;;;;;;;;:14;;;15149:12;:39::i;:::-;15145:95;;;15221:4;15208:17;;15145:95;15126:3;;15095:155;;1276:134:10;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;33650:230:3:-;33775:4;33867:1;33849:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33849:21:3;;;33839:32;;;;;;33831:1;33813:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33813:21:3;;;33803:32;;;;;;:68;33795:78;;33650:230;;;;:::o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;850:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1582:130;1649:20;;1674:33;1649:20;1674:33;;1719:128;1785:20;;1810:32;1785:20;1810:32;;1854:128;1920:20;;1945:32;1920:20;1945:32;;1989:241;;2093:2;2081:9;2072:7;2068:23;2064:32;2061:2;;;2109:1;2106;2099:12;2061:2;2144:1;2161:53;2206:7;2186:9;2161:53;;2237:366;;;2358:2;2346:9;2337:7;2333:23;2329:32;2326:2;;;2374:1;2371;2364:12;2326:2;2409:1;2426:53;2471:7;2451:9;2426:53;;;2416:63;;2388:97;2516:2;2534:53;2579:7;2570:6;2559:9;2555:22;2534:53;;;2524:63;;2495:98;2320:283;;;;;;2610:491;;;;2748:2;2736:9;2727:7;2723:23;2719:32;2716:2;;;2764:1;2761;2754:12;2716:2;2799:1;2816:53;2861:7;2841:9;2816:53;;;2806:63;;2778:97;2906:2;2924:53;2969:7;2960:6;2949:9;2945:22;2924:53;;;2914:63;;2885:98;3014:2;3032:53;3077:7;3068:6;3057:9;3053:22;3032:53;;;3022:63;;2993:98;2710:391;;;;;;3108:721;;;;;3272:3;3260:9;3251:7;3247:23;3243:33;3240:2;;;3289:1;3286;3279:12;3240:2;3324:1;3341:53;3386:7;3366:9;3341:53;;;3331:63;;3303:97;3431:2;3449:53;3494:7;3485:6;3474:9;3470:22;3449:53;;;3439:63;;3410:98;3539:2;3557:53;3602:7;3593:6;3582:9;3578:22;3557:53;;;3547:63;;3518:98;3675:2;3664:9;3660:18;3647:32;3699:18;3691:6;3688:30;3685:2;;;3731:1;3728;3721:12;3685:2;3751:62;3805:7;3796:6;3785:9;3781:22;3751:62;;;3741:72;;3626:193;3234:595;;;;;;;;3836:360;;;3954:2;3942:9;3933:7;3929:23;3925:32;3922:2;;;3970:1;3967;3960:12;3922:2;4005:1;4022:53;4067:7;4047:9;4022:53;;;4012:63;;3984:97;4112:2;4130:50;4172:7;4163:6;4152:9;4148:22;4130:50;;4203:366;;;4324:2;4312:9;4303:7;4299:23;4295:32;4292:2;;;4340:1;4337;4330:12;4292:2;4375:1;4392:53;4437:7;4417:9;4392:53;;;4382:63;;4354:97;4482:2;4500:53;4545:7;4536:6;4525:9;4521:22;4500:53;;4576:257;;4688:2;4676:9;4667:7;4663:23;4659:32;4656:2;;;4704:1;4701;4694:12;4656:2;4739:1;4756:61;4809:7;4789:9;4756:61;;4840:239;;4943:2;4931:9;4922:7;4918:23;4914:32;4911:2;;;4959:1;4956;4949:12;4911:2;4994:1;5011:52;5055:7;5035:9;5011:52;;5086:261;;5200:2;5188:9;5179:7;5175:23;5171:32;5168:2;;;5216:1;5213;5206:12;5168:2;5251:1;5268:63;5323:7;5303:9;5268:63;;5354:347;;5468:2;5456:9;5447:7;5443:23;5439:32;5436:2;;;5484:1;5481;5474:12;5436:2;5519:31;;5570:18;5559:30;;5556:2;;;5602:1;5599;5592:12;5556:2;5622:63;5677:7;5668:6;5657:9;5653:22;5622:63;;5708:837;;;;;;5884:3;5872:9;5863:7;5859:23;5855:33;5852:2;;;5901:1;5898;5891:12;5852:2;5936:31;;5987:18;5976:30;;5973:2;;;6019:1;6016;6009:12;5973:2;6039:63;6094:7;6085:6;6074:9;6070:22;6039:63;;;6029:73;;5915:193;6139:2;6157:52;6201:7;6192:6;6181:9;6177:22;6157:52;;;6147:62;;6118:97;6246:2;6264:52;6308:7;6299:6;6288:9;6284:22;6264:52;;;6254:62;;6225:97;6353:2;6371:50;6413:7;6404:6;6393:9;6389:22;6371:50;;;6361:60;;6332:95;6458:3;6477:52;6521:7;6512:6;6501:9;6497:22;6477:52;;;6467:62;;6437:98;5846:699;;;;;;;;;6552:1067;;;;;;;6754:3;6742:9;6733:7;6729:23;6725:33;6722:2;;;6771:1;6768;6761:12;6722:2;6806:31;;6857:18;6846:30;;6843:2;;;6889:1;6886;6879:12;6843:2;6909:63;6964:7;6955:6;6944:9;6940:22;6909:63;;;6899:73;;6785:193;7009:2;7027:52;7071:7;7062:6;7051:9;7047:22;7027:52;;;7017:62;;6988:97;7116:2;7134:52;7178:7;7169:6;7158:9;7154:22;7134:52;;;7124:62;;7095:97;7223:2;7241:50;7283:7;7274:6;7263:9;7259:22;7241:50;;;7231:60;;7202:95;7328:3;7347:52;7391:7;7382:6;7371:9;7367:22;7347:52;;;7337:62;;7307:98;7464:3;7453:9;7449:19;7436:33;7489:18;7481:6;7478:30;7475:2;;;7521:1;7518;7511:12;7475:2;7541:62;7595:7;7586:6;7575:9;7571:22;7541:62;;;7531:72;;7415:194;6716:903;;;;;;;;;7626:241;;7730:2;7718:9;7709:7;7705:23;7701:32;7698:2;;;7746:1;7743;7736:12;7698:2;7781:1;7798:53;7843:7;7823:9;7798:53;;7875:181;;7988:62;8046:3;8038:6;7988:62;;8065:173;;8152:46;8194:3;8186:6;8152:46;;;-1:-1;;8227:4;8218:14;;8145:93;8246:113;8329:24;8347:5;8329:24;;;8324:3;8317:37;8311:48;;;8395:896;;8552:60;8606:5;8552:60;;;8625:92;8710:6;8705:3;8625:92;;;8618:99;;8740:3;8782:4;8774:6;8770:17;8765:3;8761:27;8809:62;8865:5;8809:62;;;8891:7;8919:1;8904:348;8929:6;8926:1;8923:13;8904:348;;;8991:9;8985:4;8981:20;8976:3;8969:33;9036:6;9030:13;9058:76;9129:4;9114:13;9058:76;;;9050:84;;9151:66;9210:6;9151:66;;;9240:4;9231:14;;;;;9141:76;-1:-1;;8951:1;8944:9;8904:348;;;-1:-1;9265:4;;8531:760;-1:-1;;;;;;;8531:760;9330:690;;9475:54;9523:5;9475:54;;;9542:86;9621:6;9616:3;9542:86;;;9535:93;;9649:56;9699:5;9649:56;;;9725:7;9753:1;9738:260;9763:6;9760:1;9757:13;9738:260;;;9830:6;9824:13;9851:63;9910:3;9895:13;9851:63;;;9844:70;;9931:60;9984:6;9931:60;;;9921:70;-1:-1;;9785:1;9778:9;9738:260;;;-1:-1;10011:3;;9454:566;-1:-1;;;;;9454:566;10028:104;10105:21;10120:5;10105:21;;10139:343;;10249:38;10281:5;10249:38;;;10299:70;10362:6;10357:3;10299:70;;;10292:77;;10374:52;10419:6;10414:3;10407:4;10400:5;10396:16;10374:52;;;10447:29;10469:6;10447:29;;;10438:39;;;;10229:253;-1:-1;;;10229:253;10489:174;10596:61;10651:5;10596:61;;11024:360;;11154:39;11187:5;11154:39;;;11205:89;11287:6;11282:3;11205:89;;;11198:96;;11299:52;11344:6;11339:3;11332:4;11325:5;11321:16;11299:52;;;11363:16;;;;;11134:250;-1:-1;;11134:250;12088:884;;12225:5;12219:12;12259:1;12248:9;12244:17;12272:1;12267:268;;;;12546:1;12541:425;;;;12237:729;;12267:268;12345:4;12341:1;12330:9;12326:17;12322:28;12364:89;12446:6;12441:3;12364:89;;;-1:-1;;12472:25;;12460:38;;12357:96;-1:-1;12512:16;;;-1:-1;12267:268;;12541:425;12610:1;12599:9;12595:17;12626:89;12708:6;12703:3;12626:89;;;12619:96;;12737:38;12769:5;12737:38;;;12791:1;12799:130;12813:6;12810:1;12807:13;12799:130;;;12872:14;;12859:11;;;12852:35;12919:1;12906:15;;;;12835:4;12828:12;12799:130;;;-1:-1;;12943:16;;;-1:-1;12237:729;;12195:777;;;;;;12981:364;;13141:67;13205:2;13200:3;13141:67;;;13241:66;13221:87;;13336:2;13327:12;;13127:218;-1:-1;;13127:218;13354:364;;13514:67;13578:2;13573:3;13514:67;;;13614:66;13594:87;;13709:2;13700:12;;13500:218;-1:-1;;13500:218;13727:465;;13887:67;13951:2;13946:3;13887:67;;;13987:66;13967:87;;-1:-1;;;14083:2;14074:12;;14067:88;14183:2;14174:12;;13873:319;-1:-1;;13873:319;14201:364;;14361:67;14425:2;14420:3;14361:67;;;14461:66;14441:87;;14556:2;14547:12;;14347:218;-1:-1;;14347:218;14574:364;;14734:67;14798:2;14793:3;14734:67;;;14834:66;14814:87;;14929:2;14920:12;;14720:218;-1:-1;;14720:218;14947:364;;15107:67;15171:2;15166:3;15107:67;;;15207:66;15187:87;;15302:2;15293:12;;15093:218;-1:-1;;15093:218;15320:364;;15480:67;15544:2;15539:3;15480:67;;;15580:66;15560:87;;15675:2;15666:12;;15466:218;-1:-1;;15466:218;15693:364;;15853:67;15917:2;15912:3;15853:67;;;15953:66;15933:87;;16048:2;16039:12;;15839:218;-1:-1;;15839:218;16066:465;;16226:67;16290:2;16285:3;16226:67;;;16326:66;16306:87;;-1:-1;;;16422:2;16413:12;;16406:88;16522:2;16513:12;;16212:319;-1:-1;;16212:319;16540:364;;16700:67;16764:2;16759:3;16700:67;;;16800:66;16780:87;;16895:2;16886:12;;16686:218;-1:-1;;16686:218;16913:364;;17073:67;17137:2;17132:3;17073:67;;;17173:66;17153:87;;17268:2;17259:12;;17059:218;-1:-1;;17059:218;17286:364;;17446:67;17510:2;17505:3;17446:67;;;17546:66;17526:87;;17641:2;17632:12;;17432:218;-1:-1;;17432:218;17659:364;;17819:67;17883:2;17878:3;17819:67;;;17919:66;17899:87;;18014:2;18005:12;;17805:218;-1:-1;;17805:218;18032:296;;18209:83;18290:1;18285:3;18209:83;;18337:364;;18497:67;18561:2;18556:3;18497:67;;;18597:66;18577:87;;18692:2;18683:12;;18483:218;-1:-1;;18483:218;18710:364;;18870:67;18934:2;18929:3;18870:67;;;18970:66;18950:87;;19065:2;19056:12;;18856:218;-1:-1;;18856:218;19083:465;;19243:67;19307:2;19302:3;19243:67;;;19343:66;19323:87;;-1:-1;;;19439:2;19430:12;;19423:88;19539:2;19530:12;;19229:319;-1:-1;;19229:319;19557:364;;19717:67;19781:2;19776:3;19717:67;;;19817:66;19797:87;;19912:2;19903:12;;19703:218;-1:-1;;19703:218;19930:364;;20090:67;20154:2;20149:3;20090:67;;;20190:66;20170:87;;20285:2;20276:12;;20076:218;-1:-1;;20076:218;20302:103;20375:24;20393:5;20375:24;;20532:152;20633:45;20653:24;20671:5;20653:24;;;20633:45;;20691:110;20772:23;20789:5;20772:23;;20808:110;20889:23;20906:5;20889:23;;20925:266;;21071:95;21162:3;21153:6;21071:95;;21198:399;;21369:92;21457:3;21448:6;21369:92;;;21362:99;;21472:75;21543:3;21534:6;21472:75;;;-1:-1;21569:2;21560:12;;21350:247;-1:-1;;21350:247;21604:370;;21802:147;21945:3;21802:147;;21981:213;22099:2;22084:18;;22113:71;22088:9;22157:6;22113:71;;22201:947;22495:3;22480:19;;22510:71;22484:9;22554:6;22510:71;;;22592:72;22660:2;22649:9;22645:18;22636:6;22592:72;;;22712:9;22706:4;22702:20;22697:2;22686:9;22682:18;22675:48;22737:78;22810:4;22801:6;22737:78;;;22729:86;;22826:70;22892:2;22881:9;22877:18;22868:6;22826:70;;;22907:71;22973:3;22962:9;22958:19;22949:6;22907:71;;;22989:67;23051:3;23040:9;23036:19;23027:6;22989:67;;;23067:71;23133:3;23122:9;23118:19;23109:6;23067:71;;;22466:682;;;;;;;;;;;23155:631;23375:3;23360:19;;23390:71;23364:9;23434:6;23390:71;;;23472:72;23540:2;23529:9;23525:18;23516:6;23472:72;;;23555;23623:2;23612:9;23608:18;23599:6;23555:72;;;23675:9;23669:4;23665:20;23660:2;23649:9;23645:18;23638:48;23700:76;23771:4;23762:6;23700:76;;;23692:84;23346:440;-1:-1;;;;;;23346:440;23793:385;23973:2;23987:47;;;23958:18;;24048:120;23958:18;24154:6;24048:120;;24185:361;24353:2;24367:47;;;24338:18;;24428:108;24338:18;24522:6;24428:108;;24553:201;24665:2;24650:18;;24679:65;24654:9;24717:6;24679:65;;24761:261;24903:2;24888:18;;24917:95;24892:9;24985:6;24917:95;;25029:293;25163:2;25177:47;;;25148:18;;25238:74;25148:18;25298:6;25238:74;;25637:407;25828:2;25842:47;;;25813:18;;25903:131;25813:18;25903:131;;26051:407;26242:2;26256:47;;;26227:18;;26317:131;26227:18;26317:131;;26465:407;26656:2;26670:47;;;26641:18;;26731:131;26641:18;26731:131;;26879:407;27070:2;27084:47;;;27055:18;;27145:131;27055:18;27145:131;;27293:407;27484:2;27498:47;;;27469:18;;27559:131;27469:18;27559:131;;27707:407;27898:2;27912:47;;;27883:18;;27973:131;27883:18;27973:131;;28121:407;28312:2;28326:47;;;28297:18;;28387:131;28297:18;28387:131;;28535:407;28726:2;28740:47;;;28711:18;;28801:131;28711:18;28801:131;;28949:407;29140:2;29154:47;;;29125:18;;29215:131;29125:18;29215:131;;29363:407;29554:2;29568:47;;;29539:18;;29629:131;29539:18;29629:131;;29777:407;29968:2;29982:47;;;29953:18;;30043:131;29953:18;30043:131;;30191:407;30382:2;30396:47;;;30367:18;;30457:131;30367:18;30457:131;;30605:407;30796:2;30810:47;;;30781:18;;30871:131;30781:18;30871:131;;31019:407;31210:2;31224:47;;;31195:18;;31285:131;31195:18;31285:131;;31433:407;31624:2;31638:47;;;31609:18;;31699:131;31609:18;31699:131;;31847:407;32038:2;32052:47;;;32023:18;;32113:131;32023:18;32113:131;;32261:407;32452:2;32466:47;;;32437:18;;32527:131;32437:18;32527:131;;32675:407;32866:2;32880:47;;;32851:18;;32941:131;32851:18;32941:131;;33089:213;33207:2;33192:18;;33221:71;33196:9;33265:6;33221:71;;33309:209;33425:2;33410:18;;33439:69;33414:9;33481:6;33439:69;;33525:320;33669:2;33654:18;;33683:69;33658:9;33725:6;33683:69;;;33763:72;33831:2;33820:9;33816:18;33807:6;33763:72;;33852:767;34108:3;34093:19;;34123:69;34097:9;34165:6;34123:69;;;34203:72;34271:2;34260:9;34256:18;34247:6;34203:72;;;34286;34354:2;34343:9;34339:18;34330:6;34286:72;;;34369;34437:2;34426:9;34422:18;34413:6;34369:72;;;34452:73;34520:3;34509:9;34505:19;34496:6;34452:73;;;34536;34604:3;34593:9;34589:19;34580:6;34536:73;;;34079:540;;;;;;;;;;34626:408;34790:2;34775:18;;34804:69;34779:9;34846:6;34804:69;;;34921:9;34915:4;34911:20;34906:2;34895:9;34891:18;34884:48;34946:78;35019:4;35010:6;34946:78;;35041:256;35103:2;35097:9;35129:17;;;35204:18;35189:34;;35225:22;;;35186:62;35183:2;;;35261:1;35258;35251:12;35183:2;35277;35270:22;35081:216;;-1:-1;35081:216;35304:321;;35447:18;35439:6;35436:30;35433:2;;;35479:1;35476;35469:12;35433:2;-1:-1;35610:4;35546;35523:17;;;;-1:-1;;35519:33;35600:15;;35370:255;35961:157;36091:4;36082:14;;36039:79;36283:158;;36378:14;;;36420:4;36407:18;;;36337:104;36448:143;36557:12;;36528:63;37361:184;37485:19;;;37534:4;37525:14;;37478:67;38552:91;;38614:24;38632:5;38614:24;;38650:85;38716:13;38709:21;;38692:43;38742:144;-1:-1;;;;;;38803:78;;38786:100;38893:121;-1:-1;;;;;38955:54;;38938:76;39100:88;39172:10;39161:22;;39144:44;39195:92;39267:14;39256:26;;39239:48;39294:169;;39397:61;39452:5;39397:61;;39610:145;39691:6;39686:3;39681;39668:30;-1:-1;39747:1;39729:16;;39722:27;39661:94;39764:268;39829:1;39836:101;39850:6;39847:1;39844:13;39836:101;;;39917:11;;;39911:18;39898:11;;;39891:39;39872:2;39865:10;39836:101;;;39952:6;39949:1;39946:13;39943:2;;;-1:-1;;40017:1;39999:16;;39992:27;39813:219;40121:97;40209:2;40189:14;-1:-1;;40185:28;;40169:49;40226:117;40295:24;40313:5;40295:24;;;40288:5;40285:35;40275:2;;40334:1;40331;40324:12;40350:111;40416:21;40431:5;40416:21;;40468:115;40536:23;40553:5;40536:23;;40590:117;40659:24;40677:5;40659:24;;40714:115;40782:23;40799:5;40782:23;;40836:115;40904:23;40921:5;40904:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2187
      ]
    },
    "id": 2188,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2131,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2132,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2133,
        "nodeType": "ImportDirective",
        "scope": 2188,
        "sourceUnit": 1978,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2134,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1977,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1977",
                "typeString": "contract ERC721"
              }
            },
            "id": 2135,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          1977,
          1987,
          2090
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2187,
        "linearizedBaseContracts": [
          2187,
          1977,
          2090,
          142,
          1987
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2137,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2187,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2136,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2139,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2187,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2138,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2142,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2187,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2140,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2151,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2152,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2155,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2139,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2156,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2146,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2158,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2160,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2159,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2166,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2163,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2481,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2187",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 381,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2168,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2144,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2146,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2148,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2187,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2177,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2175,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2137,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2174,
                  "id": 2176,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2178,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2187,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2185,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2183,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2139,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2182,
                  "id": 2184,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2186,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2187,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2188,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2187
      ]
    },
    "id": 2188,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2131,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2132,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2133,
        "nodeType": "ImportDirective",
        "scope": 2188,
        "sourceUnit": 1978,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2134,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1977,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1977",
                "typeString": "contract ERC721"
              }
            },
            "id": 2135,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          1977,
          1987,
          2090
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2187,
        "linearizedBaseContracts": [
          2187,
          1977,
          2090,
          142,
          1987
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2137,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2187,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2136,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2139,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2187,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2138,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2142,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2187,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2140,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2141,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2151,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2152,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2155,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2139,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2156,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2146,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2158,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2160,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2159,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2166,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2163,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2481,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2187",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 381,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2168,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2144,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2146,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2148,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2187,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2177,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2175,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2137,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2174,
                  "id": 2176,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2178,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2187,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2185,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2183,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2139,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2182,
                  "id": 2184,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2186,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2187,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2188,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1614733467301": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x47BB3F68c93929602326D61D5241Be80b59023C9",
      "transactionHash": "0x09f36bb7c59a04248eeb3d392f35ad28011c90f9b4aa649c9115c6aff201d459"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-03T01:12:40.084Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,uint48,uint48,bool,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,uint48,uint48,bool,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,uint48,uint48,bool,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "updateTokenURIBaseUrl(string)": {
        "details": "Update the base url for all tokenURI's"
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}