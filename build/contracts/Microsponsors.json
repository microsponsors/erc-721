{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "tokenMinterPropertyNames",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "propertyName",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "auctionEndTime",
          "type": "uint48"
        },
        {
          "internalType": "uint16",
          "name": "category",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"tokenMinterPropertyNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"propertyName\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"auctionEndTime\",\"type\":\"uint48\"},{\"internalType\":\"uint16\",\"name\":\"category\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,string,uint48,uint48,uint48,uint16,bool,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenMinterPropertyNames(address,string)\":{\"details\":\"Look up all Property Names a Minter has created Time Slots for      with a particular Content ID\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0x0d9fbde70aa816805321a07525ff075cf394b514159fa24f7fc8b64aee9ef32f\",\"urls\":[\"bzz-raw://0a616ce6ceeb9c4266ad5efdbc8c7d8ce872a915fd05d36706ba44607fdbd4d0\",\"dweb:/ipfs/QmVJpmx7s9kLEaVxBvSCmAmqyguEKwP8QLRGfLH6hNZTPm\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x45fb6eddb422590ad9eec286d07eae2bd45db219aa127066eb23c7e3da4d0029\",\"urls\":[\"bzz-raw://840173239762fa8808437c611cdb3858b2d115a1a97153d330f6ed5ab4ff6412\",\"dweb:/ipfs/QmZ53b1m2kAA6PKotGU4htzNVFzRKe6MyWVfpKBpaYPMij\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff60a01b19169055655af3107a40006003553480156200002857600080fd5b5060405162004663380380620046638339810160408190526200004b91620003ff565b6200007f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000b37f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000c66001600160e01b036200023416565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000f062000234565b600280546001600160a01b0319166001600160a01b0392909216919091179055825162000125906010906020860190620002ee565b5081516200013b906011906020850190620002ee565b50620001707f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b62000186816200023960201b62001a711760201c565b505050620005d3565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee90620004f8565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002586001600160e01b036200023416565b6001600160a01b031614806200029357506002546001600160a01b0316620002886001600160e01b036200023416565b6001600160a01b0316145b620002cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee906200050a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033157805160ff191683800117855562000361565b8280016001018555821562000361579182015b828111156200036157825182559160200191906001019062000344565b506200036f92915062000373565b5090565b6200023691905b808211156200036f57600081556001016200037a565b80516200039d81620005b9565b92915050565b600082601f830112620003b557600080fd5b8151620003cc620003c68262000543565b6200051c565b91508082526020830160208301858383011115620003e957600080fd5b620003f683828462000586565b50505092915050565b6000806000606084860312156200041557600080fd5b83516001600160401b038111156200042c57600080fd5b6200043a86828701620003a3565b93505060208401516001600160401b038111156200045757600080fd5b6200046586828701620003a3565b9250506040620004788682870162000390565b9150509250925092565b600062000491601c836200056b565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004cc6013836200056b565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b602080825281016200039d8162000482565b602080825281016200039d81620004bd565b6040518181016001600160401b03811182821017156200053b57600080fd5b604052919050565b60006001600160401b038211156200055a57600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b0382166200039d565b60005b83811015620005a357818101518382015260200162000589565b83811115620005b3576000848401525b50505050565b620005c48162000574565b8114620005d057600080fd5b50565b61408080620005e36000396000f3fe6080604052600436106102255760003560e01c80637368891411610123578063b88d4fde116100ab578063e5c249241161006f578063e5c249241461061d578063e982d5a914610653578063e985e9c514610673578063f33efd1e14610693578063fb796bb7146106a657610225565b8063b88d4fde1461058a578063c51e713c146105aa578063c57a8825146105bd578063c87b56dd146105dd578063e2b375a9146105fd57610225565b80638456cb59116100f25780638456cb59146105005780638462151c1461051557806395d89b4114610535578063a22cb4651461054a578063a4ede1281461056a57610225565b8063736889141461047c5780637affcb9a146104915780637b103999146104be57806384017e52146104e057610225565b80632a0c7799116101b1578063527097251161017557806352709725146103fd5780635c975abb146104125780635fd8c710146104275780636352211e1461043c57806370a082311461045c57610225565b80632a0c7799146103685780632e0dccbb146103955780633f4ba83a146103a857806342842e0e146103bd57806342966c68146103dd57610225565b806313966db5116101f857806313966db5146102d1578063180b9e3f146102f357806318160ddd1461032057806323b872dd146103355780632441c7091461035557610225565b806301ffc9a71461022a57806306fdde0314610260578063081812fc14610282578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004613342565b6106b9565b6040516102579190613cf2565b60405180910390f35b34801561026c57600080fd5b506102756106dc565b6040516102579190613d0e565b34801561028e57600080fd5b506102a261029d366004613568565b610773565b6040516102579190613bdb565b3480156102bb57600080fd5b506102cf6102ca3660046132f4565b6107bf565b005b3480156102dd57600080fd5b506102e66108bb565b6040516102579190613e4f565b3480156102ff57600080fd5b5061031361030e366004613568565b6108c1565b6040516102579190613e5d565b34801561032c57600080fd5b506102e66108d9565b34801561034157600080fd5b506102cf6103503660046131a8565b6108ea565b6102e661036336600461345d565b610a66565b34801561037457600080fd5b50610388610383366004613150565b610be1565b6040516102579190613ce1565b6102e66103a336600461337e565b610ce9565b3480156103b457600080fd5b506102cf610e54565b3480156103c957600080fd5b506102cf6103d83660046131a8565b610ed8565b3480156103e957600080fd5b506102cf6103f8366004613568565b610ef8565b34801561040957600080fd5b506102a261103c565b34801561041e57600080fd5b5061024a61104b565b34801561043357600080fd5b506102cf61105b565b34801561044857600080fd5b506102a2610457366004613568565b611137565b34801561046857600080fd5b506102e6610477366004613150565b611152565b34801561048857600080fd5b506102a26111a1565b34801561049d57600080fd5b506104b16104ac36600461329e565b6111b0565b6040516102579190613cd0565b3480156104ca57600080fd5b506104d3611352565b6040516102579190613d00565b3480156104ec57600080fd5b506102cf6104fb366004613568565b611361565b34801561050c57600080fd5b506102cf6113c5565b34801561052157600080fd5b50610388610530366004613150565b611450565b34801561054157600080fd5b5061027561150a565b34801561055657600080fd5b506102cf61056536600461326e565b61156b565b34801561057657600080fd5b506104b1610585366004613150565b611650565b34801561059657600080fd5b506102cf6105a53660046131f5565b6117c6565b6102e66105b836600461345d565b611944565b3480156105c957600080fd5b506102cf6105d8366004613150565b611a71565b3480156105e957600080fd5b506102756105f8366004613568565b611af2565b34801561060957600080fd5b506102cf610618366004613150565b611bb8565b34801561062957600080fd5b5061063d610638366004613568565b611c45565b6040516102579a99989796959493929190613be9565b34801561065f57600080fd5b506102cf61066e366004613150565b611ea1565b34801561067f57600080fd5b5061024a61068e36600461316e565b611f2f565b6102e66106a136600461337e565b611f5d565b6102e66106b436600461345d565b612085565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b820191906000526020600020905b81548152906001019060200180831161074b57829003601f168201915b505050505090505b90565b600061077e826121c5565b6107a35760405162461bcd60e51b815260040161079a90613e0f565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107d657600080fd5b60006107e182611137565b9050806001600160a01b0316836001600160a01b031614156108155760405162461bcd60e51b815260040161079a90613d7f565b806001600160a01b03166108276121e2565b6001600160a01b0316148061084357506108438161068e6121e2565b61085f5760405162461bcd60e51b815260040161079a90613e3f565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108e560056121e6565b905090565b600254600160a01b900460ff161561090157600080fd5b61091261090c6121e2565b826121ea565b61092e5760405162461bcd60e51b815260040161079a90613e2f565b6000818152600a60205260408120546001600160a01b03169061095083611137565b600084815260096020908152604080832054600a9092529091206003015491925063ffffffff1690600160a01b900460ff166109ae5761099186868661226f565b156109ae5760405162461bcd60e51b815260040161079a90613d2f565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109e79185918b918b918b918b918b9101613e86565b60206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a379190810190613324565b610a535760405162461bcd60e51b815260040161079a90613e2f565b610a5e8686866122c3565b505050505050565b600254600090600160a01b900460ff1615610a8057600080fd5b600354341015610a8f57600080fd5b60008363ffffffff1611610ab55760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac884610acf6121e2565b6040518363ffffffff1660e01b8152600401610aec929190613e6b565b60206040518083038186803b158015610b0457600080fd5b505afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3c9190810190613324565b610b585760405162461bcd60e51b815260040161079a90613e1f565b610b658a898989876123c9565b610b815760405162461bcd60e51b815260040161079a90613dff565b6000610b93610b8e6121e2565b6124d3565b9050610ba5818c8c8c8c8c8c8c6124ef565b610baf81846127b1565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509998505050505050505050565b60606001600160a01b038216610c095760405162461bcd60e51b815260040161079a90613d5f565b6001600160a01b0382166000908152600860205260408120610c2a906121e6565b905080610c4c5760408051600080825260208201909252905b509150506106d7565b606081604051908082528060200260200182016040528015610c78578160200160208202803883390190505b5090506000610c856108d9565b9050600060015b828111610cdc576000818152600a60205260409020546001600160a01b0388811691161415610cd45780848381518110610cc257fe5b60209081029190910101526001909101905b600101610c8c565b83955050505050506106d7565b600254600090600160a01b900460ff1615610d0357600080fd5b600354341015610d1257600080fd5b60008263ffffffff1611610d385760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac883610d526121e2565b6040518363ffffffff1660e01b8152600401610d6f929190613e6b565b60206040518083038186803b158015610d8757600080fd5b505afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dbf9190810190613324565b610ddb5760405162461bcd60e51b815260040161079a90613e1f565b610de889888888866123c9565b610e045760405162461bcd60e51b815260040161079a90613dff565b6000610e11610b8e6121e2565b9050610e23818b8b8b8b8b8b8b6124ef565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610e686121e2565b6001600160a01b03161480610e9757506002546001600160a01b0316610e8c6121e2565b6001600160a01b0316145b610eb35760405162461bcd60e51b815260040161079a90613dcf565b600254600160a01b900460ff16610ec957600080fd5b6002805460ff60a01b19169055565b610ef3838383604051806020016040528060008152506117c6565b505050565b600254600160a01b900460ff1615610f0f57600080fd5b6000818152600a60205260408120546001600160a01b031690610f3183611137565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415611000576004546001600160a01b03166312d26ac882610f776121e2565b6040518363ffffffff1660e01b8152600401610f94929190613e6b565b60206040518083038186803b158015610fac57600080fd5b505afa158015610fc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fe49190810190613324565b6110005760405162461bcd60e51b815260040161079a90613d6f565b61101161100b6121e2565b856121ea565b61102d5760405162461bcd60e51b815260040161079a90613d6f565b611036846127f5565b50505050565b6002546001600160a01b031681565b600254600160a01b900460ff1681565b6001546001600160a01b031661106f6121e2565b6001600160a01b0316148061109e57506002546001600160a01b03166110936121e2565b6001600160a01b0316145b6110ba5760405162461bcd60e51b815260040161079a90613dcf565b604051303190600090339083906110d090613bd0565b60006040518083038185875af1925050503d806000811461110d576040519150601f19603f3d011682016040523d82523d6000602084013e611112565b606091505b50509050806111335760405162461bcd60e51b815260040161079a90613d8f565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b03821661117a5760405162461bcd60e51b815260040161079a90613d5f565b6001600160a01b038216600090815260076020526040902061119b906121e6565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b602052604090819020905160609182916111de9086908690613bb7565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156112c357600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156112ab5780601f10611280576101008083540402835291602001916112ab565b820191906000526020600020905b81548152906001019060200180831161128e57829003601f168201915b5050505050815250508152602001906001019061120c565b5050505090506060815160405190808252806020026020018201604052801561130057816020015b60608152602001906001900390816112eb5790505b50905060005b82518110156113465782818151811061131b57fe5b60200260200101516000015182828151811061133357fe5b6020908102919091010152600101611306565b509150505b9392505050565b6004546001600160a01b031681565b6001546001600160a01b03166113756121e2565b6001600160a01b031614806113a457506002546001600160a01b03166113996121e2565b6001600160a01b0316145b6113c05760405162461bcd60e51b815260040161079a90613dcf565b600355565b6001546001600160a01b03166113d96121e2565b6001600160a01b0316148061140857506002546001600160a01b03166113fd6121e2565b6001600160a01b0316145b6114245760405162461bcd60e51b815260040161079a90613dcf565b600254600160a01b900460ff161561143b57600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061145d83611152565b90508061147a576040805160008082526020820190925290610c43565b6060816040519080825280602002602001820160405280156114a6578160200160208202803883390190505b50905060006114b36108d9565b9050600060015b828111610cdc576000818152600660205260409020546001600160a01b038881169116141561150257808483815181106114f057fe5b60209081029190910101526001909101905b6001016114ba565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b600254600160a01b900460ff161561158257600080fd5b61158a6121e2565b6001600160a01b0316826001600160a01b031614156115bb5760405162461bcd60e51b815260040161079a90613daf565b80600f60006115c86121e2565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561160c6121e2565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116449190613cf2565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b8282101561173b57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156117235780601f106116f857610100808354040283529160200191611723565b820191906000526020600020905b81548152906001019060200180831161170657829003601f168201915b50505050508152505081526020019060010190611684565b5050505090506060815160405190808252806020026020018201604052801561177857816020015b60608152602001906001900390816117635790505b50905060005b82518110156117be5782818151811061179357fe5b6020026020010151600001518282815181106117ab57fe5b602090810291909101015260010161177e565b509392505050565b600254600160a01b900460ff16156117dd57600080fd5b6117ee6117e86121e2565b836121ea565b61180a5760405162461bcd60e51b815260040161079a90613e2f565b6000828152600a60205260408120546001600160a01b03169061182c84611137565b600085815260096020908152604080832054600a9092529091206003015491925063ffffffff1690600160a01b900460ff1661188a5761186d87878761226f565b1561188a5760405162461bcd60e51b815260040161079a90613d2f565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916118c39185918c918c918c918b918b9101613e86565b60206040518083038186803b1580156118db57600080fd5b505afa1580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119139190810190613324565b61192f5760405162461bcd60e51b815260040161079a90613e2f565b61193b87878787612807565b50505050505050565b600254600090600160a01b900460ff161561195e57600080fd5b60035434101561196d57600080fd5b60008363ffffffff16116119935760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac8846119ad6121e2565b6040518363ffffffff1660e01b81526004016119ca929190613e6b565b60206040518083038186803b1580156119e257600080fd5b505afa1580156119f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a1a9190810190613324565b611a365760405162461bcd60e51b815260040161079a90613e1f565b611a438a898989876123c9565b611a5f5760405162461bcd60e51b815260040161079a90613dff565b6000610b93611a6c6121e2565b61283a565b6001546001600160a01b0316611a856121e2565b6001600160a01b03161480611ab457506002546001600160a01b0316611aa96121e2565b6001600160a01b0316145b611ad05760405162461bcd60e51b815260040161079a90613dcf565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611afd826121c5565b611b195760405162461bcd60e51b815260040161079a90613e0f565b6000828152600d602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611bac5780601f10611b8157610100808354040283529160200191611bac565b820191906000526020600020905b815481529060010190602001808311611b8f57829003601f168201915b50505050509050919050565b6001546001600160a01b0316611bcc6121e2565b6001600160a01b03161480611bfb57506002546001600160a01b0316611bf06121e2565b6001600160a01b0316145b611c175760405162461bcd60e51b815260040161079a90613dcf565b6001600160a01b03811615611c4257600280546001600160a01b0319166001600160a01b0383161790555b50565b600080606080600080600080600080611c5d8b6121c5565b611c795760405162461bcd60e51b815260040161079a90613e0f565b611c81612f33565b60008c8152600a60209081526040918290208251610100808201855282546001600160a01b03168252600180840180548751600293821615909402600019011691909104601f8101869004860283018601909652858252919492938581019391929190830182828015611d355780601f10611d0a57610100808354040283529160200191611d35565b820191906000526020600020905b815481529060010190602001808311611d1857829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015611dc75780601f10611d9c57610100808354040283529160200191611dc7565b820191906000526020600020905b815481529060010190602001808311611daa57829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152660100000000000083048216604080860191909152600160601b84049092166060850152600160901b830461ffff166080850152600160a01b90920460ff16151560a09093019290925260008f815260099091522054815191925063ffffffff1690611e548e611137565b83602001518460400151856060015186608001518760a001518860c001518960e00151898797508696509b509b509b509b509b509b509b509b509b509b5050509193959799509193959799565b6001546001600160a01b0316611eb56121e2565b6001600160a01b03161480611ee457506002546001600160a01b0316611ed96121e2565b6001600160a01b0316145b611f005760405162461bcd60e51b815260040161079a90613dcf565b6001600160a01b03811615611c4257600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b600254600090600160a01b900460ff1615611f7757600080fd5b600354341015611f8657600080fd5b60008263ffffffff1611611fac5760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac883611fc66121e2565b6040518363ffffffff1660e01b8152600401611fe3929190613e6b565b60206040518083038186803b158015611ffb57600080fd5b505afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120339190810190613324565b61204f5760405162461bcd60e51b815260040161079a90613e1f565b61205c89888888866123c9565b6120785760405162461bcd60e51b815260040161079a90613dff565b6000610e11611a6c6121e2565b600254600090600160a01b900460ff161561209f57600080fd5b6003543410156120ae57600080fd5b60008363ffffffff16116120d45760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac8846120ee6121e2565b6040518363ffffffff1660e01b815260040161210b929190613e6b565b60206040518083038186803b15801561212357600080fd5b505afa158015612137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061215b9190810190613324565b6121775760405162461bcd60e51b815260040161079a90613e1f565b6121848a898989876123c9565b6121a05760405162461bcd60e51b815260040161079a90613dff565b60006121b36121ad6121e2565b84612919565b9050610baf818c8c8c8c8c8c8c6124ef565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b60006121f5826121c5565b6122115760405162461bcd60e51b815260040161079a90613e0f565b600061221c83611137565b9050806001600160a01b0316846001600160a01b031614806122575750836001600160a01b031661224c84610773565b6001600160a01b0316145b8061226757506122678185611f2f565b949350505050565b6000818152600a60205260408120546001600160a01b039081169085168114806122aa5750806001600160a01b0316846001600160a01b0316145b156122b957600091505061134b565b600191505061134b565b826001600160a01b03166122d682611137565b6001600160a01b0316146122fc5760405162461bcd60e51b815260040161079a90613e2f565b6001600160a01b0382166123225760405162461bcd60e51b815260040161079a90613d4f565b61232b81612950565b6001600160a01b038316600090815260076020526040902061234c9061298b565b6001600160a01b038216600090815260076020526040902061236d906129a2565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe61783916123fd9186918b9101613ee0565b60206040518083038186803b15801561241557600080fd5b505afa158015612429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061244d9190810190613324565b6124695760405162461bcd60e51b815260040161079a90613d9f565b8265ffffffffffff168565ffffffffffff16116124985760405162461bcd60e51b815260040161079a90613ddf565b8465ffffffffffff168465ffffffffffff16116124c75760405162461bcd60e51b815260040161079a90613def565b50600195945050505050565b60008061134b8360405180602001604052806000815250612919565b6124f8886121c5565b6125145760405162461bcd60e51b815260040161079a90613e0f565b61251c612f33565b6040518061010001604052806125306121e2565b6001600160a01b03908116825260208083018c905260408084018c905265ffffffffffff8b811660608601528a81166080860152891660a085015261ffff881660c085015286151560e09094019390935260008d8152600a825292909220835181546001600160a01b0319169216919091178155828201518051939450849391926125c392600185019290910190612f78565b50604082015180516125df916002840191602090910190612f78565b5060608201516003919091018054608084015160a085015160c086015160e09096015165ffffffffffff1990931665ffffffffffff958616176bffffffffffff00000000000019166601000000000000928616929092029190911771ffffffffffff0000000000000000000000001916600160601b94909116939093029290921773ffff0000000000000000000000000000000000001916600160901b61ffff909416939093029290921760ff60a01b1916600160a01b911515919091021790556126a9886129ab565b61271257600c60006126b96121e2565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528b835280546001810180835591835291849020835180519295919093019261270d9284929190910190612f78565b505050505b61271c8888612ad6565b6127a657600b600061272c6121e2565b6001600160a01b03166001600160a01b031681526020019081526020016000208860405161275a9190613bc4565b9081526040805191829003602090810183208382019092528983528154600181018084556000938452928290208451805194959491909201926127a1928492910190612f78565b505050505b505050505050505050565b6127ba826121c5565b6127d65760405162461bcd60e51b815260040161079a90613e0f565b6000828152600d602090815260409091208251610ef392840190612f78565b611c4261280182611137565b82612c1d565b6128128484846122c3565b61281e84848484612d6a565b6110365760405162461bcd60e51b815260040161079a90613d3f565b60006001600160a01b0382166128625760405162461bcd60e51b815260040161079a90613d1f565b61286c60056129a2565b600061287860056121e6565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506128ba906129a2565b6001600160a01b03831660009081526008602052604090206128db906129a2565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000806129258461283a565b90506129346000858386612d6a565b61134b5760405162461bcd60e51b815260040161079a90613d3f565b6000818152600e60205260409020546001600160a01b031615611c42576000908152600e6020526040902080546001600160a01b0319169055565b805461299e90600163ffffffff612e3516565b9055565b80546001019055565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b82821015612a8d57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612a755780601f10612a4a57610100808354040283529160200191612a75565b820191906000526020600020905b815481529060010190602001808311612a5857829003601f168201915b505050505081525050815260200190600101906129d6565b5092935060009250829150505b82518110156117be57612ac485848381518110612ab357fe5b602002602001015160000151612e77565b15612ace57600191505b600101612a9a565b336000908152600b6020526040808220905160609190612af7908690613bc4565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612bdc57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612bc45780601f10612b9957610100808354040283529160200191612bc4565b820191906000526020600020905b815481529060010190602001808311612ba757829003601f168201915b50505050508152505081526020019060010190612b25565b5092935060009250829150505b8251811015612c1457612c0285848381518110612ab357fe5b15612c0c57600191505b600101612be9565b50949350505050565b816001600160a01b0316612c3082611137565b6001600160a01b031614612c565760405162461bcd60e51b815260040161079a90613d6f565b612c5f81612950565b6001600160a01b0382166000908152600760205260409020612c809061298b565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415612cd6576000818152600d60205260408120612cd691612ff6565b6000818152600a6020526040812080546001600160a01b031916815590612d006001830182612ff6565b612d0e600283016000612ff6565b50600301805474ffffffffffffffffffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612d7e846001600160a01b0316612ed0565b612d8a57506001612267565b6000846001600160a01b031663150b7a02612da36121e2565b8887876040518563ffffffff1660e01b8152600401612dc59493929190613c8c565b602060405180830381600087803b158015612ddf57600080fd5b505af1158015612df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e179190810190613360565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600061134b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612f07565b600081604051602001612e8a9190613bc4565b6040516020818303038152906040528051906020012083604051602001612eb19190613bc4565b6040516020818303038152906040528051906020012014905092915050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906122675750141592915050565b60008184841115612f2b5760405162461bcd60e51b815260040161079a9190613d0e565b505050900390565b604080516101008101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612fb957805160ff1916838001178555612fe6565b82800160010185558215612fe6579182015b82811115612fe6578251825591602001919060010190612fcb565b50612ff2929150613036565b5090565b50805460018160011615610100020316600290046000825580601f1061301c5750611c42565b601f016020900490600052602060002090810190611c4291905b61077091905b80821115612ff2576000815560010161303c565b803561119b81613ff3565b803561119b81614007565b805161119b81614007565b803561119b81614010565b805161119b81614010565b600082601f83011261309857600080fd5b81356130ab6130a682613f27565b613f00565b915080825260208301602083018583830111156130c757600080fd5b6130d2838284613fb1565b50505092915050565b60008083601f8401126130ed57600080fd5b50813567ffffffffffffffff81111561310557600080fd5b60208301915083600182028301111561311d57600080fd5b9250929050565b803561119b81614019565b803561119b81614022565b803561119b8161402b565b803561119b81614034565b60006020828403121561316257600080fd5b60006122678484613050565b6000806040838503121561318157600080fd5b600061318d8585613050565b925050602061319e85828601613050565b9150509250929050565b6000806000606084860312156131bd57600080fd5b60006131c98686613050565b93505060206131da86828701613050565b92505060406131eb8682870161312f565b9150509250925092565b6000806000806080858703121561320b57600080fd5b60006132178787613050565b945050602061322887828801613050565b93505060406132398782880161312f565b925050606085013567ffffffffffffffff81111561325657600080fd5b61326287828801613087565b91505092959194509250565b6000806040838503121561328157600080fd5b600061328d8585613050565b925050602061319e8582860161305b565b6000806000604084860312156132b357600080fd5b60006132bf8686613050565b935050602084013567ffffffffffffffff8111156132dc57600080fd5b6132e8868287016130db565b92509250509250925092565b6000806040838503121561330757600080fd5b60006133138585613050565b925050602061319e8582860161312f565b60006020828403121561333657600080fd5b60006122678484613066565b60006020828403121561335457600080fd5b60006122678484613071565b60006020828403121561337257600080fd5b6000612267848461307c565b600080600080600080600080610100898b03121561339b57600080fd5b883567ffffffffffffffff8111156133b257600080fd5b6133be8b828c01613087565b985050602089013567ffffffffffffffff8111156133db57600080fd5b6133e78b828c01613087565b97505060406133f88b828c01613145565b96505060606134098b828c01613145565b955050608061341a8b828c01613145565b94505060a061342b8b828c01613124565b93505060c061343c8b828c0161305b565b92505060e061344d8b828c0161313a565b9150509295985092959890939650565b60008060008060008060008060006101208a8c03121561347c57600080fd5b893567ffffffffffffffff81111561349357600080fd5b61349f8c828d01613087565b99505060208a013567ffffffffffffffff8111156134bc57600080fd5b6134c88c828d01613087565b98505060406134d98c828d01613145565b97505060606134ea8c828d01613145565b96505060806134fb8c828d01613145565b95505060a061350c8c828d01613124565b94505060c061351d8c828d0161305b565b93505060e061352e8c828d0161313a565b9250506101008a013567ffffffffffffffff81111561354c57600080fd5b6135588c828d01613087565b9150509295985092959850929598565b60006020828403121561357a57600080fd5b6000612267848461312f565b600061134b8383613685565b600061359e8383613b9c565b505060200190565b6135af81613f62565b82525050565b60006135c082613f55565b6135ca8185613f59565b9350836020820285016135dc85613f4f565b8060005b8581101561361657848403895281516135f98582613586565b945061360483613f4f565b60209a909a01999250506001016135e0565b5091979650505050505050565b600061362e82613f55565b6136388185613f59565b935061364383613f4f565b8060005b8381101561367157815161365b8882613592565b975061366683613f4f565b925050600101613647565b509495945050505050565b6135af81613f6d565b600061369082613f55565b61369a8185613f59565b93506136aa818560208601613fbd565b6136b381613fe9565b9093019392505050565b6135af81613fa6565b60006136d283856106d7565b93506136df838584613fb1565b50500190565b60006136f082613f55565b6136fa81856106d7565b935061370a818560208601613fbd565b9290920192915050565b6000613721601483613f59565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b600061375a601a83613f59565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000613793602a83613f59565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b60006137df601883613f59565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000613818601983613f59565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b6000613851601183613f59565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b600061388a601583613f59565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b60006138c3600f83613f59565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b60006138fc602383613f59565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b6000613941601a83613f59565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b600061397a601583613f59565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b60006139b3601383613f59565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b60006139ec602183613f59565b7f53544152545f54494d455f41465445525f41554354494f4e5f454e445f54494d8152604560f81b602082015260400192915050565b6000613a2f601983613f59565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b600061119b6000836106d7565b6000613a75601183613f59565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b6000613aae601283613f59565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613ae7602583613f59565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b6000613b2e601583613f59565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b6000613b67601583613f59565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b6135af81613f7f565b6135af81610770565b6135af81613f92565b6135af81613f9b565b60006122678284866136c6565b600061134b82846136e5565b600061119b82613a5b565b6020810161119b82846135a6565b6101408101613bf8828d6135a6565b613c05602083018c6135a6565b8181036040830152613c17818b613685565b90508181036060830152613c2b818a613685565b9050613c3a6080830189613bae565b613c4760a0830188613bae565b613c5460c0830187613bae565b613c6160e0830186613b93565b613c6f61010083018561367c565b613c7d610120830184613ba5565b9b9a5050505050505050505050565b60808101613c9a82876135a6565b613ca760208301866135a6565b613cb46040830185613b9c565b8181036060830152613cc68184613685565b9695505050505050565b6020808252810161134b81846135b5565b6020808252810161134b8184613623565b6020810161119b828461367c565b6020810161119b82846136bd565b6020808252810161134b8184613685565b6020808252810161119b81613714565b6020808252810161119b8161374d565b6020808252810161119b81613786565b6020808252810161119b816137d2565b6020808252810161119b8161380b565b6020808252810161119b81613844565b6020808252810161119b8161387d565b6020808252810161119b816138b6565b6020808252810161119b816138ef565b6020808252810161119b81613934565b6020808252810161119b8161396d565b6020808252810161119b816139a6565b6020808252810161119b816139df565b6020808252810161119b81613a22565b6020808252810161119b81613a68565b6020808252810161119b81613aa1565b6020808252810161119b81613ada565b6020808252810161119b81613b21565b6020808252810161119b81613b5a565b6020810161119b8284613b9c565b6020810161119b8284613ba5565b60408101613e798285613ba5565b61134b60208301846135a6565b60c08101613e948289613ba5565b613ea160208301886135a6565b613eae60408301876135a6565b613ebb6060830186613b9c565b613ec860808301856135a6565b613ed560a08301846135a6565b979650505050505050565b60408101613eee8285613ba5565b81810360208301526122678184613685565b60405181810167ffffffffffffffff81118282101715613f1f57600080fd5b604052919050565b600067ffffffffffffffff821115613f3e57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b600061119b82613f86565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b600061119b82613f62565b82818337506000910152565b60005b83811015613fd8578181015183820152602001613fc0565b838111156110365750506000910152565b601f01601f191690565b613ffc81613f62565b8114611c4257600080fd5b613ffc81613f6d565b613ffc81613f72565b613ffc81613f7f565b613ffc81610770565b613ffc81613f92565b613ffc81613f9b56fea365627a7a723158209018393b186b2040bd6c10d52a7a82d7682c252662714427adcf58a52f73b8766c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x6080604052600436106102255760003560e01c80637368891411610123578063b88d4fde116100ab578063e5c249241161006f578063e5c249241461061d578063e982d5a914610653578063e985e9c514610673578063f33efd1e14610693578063fb796bb7146106a657610225565b8063b88d4fde1461058a578063c51e713c146105aa578063c57a8825146105bd578063c87b56dd146105dd578063e2b375a9146105fd57610225565b80638456cb59116100f25780638456cb59146105005780638462151c1461051557806395d89b4114610535578063a22cb4651461054a578063a4ede1281461056a57610225565b8063736889141461047c5780637affcb9a146104915780637b103999146104be57806384017e52146104e057610225565b80632a0c7799116101b1578063527097251161017557806352709725146103fd5780635c975abb146104125780635fd8c710146104275780636352211e1461043c57806370a082311461045c57610225565b80632a0c7799146103685780632e0dccbb146103955780633f4ba83a146103a857806342842e0e146103bd57806342966c68146103dd57610225565b806313966db5116101f857806313966db5146102d1578063180b9e3f146102f357806318160ddd1461032057806323b872dd146103355780632441c7091461035557610225565b806301ffc9a71461022a57806306fdde0314610260578063081812fc14610282578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004613342565b6106b9565b6040516102579190613cf2565b60405180910390f35b34801561026c57600080fd5b506102756106dc565b6040516102579190613d0e565b34801561028e57600080fd5b506102a261029d366004613568565b610773565b6040516102579190613bdb565b3480156102bb57600080fd5b506102cf6102ca3660046132f4565b6107bf565b005b3480156102dd57600080fd5b506102e66108bb565b6040516102579190613e4f565b3480156102ff57600080fd5b5061031361030e366004613568565b6108c1565b6040516102579190613e5d565b34801561032c57600080fd5b506102e66108d9565b34801561034157600080fd5b506102cf6103503660046131a8565b6108ea565b6102e661036336600461345d565b610a66565b34801561037457600080fd5b50610388610383366004613150565b610be1565b6040516102579190613ce1565b6102e66103a336600461337e565b610ce9565b3480156103b457600080fd5b506102cf610e54565b3480156103c957600080fd5b506102cf6103d83660046131a8565b610ed8565b3480156103e957600080fd5b506102cf6103f8366004613568565b610ef8565b34801561040957600080fd5b506102a261103c565b34801561041e57600080fd5b5061024a61104b565b34801561043357600080fd5b506102cf61105b565b34801561044857600080fd5b506102a2610457366004613568565b611137565b34801561046857600080fd5b506102e6610477366004613150565b611152565b34801561048857600080fd5b506102a26111a1565b34801561049d57600080fd5b506104b16104ac36600461329e565b6111b0565b6040516102579190613cd0565b3480156104ca57600080fd5b506104d3611352565b6040516102579190613d00565b3480156104ec57600080fd5b506102cf6104fb366004613568565b611361565b34801561050c57600080fd5b506102cf6113c5565b34801561052157600080fd5b50610388610530366004613150565b611450565b34801561054157600080fd5b5061027561150a565b34801561055657600080fd5b506102cf61056536600461326e565b61156b565b34801561057657600080fd5b506104b1610585366004613150565b611650565b34801561059657600080fd5b506102cf6105a53660046131f5565b6117c6565b6102e66105b836600461345d565b611944565b3480156105c957600080fd5b506102cf6105d8366004613150565b611a71565b3480156105e957600080fd5b506102756105f8366004613568565b611af2565b34801561060957600080fd5b506102cf610618366004613150565b611bb8565b34801561062957600080fd5b5061063d610638366004613568565b611c45565b6040516102579a99989796959493929190613be9565b34801561065f57600080fd5b506102cf61066e366004613150565b611ea1565b34801561067f57600080fd5b5061024a61068e36600461316e565b611f2f565b6102e66106a136600461337e565b611f5d565b6102e66106b436600461345d565b612085565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b820191906000526020600020905b81548152906001019060200180831161074b57829003601f168201915b505050505090505b90565b600061077e826121c5565b6107a35760405162461bcd60e51b815260040161079a90613e0f565b60405180910390fd5b506000908152600e60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107d657600080fd5b60006107e182611137565b9050806001600160a01b0316836001600160a01b031614156108155760405162461bcd60e51b815260040161079a90613d7f565b806001600160a01b03166108276121e2565b6001600160a01b0316148061084357506108438161068e6121e2565b61085f5760405162461bcd60e51b815260040161079a90613e3f565b6000828152600e602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108e560056121e6565b905090565b600254600160a01b900460ff161561090157600080fd5b61091261090c6121e2565b826121ea565b61092e5760405162461bcd60e51b815260040161079a90613e2f565b6000818152600a60205260408120546001600160a01b03169061095083611137565b600084815260096020908152604080832054600a9092529091206003015491925063ffffffff1690600160a01b900460ff166109ae5761099186868661226f565b156109ae5760405162461bcd60e51b815260040161079a90613d2f565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109e79185918b918b918b918b918b9101613e86565b60206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a379190810190613324565b610a535760405162461bcd60e51b815260040161079a90613e2f565b610a5e8686866122c3565b505050505050565b600254600090600160a01b900460ff1615610a8057600080fd5b600354341015610a8f57600080fd5b60008363ffffffff1611610ab55760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac884610acf6121e2565b6040518363ffffffff1660e01b8152600401610aec929190613e6b565b60206040518083038186803b158015610b0457600080fd5b505afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3c9190810190613324565b610b585760405162461bcd60e51b815260040161079a90613e1f565b610b658a898989876123c9565b610b815760405162461bcd60e51b815260040161079a90613dff565b6000610b93610b8e6121e2565b6124d3565b9050610ba5818c8c8c8c8c8c8c6124ef565b610baf81846127b1565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509998505050505050505050565b60606001600160a01b038216610c095760405162461bcd60e51b815260040161079a90613d5f565b6001600160a01b0382166000908152600860205260408120610c2a906121e6565b905080610c4c5760408051600080825260208201909252905b509150506106d7565b606081604051908082528060200260200182016040528015610c78578160200160208202803883390190505b5090506000610c856108d9565b9050600060015b828111610cdc576000818152600a60205260409020546001600160a01b0388811691161415610cd45780848381518110610cc257fe5b60209081029190910101526001909101905b600101610c8c565b83955050505050506106d7565b600254600090600160a01b900460ff1615610d0357600080fd5b600354341015610d1257600080fd5b60008263ffffffff1611610d385760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac883610d526121e2565b6040518363ffffffff1660e01b8152600401610d6f929190613e6b565b60206040518083038186803b158015610d8757600080fd5b505afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dbf9190810190613324565b610ddb5760405162461bcd60e51b815260040161079a90613e1f565b610de889888888866123c9565b610e045760405162461bcd60e51b815260040161079a90613dff565b6000610e11610b8e6121e2565b9050610e23818b8b8b8b8b8b8b6124ef565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905098975050505050505050565b6001546001600160a01b0316610e686121e2565b6001600160a01b03161480610e9757506002546001600160a01b0316610e8c6121e2565b6001600160a01b0316145b610eb35760405162461bcd60e51b815260040161079a90613dcf565b600254600160a01b900460ff16610ec957600080fd5b6002805460ff60a01b19169055565b610ef3838383604051806020016040528060008152506117c6565b505050565b600254600160a01b900460ff1615610f0f57600080fd5b6000818152600a60205260408120546001600160a01b031690610f3183611137565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415611000576004546001600160a01b03166312d26ac882610f776121e2565b6040518363ffffffff1660e01b8152600401610f94929190613e6b565b60206040518083038186803b158015610fac57600080fd5b505afa158015610fc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fe49190810190613324565b6110005760405162461bcd60e51b815260040161079a90613d6f565b61101161100b6121e2565b856121ea565b61102d5760405162461bcd60e51b815260040161079a90613d6f565b611036846127f5565b50505050565b6002546001600160a01b031681565b600254600160a01b900460ff1681565b6001546001600160a01b031661106f6121e2565b6001600160a01b0316148061109e57506002546001600160a01b03166110936121e2565b6001600160a01b0316145b6110ba5760405162461bcd60e51b815260040161079a90613dcf565b604051303190600090339083906110d090613bd0565b60006040518083038185875af1925050503d806000811461110d576040519150601f19603f3d011682016040523d82523d6000602084013e611112565b606091505b50509050806111335760405162461bcd60e51b815260040161079a90613d8f565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b03821661117a5760405162461bcd60e51b815260040161079a90613d5f565b6001600160a01b038216600090815260076020526040902061119b906121e6565b92915050565b6001546001600160a01b031681565b6001600160a01b0383166000908152600b602052604090819020905160609182916111de9086908690613bb7565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156112c357600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156112ab5780601f10611280576101008083540402835291602001916112ab565b820191906000526020600020905b81548152906001019060200180831161128e57829003601f168201915b5050505050815250508152602001906001019061120c565b5050505090506060815160405190808252806020026020018201604052801561130057816020015b60608152602001906001900390816112eb5790505b50905060005b82518110156113465782818151811061131b57fe5b60200260200101516000015182828151811061133357fe5b6020908102919091010152600101611306565b509150505b9392505050565b6004546001600160a01b031681565b6001546001600160a01b03166113756121e2565b6001600160a01b031614806113a457506002546001600160a01b03166113996121e2565b6001600160a01b0316145b6113c05760405162461bcd60e51b815260040161079a90613dcf565b600355565b6001546001600160a01b03166113d96121e2565b6001600160a01b0316148061140857506002546001600160a01b03166113fd6121e2565b6001600160a01b0316145b6114245760405162461bcd60e51b815260040161079a90613dcf565b600254600160a01b900460ff161561143b57600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061145d83611152565b90508061147a576040805160008082526020820190925290610c43565b6060816040519080825280602002602001820160405280156114a6578160200160208202803883390190505b50905060006114b36108d9565b9050600060015b828111610cdc576000818152600660205260409020546001600160a01b038881169116141561150257808483815181106114f057fe5b60209081029190910101526001909101905b6001016114ba565b60118054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107685780601f1061073d57610100808354040283529160200191610768565b600254600160a01b900460ff161561158257600080fd5b61158a6121e2565b6001600160a01b0316826001600160a01b031614156115bb5760405162461bcd60e51b815260040161079a90613daf565b80600f60006115c86121e2565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561160c6121e2565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116449190613cf2565b60405180910390a35050565b6001600160a01b0381166000908152600c602090815260408083208054825181850281018501909352808352606094859484015b8282101561173b57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156117235780601f106116f857610100808354040283529160200191611723565b820191906000526020600020905b81548152906001019060200180831161170657829003601f168201915b50505050508152505081526020019060010190611684565b5050505090506060815160405190808252806020026020018201604052801561177857816020015b60608152602001906001900390816117635790505b50905060005b82518110156117be5782818151811061179357fe5b6020026020010151600001518282815181106117ab57fe5b602090810291909101015260010161177e565b509392505050565b600254600160a01b900460ff16156117dd57600080fd5b6117ee6117e86121e2565b836121ea565b61180a5760405162461bcd60e51b815260040161079a90613e2f565b6000828152600a60205260408120546001600160a01b03169061182c84611137565b600085815260096020908152604080832054600a9092529091206003015491925063ffffffff1690600160a01b900460ff1661188a5761186d87878761226f565b1561188a5760405162461bcd60e51b815260040161079a90613d2f565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916118c39185918c918c918c918b918b9101613e86565b60206040518083038186803b1580156118db57600080fd5b505afa1580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119139190810190613324565b61192f5760405162461bcd60e51b815260040161079a90613e2f565b61193b87878787612807565b50505050505050565b600254600090600160a01b900460ff161561195e57600080fd5b60035434101561196d57600080fd5b60008363ffffffff16116119935760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac8846119ad6121e2565b6040518363ffffffff1660e01b81526004016119ca929190613e6b565b60206040518083038186803b1580156119e257600080fd5b505afa1580156119f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a1a9190810190613324565b611a365760405162461bcd60e51b815260040161079a90613e1f565b611a438a898989876123c9565b611a5f5760405162461bcd60e51b815260040161079a90613dff565b6000610b93611a6c6121e2565b61283a565b6001546001600160a01b0316611a856121e2565b6001600160a01b03161480611ab457506002546001600160a01b0316611aa96121e2565b6001600160a01b0316145b611ad05760405162461bcd60e51b815260040161079a90613dcf565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060611afd826121c5565b611b195760405162461bcd60e51b815260040161079a90613e0f565b6000828152600d602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611bac5780601f10611b8157610100808354040283529160200191611bac565b820191906000526020600020905b815481529060010190602001808311611b8f57829003601f168201915b50505050509050919050565b6001546001600160a01b0316611bcc6121e2565b6001600160a01b03161480611bfb57506002546001600160a01b0316611bf06121e2565b6001600160a01b0316145b611c175760405162461bcd60e51b815260040161079a90613dcf565b6001600160a01b03811615611c4257600280546001600160a01b0319166001600160a01b0383161790555b50565b600080606080600080600080600080611c5d8b6121c5565b611c795760405162461bcd60e51b815260040161079a90613e0f565b611c81612f33565b60008c8152600a60209081526040918290208251610100808201855282546001600160a01b03168252600180840180548751600293821615909402600019011691909104601f8101869004860283018601909652858252919492938581019391929190830182828015611d355780601f10611d0a57610100808354040283529160200191611d35565b820191906000526020600020905b815481529060010190602001808311611d1857829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015611dc75780601f10611d9c57610100808354040283529160200191611dc7565b820191906000526020600020905b815481529060010190602001808311611daa57829003601f168201915b50505091835250506003919091015465ffffffffffff808216602080850191909152660100000000000083048216604080860191909152600160601b84049092166060850152600160901b830461ffff166080850152600160a01b90920460ff16151560a09093019290925260008f815260099091522054815191925063ffffffff1690611e548e611137565b83602001518460400151856060015186608001518760a001518860c001518960e00151898797508696509b509b509b509b509b509b509b509b509b509b5050509193959799509193959799565b6001546001600160a01b0316611eb56121e2565b6001600160a01b03161480611ee457506002546001600160a01b0316611ed96121e2565b6001600160a01b0316145b611f005760405162461bcd60e51b815260040161079a90613dcf565b6001600160a01b03811615611c4257600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205460ff1690565b600254600090600160a01b900460ff1615611f7757600080fd5b600354341015611f8657600080fd5b60008263ffffffff1611611fac5760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac883611fc66121e2565b6040518363ffffffff1660e01b8152600401611fe3929190613e6b565b60206040518083038186803b158015611ffb57600080fd5b505afa15801561200f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120339190810190613324565b61204f5760405162461bcd60e51b815260040161079a90613e1f565b61205c89888888866123c9565b6120785760405162461bcd60e51b815260040161079a90613dff565b6000610e11611a6c6121e2565b600254600090600160a01b900460ff161561209f57600080fd5b6003543410156120ae57600080fd5b60008363ffffffff16116120d45760405162461bcd60e51b815260040161079a90613dbf565b6004546001600160a01b03166312d26ac8846120ee6121e2565b6040518363ffffffff1660e01b815260040161210b929190613e6b565b60206040518083038186803b15801561212357600080fd5b505afa158015612137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061215b9190810190613324565b6121775760405162461bcd60e51b815260040161079a90613e1f565b6121848a898989876123c9565b6121a05760405162461bcd60e51b815260040161079a90613dff565b60006121b36121ad6121e2565b84612919565b9050610baf818c8c8c8c8c8c8c6124ef565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b60006121f5826121c5565b6122115760405162461bcd60e51b815260040161079a90613e0f565b600061221c83611137565b9050806001600160a01b0316846001600160a01b031614806122575750836001600160a01b031661224c84610773565b6001600160a01b0316145b8061226757506122678185611f2f565b949350505050565b6000818152600a60205260408120546001600160a01b039081169085168114806122aa5750806001600160a01b0316846001600160a01b0316145b156122b957600091505061134b565b600191505061134b565b826001600160a01b03166122d682611137565b6001600160a01b0316146122fc5760405162461bcd60e51b815260040161079a90613e2f565b6001600160a01b0382166123225760405162461bcd60e51b815260040161079a90613d4f565b61232b81612950565b6001600160a01b038316600090815260076020526040902061234c9061298b565b6001600160a01b038216600090815260076020526040902061236d906129a2565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe61783916123fd9186918b9101613ee0565b60206040518083038186803b15801561241557600080fd5b505afa158015612429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061244d9190810190613324565b6124695760405162461bcd60e51b815260040161079a90613d9f565b8265ffffffffffff168565ffffffffffff16116124985760405162461bcd60e51b815260040161079a90613ddf565b8465ffffffffffff168465ffffffffffff16116124c75760405162461bcd60e51b815260040161079a90613def565b50600195945050505050565b60008061134b8360405180602001604052806000815250612919565b6124f8886121c5565b6125145760405162461bcd60e51b815260040161079a90613e0f565b61251c612f33565b6040518061010001604052806125306121e2565b6001600160a01b03908116825260208083018c905260408084018c905265ffffffffffff8b811660608601528a81166080860152891660a085015261ffff881660c085015286151560e09094019390935260008d8152600a825292909220835181546001600160a01b0319169216919091178155828201518051939450849391926125c392600185019290910190612f78565b50604082015180516125df916002840191602090910190612f78565b5060608201516003919091018054608084015160a085015160c086015160e09096015165ffffffffffff1990931665ffffffffffff958616176bffffffffffff00000000000019166601000000000000928616929092029190911771ffffffffffff0000000000000000000000001916600160601b94909116939093029290921773ffff0000000000000000000000000000000000001916600160901b61ffff909416939093029290921760ff60a01b1916600160a01b911515919091021790556126a9886129ab565b61271257600c60006126b96121e2565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528b835280546001810180835591835291849020835180519295919093019261270d9284929190910190612f78565b505050505b61271c8888612ad6565b6127a657600b600061272c6121e2565b6001600160a01b03166001600160a01b031681526020019081526020016000208860405161275a9190613bc4565b9081526040805191829003602090810183208382019092528983528154600181018084556000938452928290208451805194959491909201926127a1928492910190612f78565b505050505b505050505050505050565b6127ba826121c5565b6127d65760405162461bcd60e51b815260040161079a90613e0f565b6000828152600d602090815260409091208251610ef392840190612f78565b611c4261280182611137565b82612c1d565b6128128484846122c3565b61281e84848484612d6a565b6110365760405162461bcd60e51b815260040161079a90613d3f565b60006001600160a01b0382166128625760405162461bcd60e51b815260040161079a90613d1f565b61286c60056129a2565b600061287860056121e6565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506128ba906129a2565b6001600160a01b03831660009081526008602052604090206128db906129a2565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000806129258461283a565b90506129346000858386612d6a565b61134b5760405162461bcd60e51b815260040161079a90613d3f565b6000818152600e60205260409020546001600160a01b031615611c42576000908152600e6020526040902080546001600160a01b0319169055565b805461299e90600163ffffffff612e3516565b9055565b80546001019055565b336000908152600c602090815260408083208054825181850281018501909352808352606093859084015b82821015612a8d57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612a755780601f10612a4a57610100808354040283529160200191612a75565b820191906000526020600020905b815481529060010190602001808311612a5857829003601f168201915b505050505081525050815260200190600101906129d6565b5092935060009250829150505b82518110156117be57612ac485848381518110612ab357fe5b602002602001015160000151612e77565b15612ace57600191505b600101612a9a565b336000908152600b6020526040808220905160609190612af7908690613bc4565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015612bdc57600084815260209081902060408051918501805460026001821615610100026000190190911604601f8101859004850284018301835293830184815292939092849290918491840182828015612bc45780601f10612b9957610100808354040283529160200191612bc4565b820191906000526020600020905b815481529060010190602001808311612ba757829003601f168201915b50505050508152505081526020019060010190612b25565b5092935060009250829150505b8251811015612c1457612c0285848381518110612ab357fe5b15612c0c57600191505b600101612be9565b50949350505050565b816001600160a01b0316612c3082611137565b6001600160a01b031614612c565760405162461bcd60e51b815260040161079a90613d6f565b612c5f81612950565b6001600160a01b0382166000908152600760205260409020612c809061298b565b600081815260066020908152604080832080546001600160a01b0319169055600d9091529020546002600019600183161561010002019091160415612cd6576000818152600d60205260408120612cd691612ff6565b6000818152600a6020526040812080546001600160a01b031916815590612d006001830182612ff6565b612d0e600283016000612ff6565b50600301805474ffffffffffffffffffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612d7e846001600160a01b0316612ed0565b612d8a57506001612267565b6000846001600160a01b031663150b7a02612da36121e2565b8887876040518563ffffffff1660e01b8152600401612dc59493929190613c8c565b602060405180830381600087803b158015612ddf57600080fd5b505af1158015612df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e179190810190613360565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600061134b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612f07565b600081604051602001612e8a9190613bc4565b6040516020818303038152906040528051906020012083604051602001612eb19190613bc4565b6040516020818303038152906040528051906020012014905092915050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906122675750141592915050565b60008184841115612f2b5760405162461bcd60e51b815260040161079a9190613d0e565b505050900390565b604080516101008101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612fb957805160ff1916838001178555612fe6565b82800160010185558215612fe6579182015b82811115612fe6578251825591602001919060010190612fcb565b50612ff2929150613036565b5090565b50805460018160011615610100020316600290046000825580601f1061301c5750611c42565b601f016020900490600052602060002090810190611c4291905b61077091905b80821115612ff2576000815560010161303c565b803561119b81613ff3565b803561119b81614007565b805161119b81614007565b803561119b81614010565b805161119b81614010565b600082601f83011261309857600080fd5b81356130ab6130a682613f27565b613f00565b915080825260208301602083018583830111156130c757600080fd5b6130d2838284613fb1565b50505092915050565b60008083601f8401126130ed57600080fd5b50813567ffffffffffffffff81111561310557600080fd5b60208301915083600182028301111561311d57600080fd5b9250929050565b803561119b81614019565b803561119b81614022565b803561119b8161402b565b803561119b81614034565b60006020828403121561316257600080fd5b60006122678484613050565b6000806040838503121561318157600080fd5b600061318d8585613050565b925050602061319e85828601613050565b9150509250929050565b6000806000606084860312156131bd57600080fd5b60006131c98686613050565b93505060206131da86828701613050565b92505060406131eb8682870161312f565b9150509250925092565b6000806000806080858703121561320b57600080fd5b60006132178787613050565b945050602061322887828801613050565b93505060406132398782880161312f565b925050606085013567ffffffffffffffff81111561325657600080fd5b61326287828801613087565b91505092959194509250565b6000806040838503121561328157600080fd5b600061328d8585613050565b925050602061319e8582860161305b565b6000806000604084860312156132b357600080fd5b60006132bf8686613050565b935050602084013567ffffffffffffffff8111156132dc57600080fd5b6132e8868287016130db565b92509250509250925092565b6000806040838503121561330757600080fd5b60006133138585613050565b925050602061319e8582860161312f565b60006020828403121561333657600080fd5b60006122678484613066565b60006020828403121561335457600080fd5b60006122678484613071565b60006020828403121561337257600080fd5b6000612267848461307c565b600080600080600080600080610100898b03121561339b57600080fd5b883567ffffffffffffffff8111156133b257600080fd5b6133be8b828c01613087565b985050602089013567ffffffffffffffff8111156133db57600080fd5b6133e78b828c01613087565b97505060406133f88b828c01613145565b96505060606134098b828c01613145565b955050608061341a8b828c01613145565b94505060a061342b8b828c01613124565b93505060c061343c8b828c0161305b565b92505060e061344d8b828c0161313a565b9150509295985092959890939650565b60008060008060008060008060006101208a8c03121561347c57600080fd5b893567ffffffffffffffff81111561349357600080fd5b61349f8c828d01613087565b99505060208a013567ffffffffffffffff8111156134bc57600080fd5b6134c88c828d01613087565b98505060406134d98c828d01613145565b97505060606134ea8c828d01613145565b96505060806134fb8c828d01613145565b95505060a061350c8c828d01613124565b94505060c061351d8c828d0161305b565b93505060e061352e8c828d0161313a565b9250506101008a013567ffffffffffffffff81111561354c57600080fd5b6135588c828d01613087565b9150509295985092959850929598565b60006020828403121561357a57600080fd5b6000612267848461312f565b600061134b8383613685565b600061359e8383613b9c565b505060200190565b6135af81613f62565b82525050565b60006135c082613f55565b6135ca8185613f59565b9350836020820285016135dc85613f4f565b8060005b8581101561361657848403895281516135f98582613586565b945061360483613f4f565b60209a909a01999250506001016135e0565b5091979650505050505050565b600061362e82613f55565b6136388185613f59565b935061364383613f4f565b8060005b8381101561367157815161365b8882613592565b975061366683613f4f565b925050600101613647565b509495945050505050565b6135af81613f6d565b600061369082613f55565b61369a8185613f59565b93506136aa818560208601613fbd565b6136b381613fe9565b9093019392505050565b6135af81613fa6565b60006136d283856106d7565b93506136df838584613fb1565b50500190565b60006136f082613f55565b6136fa81856106d7565b935061370a818560208601613fbd565b9290920192915050565b6000613721601483613f59565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b600061375a601a83613f59565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000613793602a83613f59565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b60006137df601883613f59565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000613818601983613f59565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b6000613851601183613f59565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b600061388a601583613f59565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b60006138c3600f83613f59565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b60006138fc602383613f59565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b6000613941601a83613f59565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b600061397a601583613f59565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b60006139b3601383613f59565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b60006139ec602183613f59565b7f53544152545f54494d455f41465445525f41554354494f4e5f454e445f54494d8152604560f81b602082015260400192915050565b6000613a2f601983613f59565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b600061119b6000836106d7565b6000613a75601183613f59565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b6000613aae601283613f59565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613ae7602583613f59565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b6000613b2e601583613f59565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b6000613b67601583613f59565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b6135af81613f7f565b6135af81610770565b6135af81613f92565b6135af81613f9b565b60006122678284866136c6565b600061134b82846136e5565b600061119b82613a5b565b6020810161119b82846135a6565b6101408101613bf8828d6135a6565b613c05602083018c6135a6565b8181036040830152613c17818b613685565b90508181036060830152613c2b818a613685565b9050613c3a6080830189613bae565b613c4760a0830188613bae565b613c5460c0830187613bae565b613c6160e0830186613b93565b613c6f61010083018561367c565b613c7d610120830184613ba5565b9b9a5050505050505050505050565b60808101613c9a82876135a6565b613ca760208301866135a6565b613cb46040830185613b9c565b8181036060830152613cc68184613685565b9695505050505050565b6020808252810161134b81846135b5565b6020808252810161134b8184613623565b6020810161119b828461367c565b6020810161119b82846136bd565b6020808252810161134b8184613685565b6020808252810161119b81613714565b6020808252810161119b8161374d565b6020808252810161119b81613786565b6020808252810161119b816137d2565b6020808252810161119b8161380b565b6020808252810161119b81613844565b6020808252810161119b8161387d565b6020808252810161119b816138b6565b6020808252810161119b816138ef565b6020808252810161119b81613934565b6020808252810161119b8161396d565b6020808252810161119b816139a6565b6020808252810161119b816139df565b6020808252810161119b81613a22565b6020808252810161119b81613a68565b6020808252810161119b81613aa1565b6020808252810161119b81613ada565b6020808252810161119b81613b21565b6020808252810161119b81613b5a565b6020810161119b8284613b9c565b6020810161119b8284613ba5565b60408101613e798285613ba5565b61134b60208301846135a6565b60c08101613e948289613ba5565b613ea160208301886135a6565b613eae60408301876135a6565b613ebb6060830186613b9c565b613ec860808301856135a6565b613ed560a08301846135a6565b979650505050505050565b60408101613eee8285613ba5565b81810360208301526122678184613685565b60405181810167ffffffffffffffff81118282101715613f1f57600080fd5b604052919050565b600067ffffffffffffffff821115613f3e57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b600061119b82613f86565b151590565b6001600160e01b03191690565b61ffff1690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b600061119b82613f62565b82818337506000910152565b60005b83811015613fd8578181015183820152602001613fc0565b838111156110365750506000910152565b601f01601f191690565b613ffc81613f62565b8114611c4257600080fd5b613ffc81613f6d565b613ffc81613f72565b613ffc81613f7f565b613ffc81610770565b613ffc81613f92565b613ffc81613f9b56fea365627a7a723158209018393b186b2040bd6c10d52a7a82d7682c252662714427adcf58a52f73b8766c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "850:1239:8:-;;;1437:26:3;;;-1:-1:-1;;;;1437:26:3;;;1576:15;1551:40;;1366:336:8;5:2:-1;;;;30:1;27;20:12;5:2;1366:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;6125::3;6144:20;-1:-1:-1;;;;;6125:18:3;:40;:::i;:::-;6245:12;-1:-1:-1;;;;;6245:10:3;:12;:::i;:::-;6236:6;:21;;-1:-1:-1;;;;;;6236:21:3;-1:-1:-1;;;;;6236:21:3;;;;;;;;;;6276:12;:10;:12::i;:::-;6267:6;:21;;-1:-1:-1;;;;;;6267:21:3;-1:-1:-1;;;;;6267:21:3;;;;;;;;;;1464:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1486:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1590:49:8;1609:29;-1:-1:-1;;;;;1590:18:8;:49;:::i;:::-;1650:44;1678:15;1650:27;;;;;:44;;:::i;:::-;1366:336;;;850:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;6762:90:3:-;6834:10;6762:90;;:::o;8088:144::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;-1:-1:-1;;;;;7327:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;-1:-1:-1;;;;;7355:10:3;:12;:::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;;;;;;;;;;;8186:8;:39;;-1:-1:-1;;;;;;8186:39:3;-1:-1:-1;;;;;8186:39:3;;;;;;;;;;8088:144::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;850:1239:8;;;;;;",
  "deployedSourceMap": "850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1807:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:83:8;;;:::i;:::-;;;;;;;;28234:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28234:210:3;;;;;;;;:::i;:::-;;;;;;;;27472:477;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27472:477:3;;;;;;;;:::i;:::-;;1551:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:40:3;;;:::i;:::-;;;;;;;;2429:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2429:54:3;;;;;;;;:::i;:::-;;;;;;;;24833:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24833:98:3;;;:::i;29984:829::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29984:829:3;;;;;;;;:::i;14245:1101::-;;;;;;;;;:::i;23726:973::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23726:973:3;;;;;;;;:::i;:::-;;;;;;;;11916:1016;;;;;;;;;:::i;9022:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9022:78:3;;;:::i;31462:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;31462:134:3;;;;;;;;:::i;37813:550::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;37813:550:3;;;;;;;;:::i;1326:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1326:21:3;;;:::i;1437:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:26:3;;;:::i;9165:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9165:305:3;;;:::i;25600:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25600:152:3;;;;;;;;:::i;25140:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25140:241:3;;;;;;;;:::i;1299:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1299:21:3;;;:::i;22913:403::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22913:403:3;;;;;;;;:::i;:::-;;;;;;;;1769:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1769:32:3;;;:::i;:::-;;;;;;;;8325:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8325:105:3;;;;;;;;:::i;8866:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8866:78:3;;;:::i;26170:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26170:840:3;;;;;;;;:::i;1999:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:87:8;;;:::i;28737:286:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28737:286:3;;;;;;;;:::i;22459:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22459:330:3;;;;;;;;:::i;32318:862::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32318:862:3;;;;;;;;:::i;10734:1093::-;;;;;;;;;:::i;8088:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8088:144:3;;;;;;;;:::i;18088:210::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18088:210:3;;;;;;;;:::i;7766:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7766:169:3;;;;;;;;:::i;21089:950::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21089:950:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7590:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7590:169:3;;;;;;;;:::i;29362:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29362:185:3;;;;;;;;:::i;9586:1008::-;;;;;;;;;:::i;13093:1049::-;;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1807:83:8:-;1878:5;1871:12;;;;;;;;-1:-1:-1;;1871:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:13;;1871:12;;1878:5;;1871:12;;1878:5;1871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:83;;:::o;28234:210:3:-;28293:7;28334:16;28342:7;28334;:16::i;:::-;28313:81;;;;-1:-1:-1;;;28313:81:3;;;;;;;;;;;;;;;;;-1:-1:-1;28412:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;28412:24:3;;28234:210::o;27472:477::-;8624:6;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;27570:18;27591:16;27599:7;27591;:16::i;:::-;27570:37;;27645:10;-1:-1:-1;;;;;27639:16:3;:2;-1:-1:-1;;;;;27639:16:3;;;27618:84;;;;-1:-1:-1;;;27618:84:3;;;;;;;;;27750:10;-1:-1:-1;;;;;27734:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;27734:26:3;;:72;;;;27764:42;27781:10;27793:12;:10;:12::i;27764:42::-;27713:140;;;;-1:-1:-1;;;27713:140:3;;;;;;;;;27864:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;27864:29:3;-1:-1:-1;;;;;27864:29:3;;;;;;;;;27908:33;;27864:24;;27908:33;;;;;;;8641:1;27472:477;;:::o;1551:40::-;;;;:::o;2429:54::-;;;;;;;;;;;;;;;:::o;24833:98::-;24877:7;24904:19;:9;:17;:19::i;:::-;24897:26;;24833:98;:::o;29984:829::-;8624:6;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;30122:41;30141:12;:10;:12::i;:::-;30155:7;30122:18;:41::i;:::-;30101:109;;;;-1:-1:-1;;;30101:109:3;;;;;;;;;30221:14;30238:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;30238:32:3;;30296:16;30255:7;30296;:16::i;:::-;30322:19;30344:28;;;:19;:28;;;;;;;;;30387:16;:25;;;;;;:51;;;30280:32;;-1:-1:-1;30344:28:3;;;-1:-1:-1;;;30387:51:3;;;;30383:220;;30488:35;30505:4;30511:2;30515:7;30488:16;:35::i;:::-;:44;30463:129;;;;-1:-1:-1;;;30463:129:3;;;;;;;;;30634:8;;;:81;;-1:-1:-1;;;30634:81:3;;-1:-1:-1;;;;;30634:8:3;;;;:33;;:81;;30668:12;;30682:4;;30688:2;;30692:7;;30701:6;;30709:5;;30634:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30634:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30634:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;30634:81:3;;;;;;;;;30613:149;;;;-1:-1:-1;;;30613:149:3;;;;;;;;;30773:32;30787:4;30793:2;30797:7;30773:13;:32::i;:::-;8641:1;;;29984:829;;;:::o;14245:1101::-;8624:6;;14627:7;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;14672:7;;14659:9;:20;;14651:29;;;;;;14714:1;14699:12;:16;;;14691:50;;;;-1:-1:-1;;;14691:50:3;;;;;;;;;14773:8;;-1:-1:-1;;;;;14773:8:3;:17;14791:12;14805;:10;:12::i;:::-;14773:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14773:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14773:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14773:45:3;;;;;;;;;14752:129;;;;-1:-1:-1;;;14752:129:3;;;;;;;;;14913:77;14930:9;14941;14952:7;14961:14;14977:12;14913:16;:77::i;:::-;14892:141;;;;-1:-1:-1;;;14892:141:3;;;;;;;;;15044:15;15062:23;15072:12;:10;:12::i;:::-;15062:9;:23::i;:::-;15044:41;;15095:124;15113:7;15122:9;15133:12;15147:9;15158:7;15167:14;15183:8;15193:25;15095:17;:124::i;:::-;15229:31;15242:7;15251:8;15229:12;:31::i;:::-;15270:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;15270:43:3;;;;;;15290:7;-1:-1:-1;14245:1101:3;;;;;;;;;;;:::o;23726:973::-;23789:16;-1:-1:-1;;;;;23839:20:3;;23818:92;;;;-1:-1:-1;;;23818:92:3;;;;;;;;;-1:-1:-1;;;;;23942:26:3;;23921:18;23942:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;23921:57;-1:-1:-1;23992:15:3;23988:704;;24067:16;;;24081:1;24067:16;;;;;;;;;;;;24060:23;;;;;23988:704;24114:23;24154:10;24140:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;24140:25:3;;24114:51;;24179:19;24201:13;:11;:13::i;:::-;24179:35;-1:-1:-1;24228:19:3;24431:1;24416:238;24445:11;24434:7;:22;24416:238;;24491:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;24491:42:3;;;:32;;:42;24487:153;;;24579:7;24557:6;24564:11;24557:19;;;;;;;;;;;;;;;;;:29;24608:13;;;;;24487:153;24458:9;;24416:238;;;24675:6;24668:13;;;;;;;;;11916:1016;8624:6;;12254:7;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;12299:7;;12286:9;:20;;12278:29;;;;;;12341:1;12326:12;:16;;;12318:50;;;;-1:-1:-1;;;12318:50:3;;;;;;;;;12400:8;;-1:-1:-1;;;;;12400:8:3;:17;12418:12;12432;:10;:12::i;:::-;12400:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12400:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12400:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12400:45:3;;;;;;;;;12379:129;;;;-1:-1:-1;;;12379:129:3;;;;;;;;;12540:77;12557:9;12568;12579:7;12588:14;12604:12;12540:16;:77::i;:::-;12519:141;;;;-1:-1:-1;;;12519:141:3;;;;;;;;;12671:15;12689:23;12699:12;:10;:12::i;12689:23::-;12671:41;;12722:124;12740:7;12749:9;12760:12;12774:9;12785:7;12794:14;12810:8;12820:25;12722:17;:124::i;:::-;12856:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;12856:43:3;;;;;;12876:7;-1:-1:-1;11916:1016:3;;;;;;;;;;:::o;9022:78::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;8765:6;;-1:-1:-1;;;8765:6:3;;;;8757:15;;;;;;9079:6;:14;;-1:-1:-1;;;;9079:14:3;;;9022:78::o;31462:134::-;31549:39;31566:4;31572:2;31576:7;31549:39;;;;;;;;;;;;:16;:39::i;:::-;31462:134;;;:::o;37813:550::-;8624:6;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;37876:14;37893:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;37893:32:3;;37956:16;37910:7;37956;:16::i;:::-;37982:19;38004:28;;;:19;:28;;;;;;37935:37;;-1:-1:-1;38004:28:3;;-1:-1:-1;;;;;38047:20:3;;;;;;;38043:172;;;38108:8;;-1:-1:-1;;;;;38108:8:3;:17;38126:12;38140;:10;:12::i;:::-;38108:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38108:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38108:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;38108:45:3;;;;;;;;;38083:121;;;;-1:-1:-1;;;38083:121:3;;;;;;;;;38246:41;38265:12;:10;:12::i;:::-;38279:7;38246:18;:41::i;:::-;38225:105;;;;-1:-1:-1;;;38225:105:3;;;;;;;;;38341:14;38347:7;38341:5;:14::i;:::-;8641:1;;;37813:550;:::o;1326:21::-;;;-1:-1:-1;;;;;1326:21:3;;:::o;1437:26::-;;;-1:-1:-1;;;1437:26:3;;;;;:::o;9165:305::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;9383:34;;9341:4;9333:21;;9318:12;;9383:10;;9333:21;;9383:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;9364:53:3;;;9435:7;9427:35;;;;-1:-1:-1;;;9427:35:3;;;;;;;;;7433:1;;9165:305::o;25600:152::-;25655:7;25696:20;;;:11;:20;;;;;;-1:-1:-1;;;;;25696:20:3;;25600:152::o;25140:241::-;25200:7;-1:-1:-1;;;;;25241:24:3;;25220:96;;;;-1:-1:-1;;;25220:96:3;;;;;;;;;-1:-1:-1;;;;;25334:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;25327:46;25140:241;-1:-1:-1;;25140:241:3:o;1299:21::-;;;-1:-1:-1;;;;;1299:21:3;;:::o;22913:403::-;-1:-1:-1;;;;;23095:35:3;;;;;;:27;:35;;;;;;;:46;;23035:15;;;;23095:46;;23131:9;;;;23095:46;;;;;;;;;;;;;;;23063:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23063:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23151:17;23184:1;:8;23171:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23151:42:3;-1:-1:-1;23209:6:3;23204:86;23225:1;:8;23221:1;:12;23204:86;;;23262:1;23264;23262:4;;;;;;;;;;;;;;:17;;;23254:1;23256;23254:4;;;;;;;;;;;;;;;;;:25;23235:3;;23204:86;;;-1:-1:-1;23307:1:3;-1:-1:-1;;22913:403:3;;;;;;:::o;1769:32::-;;;-1:-1:-1;;;;;1769:32:3;;:::o;8325:105::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;8409:7;:13;8325:105::o;8866:78::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;8624:6;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;8924:6;:13;;-1:-1:-1;;;;8924:13:3;-1:-1:-1;;;8924:13:3;;;8866:78::o;26170:840::-;26235:16;26263:18;26284:21;26294:10;26284:9;:21::i;:::-;26263:42;-1:-1:-1;26319:15:3;26315:689;;26394:16;;;26408:1;26394:16;;;;;;;;;;;;26315:689;26441:23;26481:10;26467:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;26467:25:3;;26441:51;;26506:19;26528:13;:11;:13::i;:::-;26506:35;-1:-1:-1;26555:19:3;26751:1;26736:230;26765:11;26754:7;:22;26736:230;;26811:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;26811:34:3;;;:20;;:34;26807:145;;;26891:7;26869:6;26876:11;26869:19;;;;;;;;;;;;;;;;;:29;26920:13;;;;;26807:145;26778:9;;26736:230;;1999:87:8;2072:7;2065:14;;;;;;;;-1:-1:-1;;2065:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:13;;2065:14;;2072:7;;2065:14;;2072:7;2065:14;;;;;;;;;;;;;;;;;;;;;;;;28737:286:3;8624:6;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;28857:12;:10;:12::i;:::-;-1:-1:-1;;;;;28851:18:3;:2;-1:-1:-1;;;;;28851:18:3;;;28843:57;;;;-1:-1:-1;;;28843:57:3;;;;;;;;;28950:8;28911:18;:32;28930:12;:10;:12::i;:::-;-1:-1:-1;;;;;28911:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;28911:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;28911:47:3;;;;;;;;;;;28988:12;:10;:12::i;:::-;-1:-1:-1;;;;;28973:42:3;;29006:8;28973:42;;;;;;;;;;;;;;;28737:286;;:::o;22459:330::-;-1:-1:-1;;;;;22586:32:3;;;;;;:24;:32;;;;;;;;22557:61;;;;;;;;;;;;;;;;;22529:15;;;;22557:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22557:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22628:17;22661:1;:8;22648:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22628:42:3;-1:-1:-1;22686:6:3;22681:82;22702:1;:8;22698:1;:12;22681:82;;;22738:1;22740;22738:4;;;;;;;;;;;;;;:14;;;22731:1;22733;22731:4;;;;;;;;;;;;;;;;;:21;22712:3;;22681:82;;;-1:-1:-1;22780:1:3;22459:330;-1:-1:-1;;;22459:330:3:o;32318:862::-;8624:6;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;32479:41;32498:12;:10;:12::i;:::-;32512:7;32479:18;:41::i;:::-;32458:109;;;;-1:-1:-1;;;32458:109:3;;;;;;;;;32578:14;32595:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;32595:32:3;;32653:16;32612:7;32653;:16::i;:::-;32679:19;32701:28;;;:19;:28;;;;;;;;;32744:16;:25;;;;;;:51;;;32637:32;;-1:-1:-1;32701:28:3;;;-1:-1:-1;;;32744:51:3;;;;32740:220;;32845:35;32862:4;32868:2;32872:7;32845:16;:35::i;:::-;:44;32820:129;;;;-1:-1:-1;;;32820:129:3;;;;;;;;;32991:8;;;:81;;-1:-1:-1;;;32991:81:3;;-1:-1:-1;;;;;32991:8:3;;;;:33;;:81;;33025:12;;33039:4;;33045:2;;33049:7;;33058:6;;33066:5;;32991:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32991:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32991:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;32991:81:3;;;;;;;;;32970:149;;;;-1:-1:-1;;;32970:149:3;;;;;;;;;33130:42;33148:4;33154:2;33158:7;33167:4;33130:17;:42::i;:::-;8641:1;;;32318:862;;;;:::o;10734:1093::-;8624:6;;11112:7;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;11157:7;;11144:9;:20;;11136:29;;;;;;11199:1;11184:12;:16;;;11176:50;;;;-1:-1:-1;;;11176:50:3;;;;;;;;;11258:8;;-1:-1:-1;;;;;11258:8:3;:17;11276:12;11290;:10;:12::i;:::-;11258:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11258:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11258:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11258:45:3;;;;;;;;;11237:129;;;;-1:-1:-1;;;11237:129:3;;;;;;;;;11398:77;11415:9;11426;11437:7;11446:14;11462:12;11398:16;:77::i;:::-;11377:141;;;;-1:-1:-1;;;11377:141:3;;;;;;;;;11529:15;11547:19;11553:12;:10;:12::i;:::-;11547:5;:19::i;8088:144::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;8186:8;:39;;-1:-1:-1;;;;;;8186:39:3;-1:-1:-1;;;;;8186:39:3;;;;;;;;;;8088:144::o;18088:210::-;18146:13;18193:16;18201:7;18193;:16::i;:::-;18172:81;;;;-1:-1:-1;;;18172:81:3;;;;;;;;;18271:19;;;;:10;:19;;;;;;;;;18264:26;;;;;;-1:-1:-1;;18264:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18271:19;;18264:26;;18271:19;18264:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18088:210;;;:::o;7766:169::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;-1:-1:-1;;;;;7863:22:3;;;7859:70;;7901:6;:17;;-1:-1:-1;;;;;;7901:17:3;-1:-1:-1;;;;;7901:17:3;;;;;7859:70;7766:169;:::o;21089:950::-;21159:14;21183:13;21206:23;21239:26;21275:16;21301:14;21325:21;21356:15;21381:30;21421:19;21479:16;21487:7;21479;:16::i;:::-;21458:81;;;;-1:-1:-1;;;21458:81:3;;;;;;;;;21550:25;;:::i;:::-;21578;;;;:16;:25;;;;;;;;;21550:53;;;;;;;;;;-1:-1:-1;;;;;21550:53:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21550:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;21578:25;;21550:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21550:53:3;;;-1:-1:-1;;21550:53:3;;;;;;;;;;;;;;;;-1:-1:-1;;21550:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21550:53:3;;;-1:-1:-1;;21550:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21550:53:3;;;;;;;;;-1:-1:-1;;;21550:53:3;;;;;;;;-1:-1:-1;;;21550:53:3;;;;;;;;;;;;;;;-1:-1:-1;21636:28:3;;;:19;:28;;;;;21696:16;;;;-1:-1:-1;21636:28:3;;;21726:16;21636:28;21726:7;:16::i;:::-;21756:9;:19;;;21789:9;:22;;;21825:9;:19;;;21858:9;:17;;;21889:9;:24;;;21927:9;:18;;;21959:9;:35;;;22008:13;21675:356;;;;;;;;;;;;;;;;;;;;;;;;;;;;21089:950;;;;;;;;;;;:::o;7590:169::-;7343:6;;-1:-1:-1;;;;;7343:6:3;7327:12;:10;:12::i;:::-;-1:-1:-1;;;;;7327:22:3;;7326:52;;;-1:-1:-1;7371:6:3;;-1:-1:-1;;;;;7371:6:3;7355:12;:10;:12::i;:::-;-1:-1:-1;;;;;7355:22:3;;7326:52;7305:118;;;;-1:-1:-1;;;7305:118:3;;;;;;;;;-1:-1:-1;;;;;7687:22:3;;;7683:70;;7725:6;:17;;-1:-1:-1;;;;;7725:17:3;;-1:-1:-1;;;;;;7725:17:3;;;;;;7590:169;:::o;29362:185::-;-1:-1:-1;;;;;29499:30:3;;;29471:4;29499:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;29362:185::o;9586:1008::-;8624:6;;9920:7;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;9965:7;;9952:9;:20;;9944:29;;;;;;10007:1;9992:12;:16;;;9984:50;;;;-1:-1:-1;;;9984:50:3;;;;;;;;;10066:8;;-1:-1:-1;;;;;10066:8:3;:17;10084:12;10098;:10;:12::i;:::-;10066:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10066:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10066:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10066:45:3;;;;;;;;;10045:129;;;;-1:-1:-1;;;10045:129:3;;;;;;;;;10206:77;10223:9;10234;10245:7;10254:14;10270:12;10206:16;:77::i;:::-;10185:141;;;;-1:-1:-1;;;10185:141:3;;;;;;;;;10337:15;10355:19;10361:12;:10;:12::i;13093:1049::-;8624:6;;13458:7;;-1:-1:-1;;;8624:6:3;;;;8623:7;8615:16;;;;;;13503:7;;13490:9;:20;;13482:29;;;;;;13545:1;13530:12;:16;;;13522:50;;;;-1:-1:-1;;;13522:50:3;;;;;;;;;13604:8;;-1:-1:-1;;;;;13604:8:3;:17;13622:12;13636;:10;:12::i;:::-;13604:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13604:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13604:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13604:45:3;;;;;;;;;13583:129;;;;-1:-1:-1;;;13583:129:3;;;;;;;;;13744:77;13761:9;13772;13783:7;13792:14;13808:12;13744:16;:77::i;:::-;13723:141;;;;-1:-1:-1;;;13723:141:3;;;;;;;;;13875:15;13893:29;13903:12;:10;:12::i;:::-;13917:4;13893:9;:29::i;:::-;13875:47;;13932:124;13950:7;13959:9;13970:12;13984:9;13995:7;14004:14;14020:8;14030:25;13932:17;:124::i;34387:165::-;34444:4;34482:20;;;:11;:20;;;;;;-1:-1:-1;;;;;34482:20:3;34520:24;;;34387:165::o;6762:90::-;6834:10;6762:90;:::o;1061:112:1:-;1152:14;;1061:112::o;34913:384:3:-;35022:4;35064:16;35072:7;35064;:16::i;:::-;35043:81;;;;-1:-1:-1;;;35043:81:3;;;;;;;;;35135:18;35156:16;35164:7;35156;:16::i;:::-;35135:37;;35202:10;-1:-1:-1;;;;;35191:21:3;:7;-1:-1:-1;;;;;35191:21:3;;:56;;;;35240:7;-1:-1:-1;;;;;35216:31:3;:20;35228:7;35216:11;:20::i;:::-;-1:-1:-1;;;;;35216:31:3;;35191:56;:97;;;;35251:37;35268:10;35280:7;35251:16;:37::i;:::-;35183:106;34913:384;-1:-1:-1;;;;34913:384:3:o;39758:350::-;39905:4;39943:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;39943:32:3;;;;39990:14;;;;;:30;;;40014:6;-1:-1:-1;;;;;40008:12:3;:2;-1:-1:-1;;;;;40008:12:3;;39990:30;39986:115;;;40043:5;40036:12;;;;;39986:115;40086:4;40079:11;;;;;35678:486;35805:4;-1:-1:-1;;;;;35785:24:3;:16;35793:7;35785;:16::i;:::-;-1:-1:-1;;;;;35785:24:3;;35764:92;;;;-1:-1:-1;;;35764:92:3;;;;;;;;;-1:-1:-1;;;;;35888:16:3;;35867:87;;;;-1:-1:-1;;;35867:87:3;;;;;;;;;35965:23;35980:7;35965:14;:23::i;:::-;-1:-1:-1;;;;;35999:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;36044:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;36088:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;36088:25:3;-1:-1:-1;;;;;36088:25:3;;;;;;;;;36129:27;;36088:20;;36129:27;;;;;;;35678:486;;;:::o;18356:609::-;18592:8;;;:63;;-1:-1:-1;;;18592:63:3;;18554:4;;-1:-1:-1;;;;;18592:8:3;;;;:38;;:63;;18631:12;;18645:9;;18592:63;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18592:63:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18592:63:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18592:63:3;;;;;;;;;18571:145;;;;-1:-1:-1;;;18571:145:3;;;;;;;;;18760:14;18748:26;;:9;:26;;;18727:106;;;;-1:-1:-1;;;18727:106:3;;;;;;;;;18875:9;18865:19;;:7;:19;;;18844:91;;;;-1:-1:-1;;;18844:91:3;;;;;;;;;-1:-1:-1;18953:4:3;18356:609;;;;;;;:::o;15839:136::-;15888:7;15908:15;15926:17;15936:2;15926:17;;;;;;;;;;;;:9;:17::i;19874:1208::-;20188:16;20196:7;20188;:16::i;:::-;20167:81;;;;-1:-1:-1;;;20167:81:3;;;;;;;;;20259:25;;:::i;:::-;20287:398;;;;;;;;20326:12;:10;:12::i;:::-;-1:-1:-1;;;;;20287:398:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20696:25:3;;;:16;:25;;;;;;:37;;;;-1:-1:-1;;;;;;20696:37:3;;;;;;;;;;;;;;;;;-1:-1:-1;20696:37:3;;:25;;:37;;-1:-1:-1;20696:37:3;;;;;;;;:::i;:::-;-1:-1:-1;20696:37:3;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20696:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20696:37:3;;;;;;;;-1:-1:-1;;20696:37:3;;;;;;;;;;;;;-1:-1:-1;;20696:37:3;-1:-1:-1;;;20696:37:3;;;;;;;;;;;;-1:-1:-1;;20696:37:3;-1:-1:-1;;;20696:37:3;;;;;;;;;;;;-1:-1:-1;;;;20696:37:3;-1:-1:-1;;;20696:37:3;;;;;;;;;;20749;20776:9;20749:26;:37::i;:::-;20744:142;;20802:24;:38;20827:12;:10;:12::i;:::-;-1:-1:-1;;;;;20802:38:3;;;;;;;;;;;;;;;-1:-1:-1;20802:38:3;;;20847:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;20802:73:3;;;;;;;;;;;23:18:-1;;20802:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;20744:142;20901:54;20931:9;20942:12;20901:29;:54::i;:::-;20896:179;;20971:27;:41;20999:12;:10;:12::i;:::-;-1:-1:-1;;;;;20971:41:3;-1:-1:-1;;;;;20971:41:3;;;;;;;;;;;;21013:9;20971:52;;;;;;;;;;;;;;;;;;;;;;;;21030:32;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;20971:93:3;;;;;;;;;;;23:18:-1;;20971:52:3;:93;;;;;;;;;;;;;:::i;:::-;;;;;20896:179;19874:1208;;;;;;;;;:::o;17693:203::-;17792:16;17800:7;17792;:16::i;:::-;17771:81;;;;-1:-1:-1;;;17771:81:3;;;;;;;;;17863:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;39395:92::-;39447:32;39453:16;39461:7;39453;:16::i;:::-;39471:7;39447:5;:32::i;33884:308::-;34005:32;34019:4;34025:2;34029:7;34005:13;:32::i;:::-;34069:47;34092:4;34098:2;34102:7;34111:4;34069:22;:47::i;:::-;34048:136;;;;-1:-1:-1;;;34048:136:3;;;;;;;;17026:398;17071:7;-1:-1:-1;;;;;17099:16:3;;17091:49;;;;-1:-1:-1;;;17091:49:3;;;;;;;;;17151:21;:9;:19;:21::i;:::-;17182:15;17200:19;:9;:17;:19::i;:::-;17230:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;17230:25:3;-1:-1:-1;;;;;17230:25:3;;;;;;;;17265:21;;:17;:21;;;;;17230:20;;-1:-1:-1;17265:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;17308:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;17358:33;;17383:7;;-1:-1:-1;;;;;17358:33:3;;;17375:1;;17358:33;;17375:1;;17358:33;17409:7;17026:398;-1:-1:-1;;17026:398:3:o;16539:301::-;16607:7;16627:15;16645:9;16651:2;16645:5;:9::i;:::-;16627:27;;16686:53;16717:1;16721:2;16725:7;16734:4;16686:22;:53::i;:::-;16665:142;;;;-1:-1:-1;;;16665:142:3;;;;;;;;37271:173;37371:1;37335:24;;;:15;:24;;;;;;-1:-1:-1;;;;;37335:24:3;:38;37331:106;;37424:1;37389:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;37389:37:3;;;37271:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;18972:413:3:-;19142:10;19071:4;19117:36;;;:24;:36;;;;;;;;19088:65;;;;;;;;;;;;;;;;;:26;;19071:4;;19088:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19088:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19088:65:3;;-1:-1:-1;19163:15:3;;-1:-1:-1;19163:15:3;;-1:-1:-1;;19196:155:3;19217:1;:8;19213:1;:12;19196:155;;;19250:39;19263:9;19274:1;19276;19274:4;;;;;;;;;;;;;;:14;;;19250:12;:39::i;:::-;19246:95;;;19322:4;19309:17;;19246:95;19227:3;;19196:155;;19392:475;19607:10;19530:4;19579:39;;;:27;:39;;;;;;:50;;19547:29;;19579:39;:50;;19619:9;;19579:50;;;;;;;;;;;;;;;19547:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19547:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19547:82:3;;-1:-1:-1;19639:15:3;;-1:-1:-1;19639:15:3;;-1:-1:-1;;19672:161:3;19693:1;:8;19689:1;:12;19672:161;;;19726:45;19739:12;19753:1;19755;19753:4;;;;;;;19726:45;19722:101;;;19804:4;19791:17;;19722:101;19703:3;;19672:161;;;-1:-1:-1;19850:10:3;19392:475;-1:-1:-1;;;;19392:475:3:o;38637:577::-;38750:10;-1:-1:-1;;;;;38730:30:3;:16;38738:7;38730;:16::i;:::-;-1:-1:-1;;;;;38730:30:3;;38709:94;;;;-1:-1:-1;;;38709:94:3;;;;;;;;;38814:23;38829:7;38814:14;:23::i;:::-;-1:-1:-1;;;;;38848:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;38930:1;38899:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;38899:33:3;;;38990:10;:19;;;;;38984:33;;-1:-1:-1;;38899:33:3;38984;;;38899;38984;;;;;;:38;38980:95;;39045:19;;;;:10;:19;;;;;39038:26;;;:::i;:::-;39124:25;;;;:16;:25;;;;;39117:32;;-1:-1:-1;;;;;;39117:32:3;;;39124:25;39117:32;;;;39124:25;39117:32;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;39117:32:3;;;;-1:-1:-1;;39117:32:3;;;39165:41;;39198:7;;39117:32;;-1:-1:-1;;;;;39165:41:3;;;;;39117:32;;39165:41;38637:577;;:::o;36752:357::-;36880:4;36906:15;:2;-1:-1:-1;;;;;36906:13:3;;:15::i;:::-;36901:58;;-1:-1:-1;36944:4:3;36937:11;;36901:58;36969:13;37001:2;-1:-1:-1;;;;;36985:36:3;;37022:12;:10;:12::i;:::-;37036:4;37042:7;37051:4;36985:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36985:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36985:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36985:71:3;;;;;;;;;-1:-1:-1;;;;;;37074:26:3;-1:-1:-1;;;37074:26:3;;-1:-1:-1;;36752:357:3;;;;;;:::o;1276:134:10:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;39522:230:3:-;39647:4;39739:1;39721:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;39721:21:3;;;39711:32;;;;;;39703:1;39685:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;39685:21:3;;;39675:32;;;;;;:68;39667:78;;39522:230;;;;:::o;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;850:1239:8:-;;;;;;;;;-1:-1:-1;850:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1146:336;;;1261:3;1254:4;1246:6;1242:17;1238:27;1228:2;;1279:1;1276;1269:12;1228:2;-1:-1;1299:20;;1339:18;1328:30;;1325:2;;;1371:1;1368;1361:12;1325:2;1405:4;1397:6;1393:17;1381:29;;1455:3;1448;1440:6;1436:16;1426:8;1422:31;1419:40;1416:2;;;1472:1;1469;1462:12;1416:2;1221:261;;;;;;1941:128;2007:20;;2032:32;2007:20;2032:32;;2076:130;2143:20;;2168:33;2143:20;2168:33;;2213:128;2279:20;;2304:32;2279:20;2304:32;;2348:128;2414:20;;2439:32;2414:20;2439:32;;2483:241;;2587:2;2575:9;2566:7;2562:23;2558:32;2555:2;;;2603:1;2600;2593:12;2555:2;2638:1;2655:53;2700:7;2680:9;2655:53;;2731:366;;;2852:2;2840:9;2831:7;2827:23;2823:32;2820:2;;;2868:1;2865;2858:12;2820:2;2903:1;2920:53;2965:7;2945:9;2920:53;;;2910:63;;2882:97;3010:2;3028:53;3073:7;3064:6;3053:9;3049:22;3028:53;;;3018:63;;2989:98;2814:283;;;;;;3104:491;;;;3242:2;3230:9;3221:7;3217:23;3213:32;3210:2;;;3258:1;3255;3248:12;3210:2;3293:1;3310:53;3355:7;3335:9;3310:53;;;3300:63;;3272:97;3400:2;3418:53;3463:7;3454:6;3443:9;3439:22;3418:53;;;3408:63;;3379:98;3508:2;3526:53;3571:7;3562:6;3551:9;3547:22;3526:53;;;3516:63;;3487:98;3204:391;;;;;;3602:721;;;;;3766:3;3754:9;3745:7;3741:23;3737:33;3734:2;;;3783:1;3780;3773:12;3734:2;3818:1;3835:53;3880:7;3860:9;3835:53;;;3825:63;;3797:97;3925:2;3943:53;3988:7;3979:6;3968:9;3964:22;3943:53;;;3933:63;;3904:98;4033:2;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;;;4041:63;;4012:98;4169:2;4158:9;4154:18;4141:32;4193:18;4185:6;4182:30;4179:2;;;4225:1;4222;4215:12;4179:2;4245:62;4299:7;4290:6;4279:9;4275:22;4245:62;;;4235:72;;4120:193;3728:595;;;;;;;;4330:360;;;4448:2;4436:9;4427:7;4423:23;4419:32;4416:2;;;4464:1;4461;4454:12;4416:2;4499:1;4516:53;4561:7;4541:9;4516:53;;;4506:63;;4478:97;4606:2;4624:50;4666:7;4657:6;4646:9;4642:22;4624:50;;4697:492;;;;4838:2;4826:9;4817:7;4813:23;4809:32;4806:2;;;4854:1;4851;4844:12;4806:2;4889:1;4906:53;4951:7;4931:9;4906:53;;;4896:63;;4868:97;5024:2;5013:9;5009:18;4996:32;5048:18;5040:6;5037:30;5034:2;;;5080:1;5077;5070:12;5034:2;5108:65;5165:7;5156:6;5145:9;5141:22;5108:65;;;5098:75;;;;4975:204;4800:389;;;;;;5196:366;;;5317:2;5305:9;5296:7;5292:23;5288:32;5285:2;;;5333:1;5330;5323:12;5285:2;5368:1;5385:53;5430:7;5410:9;5385:53;;;5375:63;;5347:97;5475:2;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;;5569:257;;5681:2;5669:9;5660:7;5656:23;5652:32;5649:2;;;5697:1;5694;5687:12;5649:2;5732:1;5749:61;5802:7;5782:9;5749:61;;5833:239;;5936:2;5924:9;5915:7;5911:23;5907:32;5904:2;;;5952:1;5949;5942:12;5904:2;5987:1;6004:52;6048:7;6028:9;6004:52;;6079:261;;6193:2;6181:9;6172:7;6168:23;6164:32;6161:2;;;6209:1;6206;6199:12;6161:2;6244:1;6261:63;6316:7;6296:9;6261:63;;6347:1317;;;;;;;;;6582:3;6570:9;6561:7;6557:23;6553:33;6550:2;;;6599:1;6596;6589:12;6550:2;6634:31;;6685:18;6674:30;;6671:2;;;6717:1;6714;6707:12;6671:2;6737:63;6792:7;6783:6;6772:9;6768:22;6737:63;;;6727:73;;6613:193;6865:2;6854:9;6850:18;6837:32;6889:18;6881:6;6878:30;6875:2;;;6921:1;6918;6911:12;6875:2;6941:63;6996:7;6987:6;6976:9;6972:22;6941:63;;;6931:73;;6816:194;7041:2;7059:52;7103:7;7094:6;7083:9;7079:22;7059:52;;;7049:62;;7020:97;7148:2;7166:52;7210:7;7201:6;7190:9;7186:22;7166:52;;;7156:62;;7127:97;7255:3;7274:52;7318:7;7309:6;7298:9;7294:22;7274:52;;;7264:62;;7234:98;7363:3;7382:52;7426:7;7417:6;7406:9;7402:22;7382:52;;;7372:62;;7342:98;7471:3;7490:50;7532:7;7523:6;7512:9;7508:22;7490:50;;;7480:60;;7450:96;7577:3;7596:52;7640:7;7631:6;7620:9;7616:22;7596:52;;;7586:62;;7556:98;6544:1120;;;;;;;;;;;;7671:1547;;;;;;;;;;7932:3;7920:9;7911:7;7907:23;7903:33;7900:2;;;7949:1;7946;7939:12;7900:2;7984:31;;8035:18;8024:30;;8021:2;;;8067:1;8064;8057:12;8021:2;8087:63;8142:7;8133:6;8122:9;8118:22;8087:63;;;8077:73;;7963:193;8215:2;8204:9;8200:18;8187:32;8239:18;8231:6;8228:30;8225:2;;;8271:1;8268;8261:12;8225:2;8291:63;8346:7;8337:6;8326:9;8322:22;8291:63;;;8281:73;;8166:194;8391:2;8409:52;8453:7;8444:6;8433:9;8429:22;8409:52;;;8399:62;;8370:97;8498:2;8516:52;8560:7;8551:6;8540:9;8536:22;8516:52;;;8506:62;;8477:97;8605:3;8624:52;8668:7;8659:6;8648:9;8644:22;8624:52;;;8614:62;;8584:98;8713:3;8732:52;8776:7;8767:6;8756:9;8752:22;8732:52;;;8722:62;;8692:98;8821:3;8840:50;8882:7;8873:6;8862:9;8858:22;8840:50;;;8830:60;;8800:96;8927:3;8946:52;8990:7;8981:6;8970:9;8966:22;8946:52;;;8936:62;;8906:98;9063:3;9052:9;9048:19;9035:33;9088:18;9080:6;9077:30;9074:2;;;9120:1;9117;9110:12;9074:2;9140:62;9194:7;9185:6;9174:9;9170:22;9140:62;;;9130:72;;9014:194;7894:1324;;;;;;;;;;;;10781:241;;10885:2;10873:9;10864:7;10860:23;10856:32;10853:2;;;10901:1;10898;10891:12;10853:2;10936:1;10953:53;10998:7;10978:9;10953:53;;11030:181;;11143:62;11201:3;11193:6;11143:62;;11220:173;;11307:46;11349:3;11341:6;11307:46;;;-1:-1;;11382:4;11373:14;;11300:93;11401:113;11484:24;11502:5;11484:24;;;11479:3;11472:37;11466:48;;;11550:896;;11707:60;11761:5;11707:60;;;11780:92;11865:6;11860:3;11780:92;;;11773:99;;11895:3;11937:4;11929:6;11925:17;11920:3;11916:27;11964:62;12020:5;11964:62;;;12046:7;12074:1;12059:348;12084:6;12081:1;12078:13;12059:348;;;12146:9;12140:4;12136:20;12131:3;12124:33;12191:6;12185:13;12213:76;12284:4;12269:13;12213:76;;;12205:84;;12306:66;12365:6;12306:66;;;12395:4;12386:14;;;;;12296:76;-1:-1;;12106:1;12099:9;12059:348;;;-1:-1;12420:4;;11686:760;-1:-1;;;;;;;11686:760;12485:690;;12630:54;12678:5;12630:54;;;12697:86;12776:6;12771:3;12697:86;;;12690:93;;12804:56;12854:5;12804:56;;;12880:7;12908:1;12893:260;12918:6;12915:1;12912:13;12893:260;;;12985:6;12979:13;13006:63;13065:3;13050:13;13006:63;;;12999:70;;13086:60;13139:6;13086:60;;;13076:70;-1:-1;;12940:1;12933:9;12893:260;;;-1:-1;13166:3;;12609:566;-1:-1;;;;;12609:566;13183:104;13260:21;13275:5;13260:21;;13294:343;;13404:38;13436:5;13404:38;;;13454:70;13517:6;13512:3;13454:70;;;13447:77;;13529:52;13574:6;13569:3;13562:4;13555:5;13551:16;13529:52;;;13602:29;13624:6;13602:29;;;13593:39;;;;13384:253;-1:-1;;;13384:253;13644:174;13751:61;13806:5;13751:61;;13850:313;;13984:89;14066:6;14061:3;13984:89;;;13977:96;;14085:43;14121:6;14116:3;14109:5;14085:43;;;-1:-1;;14141:16;;13970:193;14525:360;;14655:39;14688:5;14655:39;;;14706:89;14788:6;14783:3;14706:89;;;14699:96;;14800:52;14845:6;14840:3;14833:4;14826:5;14822:16;14800:52;;;14864:16;;;;;14635:250;-1:-1;;14635:250;15219:364;;15379:67;15443:2;15438:3;15379:67;;;15479:66;15459:87;;15574:2;15565:12;;15365:218;-1:-1;;15365:218;15592:364;;15752:67;15816:2;15811:3;15752:67;;;15852:66;15832:87;;15947:2;15938:12;;15738:218;-1:-1;;15738:218;15965:465;;16125:67;16189:2;16184:3;16125:67;;;16225:66;16205:87;;-1:-1;;;16321:2;16312:12;;16305:88;16421:2;16412:12;;16111:319;-1:-1;;16111:319;16439:364;;16599:67;16663:2;16658:3;16599:67;;;16699:66;16679:87;;16794:2;16785:12;;16585:218;-1:-1;;16585:218;16812:364;;16972:67;17036:2;17031:3;16972:67;;;17072:66;17052:87;;17167:2;17158:12;;16958:218;-1:-1;;16958:218;17185:364;;17345:67;17409:2;17404:3;17345:67;;;17445:66;17425:87;;17540:2;17531:12;;17331:218;-1:-1;;17331:218;17558:364;;17718:67;17782:2;17777:3;17718:67;;;17818:66;17798:87;;17913:2;17904:12;;17704:218;-1:-1;;17704:218;17931:364;;18091:67;18155:2;18150:3;18091:67;;;18191:66;18171:87;;18286:2;18277:12;;18077:218;-1:-1;;18077:218;18304:465;;18464:67;18528:2;18523:3;18464:67;;;18564:66;18544:87;;-1:-1;;;18660:2;18651:12;;18644:88;18760:2;18751:12;;18450:319;-1:-1;;18450:319;18778:364;;18938:67;19002:2;18997:3;18938:67;;;19038:66;19018:87;;19133:2;19124:12;;18924:218;-1:-1;;18924:218;19151:364;;19311:67;19375:2;19370:3;19311:67;;;19411:66;19391:87;;19506:2;19497:12;;19297:218;-1:-1;;19297:218;19524:364;;19684:67;19748:2;19743:3;19684:67;;;19784:66;19764:87;;19879:2;19870:12;;19670:218;-1:-1;;19670:218;19897:465;;20057:67;20121:2;20116:3;20057:67;;;20157:66;20137:87;;-1:-1;;;20253:2;20244:12;;20237:88;20353:2;20344:12;;20043:319;-1:-1;;20043:319;20371:364;;20531:67;20595:2;20590:3;20531:67;;;20631:66;20611:87;;20726:2;20717:12;;20517:218;-1:-1;;20517:218;20744:296;;20921:83;21002:1;20997:3;20921:83;;21049:364;;21209:67;21273:2;21268:3;21209:67;;;21309:66;21289:87;;21404:2;21395:12;;21195:218;-1:-1;;21195:218;21422:364;;21582:67;21646:2;21641:3;21582:67;;;21682:66;21662:87;;21777:2;21768:12;;21568:218;-1:-1;;21568:218;21795:465;;21955:67;22019:2;22014:3;21955:67;;;22055:66;22035:87;;-1:-1;;;22151:2;22142:12;;22135:88;22251:2;22242:12;;21941:319;-1:-1;;21941:319;22269:364;;22429:67;22493:2;22488:3;22429:67;;;22529:66;22509:87;;22624:2;22615:12;;22415:218;-1:-1;;22415:218;22642:364;;22802:67;22866:2;22861:3;22802:67;;;22902:66;22882:87;;22997:2;22988:12;;22788:218;-1:-1;;22788:218;23014:110;23095:23;23112:5;23095:23;;23131:103;23204:24;23222:5;23204:24;;23361:110;23442:23;23459:5;23442:23;;23478:110;23559:23;23576:5;23559:23;;23595:286;;23751:105;23852:3;23843:6;23835;23751:105;;23888:266;;24034:95;24125:3;24116:6;24034:95;;24161:370;;24359:147;24502:3;24359:147;;24538:213;24656:2;24641:18;;24670:71;24645:9;24714:6;24670:71;;24758:1363;25152:3;25137:19;;25167:71;25141:9;25211:6;25167:71;;;25249:72;25317:2;25306:9;25302:18;25293:6;25249:72;;;25369:9;25363:4;25359:20;25354:2;25343:9;25339:18;25332:48;25394:78;25467:4;25458:6;25394:78;;;25386:86;;25520:9;25514:4;25510:20;25505:2;25494:9;25490:18;25483:48;25545:78;25618:4;25609:6;25545:78;;;25537:86;;25634:71;25700:3;25689:9;25685:19;25676:6;25634:71;;;25716;25782:3;25771:9;25767:19;25758:6;25716:71;;;25798;25864:3;25853:9;25849:19;25840:6;25798:71;;;25880;25946:3;25935:9;25931:19;25922:6;25880:71;;;25962:67;26024:3;26013:9;26009:19;26000:6;25962:67;;;26040:71;26106:3;26095:9;26091:19;26082:6;26040:71;;;25123:998;;;;;;;;;;;;;;26128:631;26348:3;26333:19;;26363:71;26337:9;26407:6;26363:71;;;26445:72;26513:2;26502:9;26498:18;26489:6;26445:72;;;26528;26596:2;26585:9;26581:18;26572:6;26528:72;;;26648:9;26642:4;26638:20;26633:2;26622:9;26618:18;26611:48;26673:76;26744:4;26735:6;26673:76;;;26665:84;26319:440;-1:-1;;;;;;26319:440;26766:385;26946:2;26960:47;;;26931:18;;27021:120;26931:18;27127:6;27021:120;;27158:361;27326:2;27340:47;;;27311:18;;27401:108;27311:18;27495:6;27401:108;;27526:201;27638:2;27623:18;;27652:65;27627:9;27690:6;27652:65;;27734:261;27876:2;27861:18;;27890:95;27865:9;27958:6;27890:95;;28002:301;28140:2;28154:47;;;28125:18;;28215:78;28125:18;28279:6;28215:78;;28310:407;28501:2;28515:47;;;28486:18;;28576:131;28486:18;28576:131;;28724:407;28915:2;28929:47;;;28900:18;;28990:131;28900:18;28990:131;;29138:407;29329:2;29343:47;;;29314:18;;29404:131;29314:18;29404:131;;29552:407;29743:2;29757:47;;;29728:18;;29818:131;29728:18;29818:131;;29966:407;30157:2;30171:47;;;30142:18;;30232:131;30142:18;30232:131;;30380:407;30571:2;30585:47;;;30556:18;;30646:131;30556:18;30646:131;;30794:407;30985:2;30999:47;;;30970:18;;31060:131;30970:18;31060:131;;31208:407;31399:2;31413:47;;;31384:18;;31474:131;31384:18;31474:131;;31622:407;31813:2;31827:47;;;31798:18;;31888:131;31798:18;31888:131;;32036:407;32227:2;32241:47;;;32212:18;;32302:131;32212:18;32302:131;;32450:407;32641:2;32655:47;;;32626:18;;32716:131;32626:18;32716:131;;32864:407;33055:2;33069:47;;;33040:18;;33130:131;33040:18;33130:131;;33278:407;33469:2;33483:47;;;33454:18;;33544:131;33454:18;33544:131;;33692:407;33883:2;33897:47;;;33868:18;;33958:131;33868:18;33958:131;;34106:407;34297:2;34311:47;;;34282:18;;34372:131;34282:18;34372:131;;34520:407;34711:2;34725:47;;;34696:18;;34786:131;34696:18;34786:131;;34934:407;35125:2;35139:47;;;35110:18;;35200:131;35110:18;35200:131;;35348:407;35539:2;35553:47;;;35524:18;;35614:131;35524:18;35614:131;;35762:407;35953:2;35967:47;;;35938:18;;36028:131;35938:18;36028:131;;36176:213;36294:2;36279:18;;36308:71;36283:9;36352:6;36308:71;;36396:209;36512:2;36497:18;;36526:69;36501:9;36568:6;36526:69;;36612:320;36756:2;36741:18;;36770:69;36745:9;36812:6;36770:69;;;36850:72;36918:2;36907:9;36903:18;36894:6;36850:72;;36939:767;37195:3;37180:19;;37210:69;37184:9;37252:6;37210:69;;;37290:72;37358:2;37347:9;37343:18;37334:6;37290:72;;;37373;37441:2;37430:9;37426:18;37417:6;37373:72;;;37456;37524:2;37513:9;37509:18;37500:6;37456:72;;;37539:73;37607:3;37596:9;37592:19;37583:6;37539:73;;;37623;37691:3;37680:9;37676:19;37667:6;37623:73;;;37166:540;;;;;;;;;;37713:408;37877:2;37862:18;;37891:69;37866:9;37933:6;37891:69;;;38008:9;38002:4;37998:20;37993:2;37982:9;37978:18;37971:48;38033:78;38106:4;38097:6;38033:78;;38128:256;38190:2;38184:9;38216:17;;;38291:18;38276:34;;38312:22;;;38273:62;38270:2;;;38348:1;38345;38338:12;38270:2;38364;38357:22;38168:216;;-1:-1;38168:216;38391:321;;38534:18;38526:6;38523:30;38520:2;;;38566:1;38563;38556:12;38520:2;-1:-1;38697:4;38633;38610:17;;;;-1:-1;;38606:33;38687:15;;38457:255;39048:157;39178:4;39169:14;;39126:79;39370:143;39479:12;;39450:63;40283:184;40407:19;;;40456:4;40447:14;;40400:67;41474:91;;41536:24;41554:5;41536:24;;41572:85;41638:13;41631:21;;41614:43;41664:144;-1:-1;;;;;;41725:78;;41708:100;41815:84;41887:6;41876:18;;41859:40;41906:121;-1:-1;;;;;41968:54;;41951:76;42113:88;42185:10;42174:22;;42157:44;42208:92;42280:14;42269:26;;42252:48;42307:169;;42410:61;42465:5;42410:61;;42623:145;42704:6;42699:3;42694;42681:30;-1:-1;42760:1;42742:16;;42735:27;42674:94;42777:268;42842:1;42849:101;42863:6;42860:1;42857:13;42849:101;;;42930:11;;;42924:18;42911:11;;;42904:39;42885:2;42878:10;42849:101;;;42965:6;42962:1;42959:13;42956:2;;;-1:-1;;43030:1;43012:16;;43005:27;42826:219;43053:97;43141:2;43121:14;-1:-1;;43117:28;;43101:49;43158:117;43227:24;43245:5;43227:24;;;43220:5;43217:35;43207:2;;43266:1;43263;43256:12;43282:111;43348:21;43363:5;43348:21;;43400:115;43468:23;43485:5;43468:23;;43522:115;43590:23;43607:5;43590:23;;43644:117;43713:24;43731:5;43713:24;;43768:115;43836:23;43853:5;43836:23;;43890:115;43958:23;43975:5;43958:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2602
      ]
    },
    "id": 2603,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2546,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2547,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2548,
        "nodeType": "ImportDirective",
        "scope": 2603,
        "sourceUnit": 2393,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2549,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2392,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2392",
                "typeString": "contract ERC721"
              }
            },
            "id": 2550,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2392,
          2402,
          2505
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2602,
        "linearizedBaseContracts": [
          2602,
          2392,
          2505,
          142,
          2402
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2552,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2602,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2551,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2554,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2602,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2553,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2557,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2602,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2555,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2556,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2584,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2566,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2552,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2567,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2559,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2569,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2570,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2571,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2573,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2575,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2574,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2577,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2581,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2563,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2578,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2896,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2602",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 398,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2585,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2559,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2558,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2561,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2563,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2602,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2592,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2590,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2552,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2589,
                  "id": 2591,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2588,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2593,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2602,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2600,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2598,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2554,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2597,
                  "id": 2599,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2596,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2601,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2602,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2603,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2602
      ]
    },
    "id": 2603,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2546,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2547,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2548,
        "nodeType": "ImportDirective",
        "scope": 2603,
        "sourceUnit": 2393,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2549,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2392,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2392",
                "typeString": "contract ERC721"
              }
            },
            "id": 2550,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2392,
          2402,
          2505
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2602,
        "linearizedBaseContracts": [
          2602,
          2392,
          2505,
          142,
          2402
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2552,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2602,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2551,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2554,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2602,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2553,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2557,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2602,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2555,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2556,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2584,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2566,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2552,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2567,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2559,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2569,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2570,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2571,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2573,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2575,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2574,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2577,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2581,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2563,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2578,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2896,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2602",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 398,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2585,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2559,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2558,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2561,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2563,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2602,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2592,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2590,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2552,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2589,
                  "id": 2591,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2588,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2593,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2602,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2600,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2598,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2554,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2597,
                  "id": 2599,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2596,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2601,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2602,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2603,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1580679633025": {
      "events": {},
      "links": {},
      "address": "0xb8af63737132D7a438671ecA639aFe4019d73dDd",
      "transactionHash": "0x682e027fb4ae30cfb1fb03ba1264163ab080d7c8faec410eed8e8a7470c8f6b6"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2020-02-02T21:41:45.062Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,string,uint48,uint48,uint48,uint16,bool,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,string,uint48,uint48,uint48,uint16,bool,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,string,uint48,uint48,uint48,uint16,bool,uint32,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenMinterPropertyNames(address,string)": {
        "details": "Look up all Property Names a Minter has created Time Slots for      with a particular Content ID"
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}