{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenURIBaseURL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "updateTokenURIBaseURL",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIBaseURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"updateTokenURIBaseURL\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,uint48,uint48,bool,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,uint48,uint48,bool,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,uint48,uint48,bool,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"updateTokenURIBaseURL(string)\":{\"details\":\"Update the base url for all tokenURI's\"},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/mspt/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/mspt/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/mspt/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/mspt/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/mspt/contracts/ERC721.sol\":{\"keccak256\":\"0xee2e2866f8422063a9cb213c88e36e2e53609288bebd32bd3d246de75f30b4a6\",\"urls\":[\"bzz-raw://40568a7736534018f92b6896a440b1fbca1804628a9441cb9050fcd40c79b938\",\"dweb:/ipfs/QmccS1q82KP4iJ3Y4T6srJtnx3DTwQKSt4op8RoCmJQN9R\"]},\"/Users/lauren/github/mspt/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/mspt/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/mspt/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/mspt/contracts/Microsponsors.sol\":{\"keccak256\":\"0x45fb6eddb422590ad9eec286d07eae2bd45db219aa127066eb23c7e3da4d0029\",\"urls\":[\"bzz-raw://840173239762fa8808437c611cdb3858b2d115a1a97153d330f6ed5ab4ff6412\",\"dweb:/ipfs/QmZ53b1m2kAA6PKotGU4htzNVFzRKe6MyWVfpKBpaYPMij\"]},\"/Users/lauren/github/mspt/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x6002805460ff60a01b19169055655af3107a400060035560a06040819052600060808190526200003291600c9162000306565b503480156200004057600080fd5b5060405162003e7338038062003e73833981016040819052620000639162000417565b620000977f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03620001a716565b620000cb7f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03620001a716565b620000de6001600160e01b036200024c16565b600180546001600160a01b0319166001600160a01b0392909216919091179055620001086200024c565b600280546001600160a01b0319166001600160a01b039290921691909117905582516200013d90600f90602086019062000306565b5081516200015390601090602085019062000306565b50620001887f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03620001a716565b6200019e816200025160201b620018711760201c565b505050620005eb565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200020f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002069062000510565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002706001600160e01b036200024c16565b6001600160a01b03161480620002ab57506002546001600160a01b0316620002a06001600160e01b036200024c16565b6001600160a01b0316145b620002e4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002069062000522565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034957805160ff191683800117855562000379565b8280016001018555821562000379579182015b82811115620003795782518255916020019190600101906200035c565b50620003879291506200038b565b5090565b6200024e91905b8082111562000387576000815560010162000392565b8051620003b581620005d1565b92915050565b600082601f830112620003cd57600080fd5b8151620003e4620003de826200055b565b62000534565b915080825260208301602083018583830111156200040157600080fd5b6200040e8382846200059e565b50505092915050565b6000806000606084860312156200042d57600080fd5b83516001600160401b038111156200044457600080fd5b6200045286828701620003bb565b93505060208401516001600160401b038111156200046f57600080fd5b6200047d86828701620003bb565b92505060406200049086828701620003a8565b9150509250925092565b6000620004a9601c8362000583565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004e460138362000583565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b60208082528101620003b5816200049a565b60208082528101620003b581620004d5565b6040518181016001600160401b03811182821017156200055357600080fd5b604052919050565b60006001600160401b038211156200057257600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b038216620003b5565b60005b83811015620005bb578181015183820152602001620005a1565b83811115620005cb576000848401525b50505050565b620005dc816200058c565b8114620005e857600080fd5b50565b61387880620005fb6000396000f3fe60806040526004361061021a5760003560e01c8063706230db11610123578063a22cb465116100ab578063e2b375a91161006f578063e2b375a9146105f4578063e5c2492414610614578063e89fecc014610647578063e982d5a91461065a578063e985e9c51461067a5761021a565b8063a22cb46514610547578063a4ede12814610567578063b88d4fde14610594578063c57a8825146105b4578063c87b56dd146105d45761021a565b806384017e52116100f257806384017e52146104ca5780638456cb59146104ea5780638462151c146104ff57806395d89b411461051f578063a002c376146105345761021a565b8063706230db1461045357806370a082311461047357806373688914146104935780637b103999146104a85761021a565b80633f4ba83a116101a6578063527097251161017557806352709725146103e15780635a393bc2146103f65780635c975abb146104095780635fd8c7101461041e5780636352211e146104335761021a565b80633f4ba83a1461037757806340ce3a411461038c57806342842e0e146103a157806342966c68146103c15761021a565b806313966db5116101ed57806313966db5146102c6578063180b9e3f146102e857806318160ddd1461031557806323b872dd1461032a5780632a0c77991461034a5761021a565b806301ffc9a71461021f57806306fdde0314610255578063081812fc14610277578063095ea7b3146102a4575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612bce565b61069a565b60405161024c91906134fe565b60405180910390f35b34801561026157600080fd5b5061026a6106bd565b60405161024c919061351a565b34801561028357600080fd5b50610297610292366004612d81565b610754565b60405161024c919061341b565b3480156102b057600080fd5b506102c46102bf366004612b80565b6107a0565b005b3480156102d257600080fd5b506102db61089c565b60405161024c919061364b565b3480156102f457600080fd5b50610308610303366004612d81565b6108a2565b60405161024c9190613659565b34801561032157600080fd5b506102db6108ba565b34801561033657600080fd5b506102c4610345366004612a8a565b6108cb565b34801561035657600080fd5b5061036a610365366004612a32565b610a47565b60405161024c91906134ed565b34801561038357600080fd5b506102c4610b4f565b34801561039857600080fd5b5061026a610bd3565b3480156103ad57600080fd5b506102c46103bc366004612a8a565b610c61565b3480156103cd57600080fd5b506102c46103dc366004612d81565b610c81565b3480156103ed57600080fd5b50610297610dc5565b6102db610404366004612ccb565b610dd4565b34801561041557600080fd5b5061023f610f3f565b34801561042a57600080fd5b506102c4610f4f565b34801561043f57600080fd5b5061029761044e366004612d81565b61102b565b34801561045f57600080fd5b506102c461046e366004612c0a565b611046565b34801561047f57600080fd5b506102db61048e366004612a32565b6110b8565b34801561049f57600080fd5b50610297611107565b3480156104b457600080fd5b506104bd611116565b60405161024c919061350c565b3480156104d657600080fd5b506102c46104e5366004612d81565b611125565b3480156104f657600080fd5b506102c4611189565b34801561050b57600080fd5b5061036a61051a366004612a32565b611214565b34801561052b57600080fd5b5061026a6112ce565b6102db610542366004612c3f565b61132f565b34801561055357600080fd5b506102c4610562366004612b50565b611498565b34801561057357600080fd5b50610587610582366004612a32565b61157d565b60405161024c91906134dc565b3480156105a057600080fd5b506102c46105af366004612ad7565b6116f3565b3480156105c057600080fd5b506102c46105cf366004612a32565b611871565b3480156105e057600080fd5b5061026a6105ef366004612d81565b6118f2565b34801561060057600080fd5b506102c461060f366004612a32565b61194b565b34801561062057600080fd5b5061063461062f366004612d81565b6119d8565b60405161024c9796959493929190613429565b6102db610655366004612c3f565b611b63565b34801561066657600080fd5b506102c4610675366004612a32565b611c8f565b34801561068657600080fd5b5061023f610695366004612a50565b611d1d565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600f8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b820191906000526020600020905b81548152906001019060200180831161072c57829003601f168201915b505050505090505b90565b600061075f82611d4b565b6107845760405162461bcd60e51b815260040161077b9061360b565b60405180910390fd5b506000908152600d60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107b757600080fd5b60006107c28261102b565b9050806001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161077b9061358b565b806001600160a01b0316610808611d68565b6001600160a01b03161480610824575061082481610695611d68565b6108405760405162461bcd60e51b815260040161077b9061363b565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108c66005611d6c565b905090565b600254600160a01b900460ff16156108e257600080fd5b6108f36108ed611d68565b82611d70565b61090f5760405162461bcd60e51b815260040161077b9061362b565b6000818152600a60205260408120546001600160a01b0316906109318361102b565b600084815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff1661098f57610972868686611df5565b1561098f5760405162461bcd60e51b815260040161077b9061353b565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109c89185918b918b918b918b918b9101613682565b60206040518083038186803b1580156109e057600080fd5b505afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a189190810190612bb0565b610a345760405162461bcd60e51b815260040161077b9061362b565b610a3f868686611e4c565b505050505050565b60606001600160a01b038216610a6f5760405162461bcd60e51b815260040161077b9061356b565b6001600160a01b0382166000908152600860205260408120610a9090611d6c565b905080610ab25760408051600080825260208201909252905b509150506106b8565b606081604051908082528060200260200182016040528015610ade578160200160208202803883390190505b5090506000610aeb6108ba565b9050600060015b828111610b42576000818152600a60205260409020546001600160a01b0388811691161415610b3a5780848381518110610b2857fe5b60209081029190910101526001909101905b600101610af2565b83955050505050506106b8565b6001546001600160a01b0316610b63611d68565b6001600160a01b03161480610b9257506002546001600160a01b0316610b87611d68565b6001600160a01b0316145b610bae5760405162461bcd60e51b815260040161077b906135db565b600254600160a01b900460ff16610bc457600080fd5b6002805460ff60a01b19169055565b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c595780601f10610c2e57610100808354040283529160200191610c59565b820191906000526020600020905b815481529060010190602001808311610c3c57829003601f168201915b505050505081565b610c7c838383604051806020016040528060008152506116f3565b505050565b600254600160a01b900460ff1615610c9857600080fd5b6000818152600a60205260408120546001600160a01b031690610cba8361102b565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415610d89576004546001600160a01b03166312d26ac882610d00611d68565b6040518363ffffffff1660e01b8152600401610d1d929190613667565b60206040518083038186803b158015610d3557600080fd5b505afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d6d9190810190612bb0565b610d895760405162461bcd60e51b815260040161077b9061357b565b610d9a610d94611d68565b85611d70565b610db65760405162461bcd60e51b815260040161077b9061357b565b610dbf84611f52565b50505050565b6002546001600160a01b031681565b600254600090600160a01b900460ff1615610dee57600080fd5b600354341015610dfd57600080fd5b60008363ffffffff1611610e235760405162461bcd60e51b815260040161077b906135cb565b6004546001600160a01b03166312d26ac884610e3d611d68565b6040518363ffffffff1660e01b8152600401610e5a929190613667565b60206040518083038186803b158015610e7257600080fd5b505afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610eaa9190810190612bb0565b610ec65760405162461bcd60e51b815260040161077b9061361b565b610ed287878786611f64565b610eee5760405162461bcd60e51b815260040161077b906135fb565b6000610f01610efb611d68565b8461203e565b9050610f108189898989612075565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509695505050505050565b600254600160a01b900460ff1681565b6001546001600160a01b0316610f63611d68565b6001600160a01b03161480610f9257506002546001600160a01b0316610f87611d68565b6001600160a01b0316145b610fae5760405162461bcd60e51b815260040161077b906135db565b60405130319060009033908390610fc490613410565b60006040518083038185875af1925050503d8060008114611001576040519150601f19603f3d011682016040523d82523d6000602084013e611006565b606091505b50509050806110275760405162461bcd60e51b815260040161077b9061359b565b5050565b6000908152600660205260409020546001600160a01b031690565b6001546001600160a01b031661105a611d68565b6001600160a01b0316148061108957506002546001600160a01b031661107e611d68565b6001600160a01b0316145b6110a55760405162461bcd60e51b815260040161077b906135db565b805161102790600c90602084019061287f565b60006001600160a01b0382166110e05760405162461bcd60e51b815260040161077b9061356b565b6001600160a01b038216600090815260076020526040902061110190611d6c565b92915050565b6001546001600160a01b031681565b6004546001600160a01b031681565b6001546001600160a01b0316611139611d68565b6001600160a01b0316148061116857506002546001600160a01b031661115d611d68565b6001600160a01b0316145b6111845760405162461bcd60e51b815260040161077b906135db565b600355565b6001546001600160a01b031661119d611d68565b6001600160a01b031614806111cc57506002546001600160a01b03166111c1611d68565b6001600160a01b0316145b6111e85760405162461bcd60e51b815260040161077b906135db565b600254600160a01b900460ff16156111ff57600080fd5b6002805460ff60a01b1916600160a01b179055565b60606000611221836110b8565b90508061123e576040805160008082526020820190925290610aa9565b60608160405190808252806020026020018201604052801561126a578160200160208202803883390190505b50905060006112776108ba565b9050600060015b828111610b42576000818152600660205260409020546001600160a01b03888116911614156112c657808483815181106112b457fe5b60209081029190910101526001909101905b60010161127e565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b600254600090600160a01b900460ff161561134957600080fd5b60035434101561135857600080fd5b60008263ffffffff161161137e5760405162461bcd60e51b815260040161077b906135cb565b6004546001600160a01b03166312d26ac883611398611d68565b6040518363ffffffff1660e01b81526004016113b5929190613667565b60206040518083038186803b1580156113cd57600080fd5b505afa1580156113e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114059190810190612bb0565b6114215760405162461bcd60e51b815260040161077b9061361b565b61142d86868685611f64565b6114495760405162461bcd60e51b815260040161077b906135fb565b600061145b611456611d68565b612234565b905061146a8188888888612075565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905095945050505050565b600254600160a01b900460ff16156114af57600080fd5b6114b7611d68565b6001600160a01b0316826001600160a01b031614156114e85760405162461bcd60e51b815260040161077b906135bb565b80600e60006114f5611d68565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611539611d68565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161157191906134fe565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b8282101561166857600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156116505780601f1061162557610100808354040283529160200191611650565b820191906000526020600020905b81548152906001019060200180831161163357829003601f168201915b505050505081525050815260200190600101906115b1565b505050509050606081516040519080825280602002602001820160405280156116a557816020015b60608152602001906001900390816116905790505b50905060005b82518110156116eb578281815181106116c057fe5b6020026020010151600001518282815181106116d857fe5b60209081029190910101526001016116ab565b509392505050565b600254600160a01b900460ff161561170a57600080fd5b61171b611715611d68565b83611d70565b6117375760405162461bcd60e51b815260040161077b9061362b565b6000828152600a60205260408120546001600160a01b0316906117598461102b565b600085815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff166117b75761179a878787611df5565b156117b75760405162461bcd60e51b815260040161077b9061353b565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916117f09185918c918c918c918b918b9101613682565b60206040518083038186803b15801561180857600080fd5b505afa15801561181c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118409190810190612bb0565b61185c5760405162461bcd60e51b815260040161077b9061362b565b61186887878787612250565b50505050505050565b6001546001600160a01b0316611885611d68565b6001600160a01b031614806118b457506002546001600160a01b03166118a9611d68565b6001600160a01b0316145b6118d05760405162461bcd60e51b815260040161077b906135db565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60606118fd82611d4b565b6119195760405162461bcd60e51b815260040161077b9061360b565b600c61192483612283565b6040516020016119359291906133f8565b6040516020818303038152906040529050919050565b6001546001600160a01b031661195f611d68565b6001600160a01b0316148061198e57506002546001600160a01b0316611983611d68565b6001600160a01b0316145b6119aa5760405162461bcd60e51b815260040161077b906135db565b6001600160a01b038116156119d557600280546001600160a01b0319166001600160a01b0383161790555b50565b60008060606000806000806119ec88611d4b565b611a085760405162461bcd60e51b815260040161077b9061360b565b611a106128fd565b6000898152600a6020908152604091829020825160a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611ac85780601f10611a9d57610100808354040283529160200191611ac8565b820191906000526020600020905b815481529060010190602001808311611aab57829003601f168201915b50505091835250506002919091015465ffffffffffff80821660208085019190915266010000000000008304909116604080850191909152600160601b90920460ff16151560609093019290925260008c81526009909252902054815191925063ffffffff1690611b388b61102b565b602084015160408501516060860151608090960151939e929d50909b50995092975095509350915050565b600254600090600160a01b900460ff1615611b7d57600080fd5b600354341015611b8c57600080fd5b60008263ffffffff1611611bb25760405162461bcd60e51b815260040161077b906135cb565b6004546001600160a01b03166312d26ac883611bcc611d68565b6040518363ffffffff1660e01b8152600401611be9929190613667565b60206040518083038186803b158015611c0157600080fd5b505afa158015611c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c399190810190612bb0565b611c555760405162461bcd60e51b815260040161077b9061361b565b611c6186868685611f64565b611c7d5760405162461bcd60e51b815260040161077b906135fb565b600061145b611c8a611d68565b61235c565b6001546001600160a01b0316611ca3611d68565b6001600160a01b03161480611cd257506002546001600160a01b0316611cc7611d68565b6001600160a01b0316145b611cee5760405162461bcd60e51b815260040161077b906135db565b6001600160a01b038116156119d557600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b6000611d7b82611d4b565b611d975760405162461bcd60e51b815260040161077b9061360b565b6000611da28361102b565b9050806001600160a01b0316846001600160a01b03161480611ddd5750836001600160a01b0316611dd284610754565b6001600160a01b0316145b80611ded5750611ded8185611d1d565b949350505050565b6000818152600a60205260408120546001600160a01b03908116908516811480611e305750806001600160a01b0316846001600160a01b0316145b15611e3f576000915050611e45565b60019150505b9392505050565b826001600160a01b0316611e5f8261102b565b6001600160a01b031614611e855760405162461bcd60e51b815260040161077b9061362b565b6001600160a01b038216611eab5760405162461bcd60e51b815260040161077b9061355b565b611eb48161243b565b6001600160a01b0383166000908152600760205260409020611ed590612476565b6001600160a01b0382166000908152600760205260409020611ef69061248d565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6119d5611f5e8261102b565b82612496565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe6178391611f989186918a91016136dc565b60206040518083038186803b158015611fb057600080fd5b505afa158015611fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe89190810190612bb0565b6120045760405162461bcd60e51b815260040161077b906135ab565b8365ffffffffffff168365ffffffffffff16116120335760405162461bcd60e51b815260040161077b906135eb565b506001949350505050565b60008061204a8461235c565b9050612059600085838661258b565b611e455760405162461bcd60e51b815260040161077b9061354b565b61207e85611d4b565b61209a5760405162461bcd60e51b815260040161077b9061360b565b6120a26128fd565b6040518060a001604052806120b5611d68565b6001600160a01b031681526020018681526020018565ffffffffffff1681526020018465ffffffffffff168152602001831515815250905080600a600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101908051906020019061214a92919061287f565b5060408201516002919091018054606084015160809094015165ffffffffffff1990911665ffffffffffff938416176bffffffffffff000000000000191666010000000000009390941692909202929092176cff0000000000000000000000001916600160601b911515919091021790556121c485612656565b610a3f57600b60006121d4611d68565b6001600160a01b03168152602080820192909252604090810160009081208251808501909352888352805460018101808355918352918490208351805192959190930192612228928492919091019061287f565b50505050505050505050565b600080611e45836040518060200160405280600081525061203e565b61225b848484611e4c565b6122678484848461258b565b610dbf5760405162461bcd60e51b815260040161077b9061354b565b6060816122a857506040805180820190915260018152600360fc1b60208201526106b8565b8160005b81156122c057600101600a820491506122ac565b6060816040519080825280601f01601f1916602001820160405280156122ed576020820181803883390190505b50905060001982015b851561235357600a860660300160f81b8282806001900393508151811061231957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a860495506122f6565b50949350505050565b60006001600160a01b0382166123845760405162461bcd60e51b815260040161077b9061352b565b61238e600561248d565b600061239a6005611d6c565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506123dc9061248d565b6001600160a01b03831660009081526008602052604090206123fd9061248d565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000818152600d60205260409020546001600160a01b0316156119d5576000908152600d6020526040902080546001600160a01b0319169055565b805461248990600163ffffffff61278116565b9055565b80546001019055565b816001600160a01b03166124a98261102b565b6001600160a01b0316146124cf5760405162461bcd60e51b815260040161077b9061357b565b6124d88161243b565b6001600160a01b03821660009081526007602052604090206124f990612476565b600081815260066020908152604080832080546001600160a01b0319908116909155600a90925282208054909116815590612537600183018261292c565b5060020180546cffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600061259f846001600160a01b03166127c3565b6125ab57506001611ded565b6000846001600160a01b031663150b7a026125c4611d68565b8887876040518563ffffffff1660e01b81526004016125e69493929190613498565b602060405180830381600087803b15801561260057600080fd5b505af1158015612614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126389190810190612bec565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b8282101561273857600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156127205780601f106126f557610100808354040283529160200191612720565b820191906000526020600020905b81548152906001019060200180831161270357829003601f168201915b50505050508152505081526020019060010190612681565b5092935060009250829150505b82518110156116eb5761276f8584838151811061275e57fe5b6020026020010151600001516127fa565b1561277957600191505b600101612745565b6000611e4583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612853565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611ded5750141592915050565b60008160405160200161280d91906133ec565b604051602081830303815290604052805190602001208360405160200161283491906133ec565b6040516020818303038152906040528051906020012014905092915050565b600081848411156128775760405162461bcd60e51b815260040161077b919061351a565b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106128c057805160ff19168380011785556128ed565b828001600101855582156128ed579182015b828111156128ed5782518255916020019190600101906128d2565b506128f992915061296c565b5090565b6040805160a0810182526000808252606060208301819052928201819052918101829052608081019190915290565b50805460018160011615610100020316600290046000825580601f1061295257506119d5565b601f0160209004906000526020600020908101906119d591905b61075191905b808211156128f95760008155600101612972565b8035611101816137f4565b803561110181613808565b805161110181613808565b803561110181613811565b805161110181613811565b600082601f8301126129ce57600080fd5b81356129e16129dc82613723565b6136fc565b915080825260208301602083018583830111156129fd57600080fd5b612a088382846137b2565b50505092915050565b80356111018161381a565b803561110181613823565b80356111018161382c565b600060208284031215612a4457600080fd5b6000611ded8484612986565b60008060408385031215612a6357600080fd5b6000612a6f8585612986565b9250506020612a8085828601612986565b9150509250929050565b600080600060608486031215612a9f57600080fd5b6000612aab8686612986565b9350506020612abc86828701612986565b9250506040612acd86828701612a11565b9150509250925092565b60008060008060808587031215612aed57600080fd5b6000612af98787612986565b9450506020612b0a87828801612986565b9350506040612b1b87828801612a11565b925050606085013567ffffffffffffffff811115612b3857600080fd5b612b44878288016129bd565b91505092959194509250565b60008060408385031215612b6357600080fd5b6000612b6f8585612986565b9250506020612a8085828601612991565b60008060408385031215612b9357600080fd5b6000612b9f8585612986565b9250506020612a8085828601612a11565b600060208284031215612bc257600080fd5b6000611ded848461299c565b600060208284031215612be057600080fd5b6000611ded84846129a7565b600060208284031215612bfe57600080fd5b6000611ded84846129b2565b600060208284031215612c1c57600080fd5b813567ffffffffffffffff811115612c3357600080fd5b611ded848285016129bd565b600080600080600060a08688031215612c5757600080fd5b853567ffffffffffffffff811115612c6e57600080fd5b612c7a888289016129bd565b9550506020612c8b88828901612a27565b9450506040612c9c88828901612a27565b9350506060612cad88828901612991565b9250506080612cbe88828901612a1c565b9150509295509295909350565b60008060008060008060c08789031215612ce457600080fd5b863567ffffffffffffffff811115612cfb57600080fd5b612d0789828a016129bd565b9650506020612d1889828a01612a27565b9550506040612d2989828a01612a27565b9450506060612d3a89828a01612991565b9350506080612d4b89828a01612a1c565b92505060a087013567ffffffffffffffff811115612d6857600080fd5b612d7489828a016129bd565b9150509295509295509295565b600060208284031215612d9357600080fd5b6000611ded8484612a11565b6000611e458383612e9e565b6000612db783836133d1565b505060200190565b612dc88161376a565b82525050565b6000612dd98261375d565b612de38185613761565b935083602082028501612df58561374b565b8060005b85811015612e2f5784840389528151612e128582612d9f565b9450612e1d8361374b565b60209a909a0199925050600101612df9565b5091979650505050505050565b6000612e478261375d565b612e518185613761565b9350612e5c8361374b565b8060005b83811015612e8a578151612e748882612dab565b9750612e7f8361374b565b925050600101612e60565b509495945050505050565b612dc881613775565b6000612ea98261375d565b612eb38185613761565b9350612ec38185602086016137be565b612ecc816137ea565b9093019392505050565b612dc8816137a7565b6000612eea8261375d565b612ef481856106b8565b9350612f048185602086016137be565b9290920192915050565b600081546001811660008114612f2b5760018114612f4e57612f8d565b607f6002830416612f3c81876106b8565b60ff1984168152955085019250612f8d565b60028204612f5c81876106b8565b9550612f6785613751565b60005b82811015612f8657815488820152600190910190602001612f6a565b5050850192505b505092915050565b6000612fa2601483613761565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000612fdb601a83613761565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000613014602a83613761565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b6000613060601883613761565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000613099601983613761565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b60006130d2601183613761565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b600061310b601583613761565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b6000613144600f83613761565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b600061317d602383613761565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b60006131c2601a83613761565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b60006131fb601583613761565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b6000613234601383613761565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b600061326d601983613761565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006111016000836106b8565b60006132b3601183613761565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b60006132ec601283613761565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613325602583613761565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b600061336c601583613761565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b60006133a5601583613761565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b612dc881610751565b612dc881613793565b612dc88161379c565b6000611e458284612edf565b60006134048285612f0e565b9150611ded8284612edf565b600061110182613299565b602081016111018284612dbf565b60e08101613437828a612dbf565b6134446020830189612dbf565b81810360408301526134568188612e9e565b905061346560608301876133e3565b61347260808301866133e3565b61347f60a0830185612e95565b61348c60c08301846133da565b98975050505050505050565b608081016134a68287612dbf565b6134b36020830186612dbf565b6134c060408301856133d1565b81810360608301526134d28184612e9e565b9695505050505050565b60208082528101611e458184612dce565b60208082528101611e458184612e3c565b602081016111018284612e95565b602081016111018284612ed6565b60208082528101611e458184612e9e565b6020808252810161110181612f95565b6020808252810161110181612fce565b6020808252810161110181613007565b6020808252810161110181613053565b602080825281016111018161308c565b60208082528101611101816130c5565b60208082528101611101816130fe565b6020808252810161110181613137565b6020808252810161110181613170565b60208082528101611101816131b5565b60208082528101611101816131ee565b6020808252810161110181613227565b6020808252810161110181613260565b60208082528101611101816132a6565b60208082528101611101816132df565b6020808252810161110181613318565b602080825281016111018161335f565b6020808252810161110181613398565b6020810161110182846133d1565b6020810161110182846133da565b6040810161367582856133da565b611e456020830184612dbf565b60c0810161369082896133da565b61369d6020830188612dbf565b6136aa6040830187612dbf565b6136b760608301866133d1565b6136c46080830185612dbf565b6136d160a0830184612dbf565b979650505050505050565b604081016136ea82856133da565b8181036020830152611ded8184612e9e565b60405181810167ffffffffffffffff8111828210171561371b57600080fd5b604052919050565b600067ffffffffffffffff82111561373a57600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b600061110182613787565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b60006111018261376a565b82818337506000910152565b60005b838110156137d95781810151838201526020016137c1565b83811115610dbf5750506000910152565b601f01601f191690565b6137fd8161376a565b81146119d557600080fd5b6137fd81613775565b6137fd8161377a565b6137fd81610751565b6137fd81613793565b6137fd8161379c56fea365627a7a72315820d9306d2ceb2fda13626adb341b4d0ed9ea4f6e025b86aefc41795da89da19a746c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x60806040526004361061021a5760003560e01c8063706230db11610123578063a22cb465116100ab578063e2b375a91161006f578063e2b375a9146105f4578063e5c2492414610614578063e89fecc014610647578063e982d5a91461065a578063e985e9c51461067a5761021a565b8063a22cb46514610547578063a4ede12814610567578063b88d4fde14610594578063c57a8825146105b4578063c87b56dd146105d45761021a565b806384017e52116100f257806384017e52146104ca5780638456cb59146104ea5780638462151c146104ff57806395d89b411461051f578063a002c376146105345761021a565b8063706230db1461045357806370a082311461047357806373688914146104935780637b103999146104a85761021a565b80633f4ba83a116101a6578063527097251161017557806352709725146103e15780635a393bc2146103f65780635c975abb146104095780635fd8c7101461041e5780636352211e146104335761021a565b80633f4ba83a1461037757806340ce3a411461038c57806342842e0e146103a157806342966c68146103c15761021a565b806313966db5116101ed57806313966db5146102c6578063180b9e3f146102e857806318160ddd1461031557806323b872dd1461032a5780632a0c77991461034a5761021a565b806301ffc9a71461021f57806306fdde0314610255578063081812fc14610277578063095ea7b3146102a4575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612bce565b61069a565b60405161024c91906134fe565b60405180910390f35b34801561026157600080fd5b5061026a6106bd565b60405161024c919061351a565b34801561028357600080fd5b50610297610292366004612d81565b610754565b60405161024c919061341b565b3480156102b057600080fd5b506102c46102bf366004612b80565b6107a0565b005b3480156102d257600080fd5b506102db61089c565b60405161024c919061364b565b3480156102f457600080fd5b50610308610303366004612d81565b6108a2565b60405161024c9190613659565b34801561032157600080fd5b506102db6108ba565b34801561033657600080fd5b506102c4610345366004612a8a565b6108cb565b34801561035657600080fd5b5061036a610365366004612a32565b610a47565b60405161024c91906134ed565b34801561038357600080fd5b506102c4610b4f565b34801561039857600080fd5b5061026a610bd3565b3480156103ad57600080fd5b506102c46103bc366004612a8a565b610c61565b3480156103cd57600080fd5b506102c46103dc366004612d81565b610c81565b3480156103ed57600080fd5b50610297610dc5565b6102db610404366004612ccb565b610dd4565b34801561041557600080fd5b5061023f610f3f565b34801561042a57600080fd5b506102c4610f4f565b34801561043f57600080fd5b5061029761044e366004612d81565b61102b565b34801561045f57600080fd5b506102c461046e366004612c0a565b611046565b34801561047f57600080fd5b506102db61048e366004612a32565b6110b8565b34801561049f57600080fd5b50610297611107565b3480156104b457600080fd5b506104bd611116565b60405161024c919061350c565b3480156104d657600080fd5b506102c46104e5366004612d81565b611125565b3480156104f657600080fd5b506102c4611189565b34801561050b57600080fd5b5061036a61051a366004612a32565b611214565b34801561052b57600080fd5b5061026a6112ce565b6102db610542366004612c3f565b61132f565b34801561055357600080fd5b506102c4610562366004612b50565b611498565b34801561057357600080fd5b50610587610582366004612a32565b61157d565b60405161024c91906134dc565b3480156105a057600080fd5b506102c46105af366004612ad7565b6116f3565b3480156105c057600080fd5b506102c46105cf366004612a32565b611871565b3480156105e057600080fd5b5061026a6105ef366004612d81565b6118f2565b34801561060057600080fd5b506102c461060f366004612a32565b61194b565b34801561062057600080fd5b5061063461062f366004612d81565b6119d8565b60405161024c9796959493929190613429565b6102db610655366004612c3f565b611b63565b34801561066657600080fd5b506102c4610675366004612a32565b611c8f565b34801561068657600080fd5b5061023f610695366004612a50565b611d1d565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600f8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b820191906000526020600020905b81548152906001019060200180831161072c57829003601f168201915b505050505090505b90565b600061075f82611d4b565b6107845760405162461bcd60e51b815260040161077b9061360b565b60405180910390fd5b506000908152600d60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107b757600080fd5b60006107c28261102b565b9050806001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161077b9061358b565b806001600160a01b0316610808611d68565b6001600160a01b03161480610824575061082481610695611d68565b6108405760405162461bcd60e51b815260040161077b9061363b565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108c66005611d6c565b905090565b600254600160a01b900460ff16156108e257600080fd5b6108f36108ed611d68565b82611d70565b61090f5760405162461bcd60e51b815260040161077b9061362b565b6000818152600a60205260408120546001600160a01b0316906109318361102b565b600084815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff1661098f57610972868686611df5565b1561098f5760405162461bcd60e51b815260040161077b9061353b565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109c89185918b918b918b918b918b9101613682565b60206040518083038186803b1580156109e057600080fd5b505afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a189190810190612bb0565b610a345760405162461bcd60e51b815260040161077b9061362b565b610a3f868686611e4c565b505050505050565b60606001600160a01b038216610a6f5760405162461bcd60e51b815260040161077b9061356b565b6001600160a01b0382166000908152600860205260408120610a9090611d6c565b905080610ab25760408051600080825260208201909252905b509150506106b8565b606081604051908082528060200260200182016040528015610ade578160200160208202803883390190505b5090506000610aeb6108ba565b9050600060015b828111610b42576000818152600a60205260409020546001600160a01b0388811691161415610b3a5780848381518110610b2857fe5b60209081029190910101526001909101905b600101610af2565b83955050505050506106b8565b6001546001600160a01b0316610b63611d68565b6001600160a01b03161480610b9257506002546001600160a01b0316610b87611d68565b6001600160a01b0316145b610bae5760405162461bcd60e51b815260040161077b906135db565b600254600160a01b900460ff16610bc457600080fd5b6002805460ff60a01b19169055565b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c595780601f10610c2e57610100808354040283529160200191610c59565b820191906000526020600020905b815481529060010190602001808311610c3c57829003601f168201915b505050505081565b610c7c838383604051806020016040528060008152506116f3565b505050565b600254600160a01b900460ff1615610c9857600080fd5b6000818152600a60205260408120546001600160a01b031690610cba8361102b565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415610d89576004546001600160a01b03166312d26ac882610d00611d68565b6040518363ffffffff1660e01b8152600401610d1d929190613667565b60206040518083038186803b158015610d3557600080fd5b505afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d6d9190810190612bb0565b610d895760405162461bcd60e51b815260040161077b9061357b565b610d9a610d94611d68565b85611d70565b610db65760405162461bcd60e51b815260040161077b9061357b565b610dbf84611f52565b50505050565b6002546001600160a01b031681565b600254600090600160a01b900460ff1615610dee57600080fd5b600354341015610dfd57600080fd5b60008363ffffffff1611610e235760405162461bcd60e51b815260040161077b906135cb565b6004546001600160a01b03166312d26ac884610e3d611d68565b6040518363ffffffff1660e01b8152600401610e5a929190613667565b60206040518083038186803b158015610e7257600080fd5b505afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610eaa9190810190612bb0565b610ec65760405162461bcd60e51b815260040161077b9061361b565b610ed287878786611f64565b610eee5760405162461bcd60e51b815260040161077b906135fb565b6000610f01610efb611d68565b8461203e565b9050610f108189898989612075565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509695505050505050565b600254600160a01b900460ff1681565b6001546001600160a01b0316610f63611d68565b6001600160a01b03161480610f9257506002546001600160a01b0316610f87611d68565b6001600160a01b0316145b610fae5760405162461bcd60e51b815260040161077b906135db565b60405130319060009033908390610fc490613410565b60006040518083038185875af1925050503d8060008114611001576040519150601f19603f3d011682016040523d82523d6000602084013e611006565b606091505b50509050806110275760405162461bcd60e51b815260040161077b9061359b565b5050565b6000908152600660205260409020546001600160a01b031690565b6001546001600160a01b031661105a611d68565b6001600160a01b0316148061108957506002546001600160a01b031661107e611d68565b6001600160a01b0316145b6110a55760405162461bcd60e51b815260040161077b906135db565b805161102790600c90602084019061287f565b60006001600160a01b0382166110e05760405162461bcd60e51b815260040161077b9061356b565b6001600160a01b038216600090815260076020526040902061110190611d6c565b92915050565b6001546001600160a01b031681565b6004546001600160a01b031681565b6001546001600160a01b0316611139611d68565b6001600160a01b0316148061116857506002546001600160a01b031661115d611d68565b6001600160a01b0316145b6111845760405162461bcd60e51b815260040161077b906135db565b600355565b6001546001600160a01b031661119d611d68565b6001600160a01b031614806111cc57506002546001600160a01b03166111c1611d68565b6001600160a01b0316145b6111e85760405162461bcd60e51b815260040161077b906135db565b600254600160a01b900460ff16156111ff57600080fd5b6002805460ff60a01b1916600160a01b179055565b60606000611221836110b8565b90508061123e576040805160008082526020820190925290610aa9565b60608160405190808252806020026020018201604052801561126a578160200160208202803883390190505b50905060006112776108ba565b9050600060015b828111610b42576000818152600660205260409020546001600160a01b03888116911614156112c657808483815181106112b457fe5b60209081029190910101526001909101905b60010161127e565b60108054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107495780601f1061071e57610100808354040283529160200191610749565b600254600090600160a01b900460ff161561134957600080fd5b60035434101561135857600080fd5b60008263ffffffff161161137e5760405162461bcd60e51b815260040161077b906135cb565b6004546001600160a01b03166312d26ac883611398611d68565b6040518363ffffffff1660e01b81526004016113b5929190613667565b60206040518083038186803b1580156113cd57600080fd5b505afa1580156113e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114059190810190612bb0565b6114215760405162461bcd60e51b815260040161077b9061361b565b61142d86868685611f64565b6114495760405162461bcd60e51b815260040161077b906135fb565b600061145b611456611d68565b612234565b905061146a8188888888612075565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905095945050505050565b600254600160a01b900460ff16156114af57600080fd5b6114b7611d68565b6001600160a01b0316826001600160a01b031614156114e85760405162461bcd60e51b815260040161077b906135bb565b80600e60006114f5611d68565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611539611d68565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161157191906134fe565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b8282101561166857600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156116505780601f1061162557610100808354040283529160200191611650565b820191906000526020600020905b81548152906001019060200180831161163357829003601f168201915b505050505081525050815260200190600101906115b1565b505050509050606081516040519080825280602002602001820160405280156116a557816020015b60608152602001906001900390816116905790505b50905060005b82518110156116eb578281815181106116c057fe5b6020026020010151600001518282815181106116d857fe5b60209081029190910101526001016116ab565b509392505050565b600254600160a01b900460ff161561170a57600080fd5b61171b611715611d68565b83611d70565b6117375760405162461bcd60e51b815260040161077b9061362b565b6000828152600a60205260408120546001600160a01b0316906117598461102b565b600085815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff166117b75761179a878787611df5565b156117b75760405162461bcd60e51b815260040161077b9061353b565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916117f09185918c918c918c918b918b9101613682565b60206040518083038186803b15801561180857600080fd5b505afa15801561181c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118409190810190612bb0565b61185c5760405162461bcd60e51b815260040161077b9061362b565b61186887878787612250565b50505050505050565b6001546001600160a01b0316611885611d68565b6001600160a01b031614806118b457506002546001600160a01b03166118a9611d68565b6001600160a01b0316145b6118d05760405162461bcd60e51b815260040161077b906135db565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60606118fd82611d4b565b6119195760405162461bcd60e51b815260040161077b9061360b565b600c61192483612283565b6040516020016119359291906133f8565b6040516020818303038152906040529050919050565b6001546001600160a01b031661195f611d68565b6001600160a01b0316148061198e57506002546001600160a01b0316611983611d68565b6001600160a01b0316145b6119aa5760405162461bcd60e51b815260040161077b906135db565b6001600160a01b038116156119d557600280546001600160a01b0319166001600160a01b0383161790555b50565b60008060606000806000806119ec88611d4b565b611a085760405162461bcd60e51b815260040161077b9061360b565b611a106128fd565b6000898152600a6020908152604091829020825160a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611ac85780601f10611a9d57610100808354040283529160200191611ac8565b820191906000526020600020905b815481529060010190602001808311611aab57829003601f168201915b50505091835250506002919091015465ffffffffffff80821660208085019190915266010000000000008304909116604080850191909152600160601b90920460ff16151560609093019290925260008c81526009909252902054815191925063ffffffff1690611b388b61102b565b602084015160408501516060860151608090960151939e929d50909b50995092975095509350915050565b600254600090600160a01b900460ff1615611b7d57600080fd5b600354341015611b8c57600080fd5b60008263ffffffff1611611bb25760405162461bcd60e51b815260040161077b906135cb565b6004546001600160a01b03166312d26ac883611bcc611d68565b6040518363ffffffff1660e01b8152600401611be9929190613667565b60206040518083038186803b158015611c0157600080fd5b505afa158015611c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c399190810190612bb0565b611c555760405162461bcd60e51b815260040161077b9061361b565b611c6186868685611f64565b611c7d5760405162461bcd60e51b815260040161077b906135fb565b600061145b611c8a611d68565b61235c565b6001546001600160a01b0316611ca3611d68565b6001600160a01b03161480611cd257506002546001600160a01b0316611cc7611d68565b6001600160a01b0316145b611cee5760405162461bcd60e51b815260040161077b906135db565b6001600160a01b038116156119d557600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b6000611d7b82611d4b565b611d975760405162461bcd60e51b815260040161077b9061360b565b6000611da28361102b565b9050806001600160a01b0316846001600160a01b03161480611ddd5750836001600160a01b0316611dd284610754565b6001600160a01b0316145b80611ded5750611ded8185611d1d565b949350505050565b6000818152600a60205260408120546001600160a01b03908116908516811480611e305750806001600160a01b0316846001600160a01b0316145b15611e3f576000915050611e45565b60019150505b9392505050565b826001600160a01b0316611e5f8261102b565b6001600160a01b031614611e855760405162461bcd60e51b815260040161077b9061362b565b6001600160a01b038216611eab5760405162461bcd60e51b815260040161077b9061355b565b611eb48161243b565b6001600160a01b0383166000908152600760205260409020611ed590612476565b6001600160a01b0382166000908152600760205260409020611ef69061248d565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6119d5611f5e8261102b565b82612496565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe6178391611f989186918a91016136dc565b60206040518083038186803b158015611fb057600080fd5b505afa158015611fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe89190810190612bb0565b6120045760405162461bcd60e51b815260040161077b906135ab565b8365ffffffffffff168365ffffffffffff16116120335760405162461bcd60e51b815260040161077b906135eb565b506001949350505050565b60008061204a8461235c565b9050612059600085838661258b565b611e455760405162461bcd60e51b815260040161077b9061354b565b61207e85611d4b565b61209a5760405162461bcd60e51b815260040161077b9061360b565b6120a26128fd565b6040518060a001604052806120b5611d68565b6001600160a01b031681526020018681526020018565ffffffffffff1681526020018465ffffffffffff168152602001831515815250905080600a600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101908051906020019061214a92919061287f565b5060408201516002919091018054606084015160809094015165ffffffffffff1990911665ffffffffffff938416176bffffffffffff000000000000191666010000000000009390941692909202929092176cff0000000000000000000000001916600160601b911515919091021790556121c485612656565b610a3f57600b60006121d4611d68565b6001600160a01b03168152602080820192909252604090810160009081208251808501909352888352805460018101808355918352918490208351805192959190930192612228928492919091019061287f565b50505050505050505050565b600080611e45836040518060200160405280600081525061203e565b61225b848484611e4c565b6122678484848461258b565b610dbf5760405162461bcd60e51b815260040161077b9061354b565b6060816122a857506040805180820190915260018152600360fc1b60208201526106b8565b8160005b81156122c057600101600a820491506122ac565b6060816040519080825280601f01601f1916602001820160405280156122ed576020820181803883390190505b50905060001982015b851561235357600a860660300160f81b8282806001900393508151811061231957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a860495506122f6565b50949350505050565b60006001600160a01b0382166123845760405162461bcd60e51b815260040161077b9061352b565b61238e600561248d565b600061239a6005611d6c565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b0389169081179091558352600790915290209091506123dc9061248d565b6001600160a01b03831660009081526008602052604090206123fd9061248d565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000818152600d60205260409020546001600160a01b0316156119d5576000908152600d6020526040902080546001600160a01b0319169055565b805461248990600163ffffffff61278116565b9055565b80546001019055565b816001600160a01b03166124a98261102b565b6001600160a01b0316146124cf5760405162461bcd60e51b815260040161077b9061357b565b6124d88161243b565b6001600160a01b03821660009081526007602052604090206124f990612476565b600081815260066020908152604080832080546001600160a01b0319908116909155600a90925282208054909116815590612537600183018261292c565b5060020180546cffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600061259f846001600160a01b03166127c3565b6125ab57506001611ded565b6000846001600160a01b031663150b7a026125c4611d68565b8887876040518563ffffffff1660e01b81526004016125e69493929190613498565b602060405180830381600087803b15801561260057600080fd5b505af1158015612614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126389190810190612bec565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b8282101561273857600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156127205780601f106126f557610100808354040283529160200191612720565b820191906000526020600020905b81548152906001019060200180831161270357829003601f168201915b50505050508152505081526020019060010190612681565b5092935060009250829150505b82518110156116eb5761276f8584838151811061275e57fe5b6020026020010151600001516127fa565b1561277957600191505b600101612745565b6000611e4583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612853565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611ded5750141592915050565b60008160405160200161280d91906133ec565b604051602081830303815290604052805190602001208360405160200161283491906133ec565b6040516020818303038152906040528051906020012014905092915050565b600081848411156128775760405162461bcd60e51b815260040161077b919061351a565b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106128c057805160ff19168380011785556128ed565b828001600101855582156128ed579182015b828111156128ed5782518255916020019190600101906128d2565b506128f992915061296c565b5090565b6040805160a0810182526000808252606060208301819052928201819052918101829052608081019190915290565b50805460018160011615610100020316600290046000825580601f1061295257506119d5565b601f0160209004906000526020600020908101906119d591905b61075191905b808211156128f95760008155600101612972565b8035611101816137f4565b803561110181613808565b805161110181613808565b803561110181613811565b805161110181613811565b600082601f8301126129ce57600080fd5b81356129e16129dc82613723565b6136fc565b915080825260208301602083018583830111156129fd57600080fd5b612a088382846137b2565b50505092915050565b80356111018161381a565b803561110181613823565b80356111018161382c565b600060208284031215612a4457600080fd5b6000611ded8484612986565b60008060408385031215612a6357600080fd5b6000612a6f8585612986565b9250506020612a8085828601612986565b9150509250929050565b600080600060608486031215612a9f57600080fd5b6000612aab8686612986565b9350506020612abc86828701612986565b9250506040612acd86828701612a11565b9150509250925092565b60008060008060808587031215612aed57600080fd5b6000612af98787612986565b9450506020612b0a87828801612986565b9350506040612b1b87828801612a11565b925050606085013567ffffffffffffffff811115612b3857600080fd5b612b44878288016129bd565b91505092959194509250565b60008060408385031215612b6357600080fd5b6000612b6f8585612986565b9250506020612a8085828601612991565b60008060408385031215612b9357600080fd5b6000612b9f8585612986565b9250506020612a8085828601612a11565b600060208284031215612bc257600080fd5b6000611ded848461299c565b600060208284031215612be057600080fd5b6000611ded84846129a7565b600060208284031215612bfe57600080fd5b6000611ded84846129b2565b600060208284031215612c1c57600080fd5b813567ffffffffffffffff811115612c3357600080fd5b611ded848285016129bd565b600080600080600060a08688031215612c5757600080fd5b853567ffffffffffffffff811115612c6e57600080fd5b612c7a888289016129bd565b9550506020612c8b88828901612a27565b9450506040612c9c88828901612a27565b9350506060612cad88828901612991565b9250506080612cbe88828901612a1c565b9150509295509295909350565b60008060008060008060c08789031215612ce457600080fd5b863567ffffffffffffffff811115612cfb57600080fd5b612d0789828a016129bd565b9650506020612d1889828a01612a27565b9550506040612d2989828a01612a27565b9450506060612d3a89828a01612991565b9350506080612d4b89828a01612a1c565b92505060a087013567ffffffffffffffff811115612d6857600080fd5b612d7489828a016129bd565b9150509295509295509295565b600060208284031215612d9357600080fd5b6000611ded8484612a11565b6000611e458383612e9e565b6000612db783836133d1565b505060200190565b612dc88161376a565b82525050565b6000612dd98261375d565b612de38185613761565b935083602082028501612df58561374b565b8060005b85811015612e2f5784840389528151612e128582612d9f565b9450612e1d8361374b565b60209a909a0199925050600101612df9565b5091979650505050505050565b6000612e478261375d565b612e518185613761565b9350612e5c8361374b565b8060005b83811015612e8a578151612e748882612dab565b9750612e7f8361374b565b925050600101612e60565b509495945050505050565b612dc881613775565b6000612ea98261375d565b612eb38185613761565b9350612ec38185602086016137be565b612ecc816137ea565b9093019392505050565b612dc8816137a7565b6000612eea8261375d565b612ef481856106b8565b9350612f048185602086016137be565b9290920192915050565b600081546001811660008114612f2b5760018114612f4e57612f8d565b607f6002830416612f3c81876106b8565b60ff1984168152955085019250612f8d565b60028204612f5c81876106b8565b9550612f6785613751565b60005b82811015612f8657815488820152600190910190602001612f6a565b5050850192505b505092915050565b6000612fa2601483613761565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000612fdb601a83613761565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b6000613014602a83613761565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b6000613060601883613761565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b6000613099601983613761565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b60006130d2601183613761565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b600061310b601583613761565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b6000613144600f83613761565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b600061317d602383613761565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b60006131c2601a83613761565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b60006131fb601583613761565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b6000613234601383613761565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b600061326d601983613761565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b60006111016000836106b8565b60006132b3601183613761565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b60006132ec601283613761565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b6000613325602583613761565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b600061336c601583613761565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b60006133a5601583613761565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b612dc881610751565b612dc881613793565b612dc88161379c565b6000611e458284612edf565b60006134048285612f0e565b9150611ded8284612edf565b600061110182613299565b602081016111018284612dbf565b60e08101613437828a612dbf565b6134446020830189612dbf565b81810360408301526134568188612e9e565b905061346560608301876133e3565b61347260808301866133e3565b61347f60a0830185612e95565b61348c60c08301846133da565b98975050505050505050565b608081016134a68287612dbf565b6134b36020830186612dbf565b6134c060408301856133d1565b81810360608301526134d28184612e9e565b9695505050505050565b60208082528101611e458184612dce565b60208082528101611e458184612e3c565b602081016111018284612e95565b602081016111018284612ed6565b60208082528101611e458184612e9e565b6020808252810161110181612f95565b6020808252810161110181612fce565b6020808252810161110181613007565b6020808252810161110181613053565b602080825281016111018161308c565b60208082528101611101816130c5565b60208082528101611101816130fe565b6020808252810161110181613137565b6020808252810161110181613170565b60208082528101611101816131b5565b60208082528101611101816131ee565b6020808252810161110181613227565b6020808252810161110181613260565b60208082528101611101816132a6565b60208082528101611101816132df565b6020808252810161110181613318565b602080825281016111018161335f565b6020808252810161110181613398565b6020810161110182846133d1565b6020810161110182846133da565b6040810161367582856133da565b611e456020830184612dbf565b60c0810161369082896133da565b61369d6020830188612dbf565b6136aa6040830187612dbf565b6136b760608301866133d1565b6136c46080830185612dbf565b6136d160a0830184612dbf565b979650505050505050565b604081016136ea82856133da565b8181036020830152611ded8184612e9e565b60405181810167ffffffffffffffff8111828210171561371b57600080fd5b604052919050565b600067ffffffffffffffff82111561373a57600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b600061110182613787565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b60006111018261376a565b82818337506000910152565b60005b838110156137d95781810151838201526020016137c1565b83811115610dbf5750506000910152565b601f01601f191690565b6137fd8161376a565b81146119d557600080fd5b6137fd81613775565b6137fd8161377a565b6137fd81610751565b6137fd81613793565b6137fd8161379c56fea365627a7a72315820d9306d2ceb2fda13626adb341b4d0ed9ea4f6e025b86aefc41795da89da19a746c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "1437:26:3:-;;;-1:-1:-1;;;;1437:26:3;;;1576:15;1551:40;;3651:34;850:1239:8;3651:34:3;;;1458:5;850:1239:8;3651:34:3;;;;;;;;:::i;:::-;;1366:336:8;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;5261::3;5280:20;-1:-1:-1;;;;;5261:18:3;:40;:::i;:::-;5381:12;-1:-1:-1;;;;;5381:10:3;:12;:::i;:::-;5372:6;:21;;-1:-1:-1;;;;;;5372:21:3;-1:-1:-1;;;;;5372:21:3;;;;;;;;;;5412:12;:10;:12::i;:::-;5403:6;:21;;-1:-1:-1;;;;;;5403:21:3;-1:-1:-1;;;;;5403:21:3;;;;;;;;;;1464:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1486:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1590:49:8;1609:29;-1:-1:-1;;;;;1590:18:8;:49;:::i;:::-;1650:44;1678:15;1650:27;;;;;:44;;:::i;:::-;1366:336;;;850:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;5898:90:3:-;5970:10;5898:90;;:::o;7224:144::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;-1:-1:-1;;;;;6463:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;-1:-1:-1;;;;;6491:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;;;;;;;;;;;7322:8;:39;;-1:-1:-1;;;;;;7322:39:3;-1:-1:-1;;;;;7322:39:3;;;;;;;;;;7224:144::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;850:1239:8;;;;;;",
  "deployedSourceMap": "850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1807:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:83:8;;;:::i;:::-;;;;;;;;22520:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22520:210:3;;;;;;;;:::i;:::-;;;;;;;;21758:477;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21758:477:3;;;;;;;;:::i;:::-;;1551:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:40:3;;;:::i;:::-;;;;;;;;2429:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2429:54:3;;;;;;;;:::i;:::-;;;;;;;;19119:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19119:98:3;;;:::i;24270:829::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24270:829:3;;;;;;;;:::i;18012:973::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18012:973:3;;;;;;;;:::i;:::-;;;;;;;;8359:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8359:78:3;;;:::i;3651:34::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3651:34:3;;;:::i;25748:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25748:134:3;;;;;;;;:::i;32099:550::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32099:550:3;;;;;;;;:::i;1326:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1326:21:3;;;:::i;10902:901::-;;;;;;;;;:::i;1437:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:26:3;;;:::i;8502:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8502:305:3;;;:::i;19886:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19886:152:3;;;;;;;;:::i;7640:127::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7640:127:3;;;;;;;;:::i;19426:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19426:241:3;;;;;;;;:::i;1299:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1299:21:3;;;:::i;1769:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1769:32:3;;;:::i;:::-;;;;;;;;7461:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7461:105:3;;;;;;;;:::i;8203:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8203:78:3;;;:::i;20456:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20456:840:3;;;;;;;;:::i;1999:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:87:8;;;:::i;9873:868:3:-;;;;;;;;;:::i;23023:286::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23023:286:3;;;;;;;;:::i;17272:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17272:330:3;;;;;;;;:::i;:::-;;;;;;;;26604:862;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26604:862:3;;;;;;;;:::i;7224:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7224:144:3;;;;;;;;:::i;14103:258::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14103:258:3;;;;;;;;:::i;6902:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6902:169:3;;;;;;;;:::i;16100:752::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16100:752:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8923:860;;;;;;;;;:::i;6726:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6726:169:3;;;;;;;;:::i;23648:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23648:185:3;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1807:83:8:-;1878:5;1871:12;;;;;;;;-1:-1:-1;;1871:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:13;;1871:12;;1878:5;;1871:12;;1878:5;1871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:83;;:::o;22520:210:3:-;22579:7;22620:16;22628:7;22620;:16::i;:::-;22599:81;;;;-1:-1:-1;;;22599:81:3;;;;;;;;;;;;;;;;;-1:-1:-1;22698:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;22698:24:3;;22520:210::o;21758:477::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;21856:18;21877:16;21885:7;21877;:16::i;:::-;21856:37;;21931:10;-1:-1:-1;;;;;21925:16:3;:2;-1:-1:-1;;;;;21925:16:3;;;21904:84;;;;-1:-1:-1;;;21904:84:3;;;;;;;;;22036:10;-1:-1:-1;;;;;22020:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;22020:26:3;;:72;;;;22050:42;22067:10;22079:12;:10;:12::i;22050:42::-;21999:140;;;;-1:-1:-1;;;21999:140:3;;;;;;;;;22150:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;22150:29:3;-1:-1:-1;;;;;22150:29:3;;;;;;;;;22194:33;;22150:24;;22194:33;;;;;;;7978:1;21758:477;;:::o;1551:40::-;;;;:::o;2429:54::-;;;;;;;;;;;;;;;:::o;19119:98::-;19163:7;19190:19;:9;:17;:19::i;:::-;19183:26;;19119:98;:::o;24270:829::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;24408:41;24427:12;:10;:12::i;:::-;24441:7;24408:18;:41::i;:::-;24387:109;;;;-1:-1:-1;;;24387:109:3;;;;;;;;;24507:14;24524:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;24524:32:3;;24582:16;24541:7;24582;:16::i;:::-;24608:19;24630:28;;;:19;:28;;;;;;;;;24673:16;:25;;;;;;:51;;;24566:32;;-1:-1:-1;24630:28:3;;;-1:-1:-1;;;24673:51:3;;;;24669:220;;24774:35;24791:4;24797:2;24801:7;24774:16;:35::i;:::-;:44;24749:129;;;;-1:-1:-1;;;24749:129:3;;;;;;;;;24920:8;;;:81;;-1:-1:-1;;;24920:81:3;;-1:-1:-1;;;;;24920:8:3;;;;:33;;:81;;24954:12;;24968:4;;24974:2;;24978:7;;24987:6;;24995:5;;24920:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24920:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24920:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24920:81:3;;;;;;;;;24899:149;;;;-1:-1:-1;;;24899:149:3;;;;;;;;;25059:32;25073:4;25079:2;25083:7;25059:13;:32::i;:::-;7978:1;;;24270:829;;;:::o;18012:973::-;18075:16;-1:-1:-1;;;;;18125:20:3;;18104:92;;;;-1:-1:-1;;;18104:92:3;;;;;;;;;-1:-1:-1;;;;;18228:26:3;;18207:18;18228:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;18207:57;-1:-1:-1;18278:15:3;18274:704;;18353:16;;;18367:1;18353:16;;;;;;;;;;;;18346:23;;;;;18274:704;18400:23;18440:10;18426:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;18426:25:3;;18400:51;;18465:19;18487:13;:11;:13::i;:::-;18465:35;-1:-1:-1;18514:19:3;18717:1;18702:238;18731:11;18720:7;:22;18702:238;;18777:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;18777:42:3;;;:32;;:42;18773:153;;;18865:7;18843:6;18850:11;18843:19;;;;;;;;;;;;;;;;;:29;18894:13;;;;;18773:153;18744:9;;18702:238;;;18961:6;18954:13;;;;;;;;;8359:78;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;8102:6;;-1:-1:-1;;;8102:6:3;;;;8094:15;;;;;;8416:6;:14;;-1:-1:-1;;;;8416:14:3;;;8359:78::o;3651:34::-;;;;;;;;;;;;;;;-1:-1:-1;;3651:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25748:134::-;25835:39;25852:4;25858:2;25862:7;25835:39;;;;;;;;;;;;:16;:39::i;:::-;25748:134;;;:::o;32099:550::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;32162:14;32179:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;32179:32:3;;32242:16;32196:7;32242;:16::i;:::-;32268:19;32290:28;;;:19;:28;;;;;;32221:37;;-1:-1:-1;32290:28:3;;-1:-1:-1;;;;;32333:20:3;;;;;;;32329:172;;;32394:8;;-1:-1:-1;;;;;32394:8:3;:17;32412:12;32426;:10;:12::i;:::-;32394:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32394:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32394:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;32394:45:3;;;;;;;;;32369:121;;;;-1:-1:-1;;;32369:121:3;;;;;;;;;32532:41;32551:12;:10;:12::i;:::-;32565:7;32532:18;:41::i;:::-;32511:105;;;;-1:-1:-1;;;32511:105:3;;;;;;;;;32627:14;32633:7;32627:5;:14::i;:::-;7978:1;;;32099:550;:::o;1326:21::-;;;-1:-1:-1;;;;;1326:21:3;;:::o;10902:901::-;7961:6;;11175:7;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;11220:7;;11207:9;:20;;11199:29;;;;;;11262:1;11247:12;:16;;;11239:50;;;;-1:-1:-1;;;11239:50:3;;;;;;;;;11321:8;;-1:-1:-1;;;;;11321:8:3;:17;11339:12;11353;:10;:12::i;:::-;11321:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11321:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11321:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11321:45:3;;;;;;;;;11300:129;;;;-1:-1:-1;;;11300:129:3;;;;;;;;;11461:61;11478:9;11489;11500:7;11509:12;11461:16;:61::i;:::-;11440:125;;;;-1:-1:-1;;;11440:125:3;;;;;;;;;11576:15;11594:29;11604:12;:10;:12::i;:::-;11618:4;11594:9;:29::i;:::-;11576:47;;11633:84;11651:7;11660:9;11671;11682:7;11691:25;11633:17;:84::i;:::-;11727:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;11727:43:3;;;;;;11747:7;-1:-1:-1;10902:901:3;;;;;;;;:::o;1437:26::-;;;-1:-1:-1;;;1437:26:3;;;;;:::o;8502:305::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;8720:34;;8678:4;8670:21;;8655:12;;8720:10;;8670:21;;8720:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8701:53:3;;;8772:7;8764:35;;;;-1:-1:-1;;;8764:35:3;;;;;;;;;6569:1;;8502:305::o;19886:152::-;19941:7;19982:20;;;:11;:20;;;;;;-1:-1:-1;;;;;19982:20:3;;19886:152::o;7640:127::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7738:21;;;;:15;;:21;;;;;:::i;19426:241::-;19486:7;-1:-1:-1;;;;;19527:24:3;;19506:96;;;;-1:-1:-1;;;19506:96:3;;;;;;;;;-1:-1:-1;;;;;19620:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;19613:46;19426:241;-1:-1:-1;;19426:241:3:o;1299:21::-;;;-1:-1:-1;;;;;1299:21:3;;:::o;1769:32::-;;;-1:-1:-1;;;;;1769:32:3;;:::o;7461:105::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7545:7;:13;7461:105::o;8203:78::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;8261:6;:13;;-1:-1:-1;;;;8261:13:3;-1:-1:-1;;;8261:13:3;;;8203:78::o;20456:840::-;20521:16;20549:18;20570:21;20580:10;20570:9;:21::i;:::-;20549:42;-1:-1:-1;20605:15:3;20601:689;;20680:16;;;20694:1;20680:16;;;;;;;;;;;;20601:689;20727:23;20767:10;20753:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;20753:25:3;;20727:51;;20792:19;20814:13;:11;:13::i;:::-;20792:35;-1:-1:-1;20841:19:3;21037:1;21022:230;21051:11;21040:7;:22;21022:230;;21097:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;21097:34:3;;;:20;;:34;21093:145;;;21177:7;21155:6;21162:11;21155:19;;;;;;;;;;;;;;;;;:29;21206:13;;;;;21093:145;21064:9;;21022:230;;1999:87:8;2072:7;2065:14;;;;;;;;-1:-1:-1;;2065:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:13;;2065:14;;2072:7;;2065:14;;2072:7;2065:14;;;;;;;;;;;;;;;;;;;;;;;;9873:868:3;7961:6;;10119:7;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;10164:7;;10151:9;:20;;10143:29;;;;;;10206:1;10191:12;:16;;;10183:50;;;;-1:-1:-1;;;10183:50:3;;;;;;;;;10265:8;;-1:-1:-1;;;;;10265:8:3;:17;10283:12;10297;:10;:12::i;:::-;10265:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10265:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10265:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10265:45:3;;;;;;;;;10244:129;;;;-1:-1:-1;;;10244:129:3;;;;;;;;;10405:61;10422:9;10433;10444:7;10453:12;10405:16;:61::i;:::-;10384:125;;;;-1:-1:-1;;;10384:125:3;;;;;;;;;10520:15;10538:23;10548:12;:10;:12::i;:::-;10538:9;:23::i;:::-;10520:41;;10571:84;10589:7;10598:9;10609;10620:7;10629:25;10571:17;:84::i;:::-;10665:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;10665:43:3;;;;;;10685:7;-1:-1:-1;9873:868:3;;;;;;;:::o;23023:286::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;23143:12;:10;:12::i;:::-;-1:-1:-1;;;;;23137:18:3;:2;-1:-1:-1;;;;;23137:18:3;;;23129:57;;;;-1:-1:-1;;;23129:57:3;;;;;;;;;23236:8;23197:18;:32;23216:12;:10;:12::i;:::-;-1:-1:-1;;;;;23197:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;23197:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;23197:47:3;;;;;;;;;;;23274:12;:10;:12::i;:::-;-1:-1:-1;;;;;23259:42:3;;23292:8;23259:42;;;;;;;;;;;;;;;23023:286;;:::o;17272:330::-;-1:-1:-1;;;;;17399:32:3;;;;;;:24;:32;;;;;;;;17370:61;;;;;;;;;;;;;;;;;17342:15;;;;17370:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17370:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17441:17;17474:1;:8;17461:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17441:42:3;-1:-1:-1;17499:6:3;17494:82;17515:1;:8;17511:1;:12;17494:82;;;17551:1;17553;17551:4;;;;;;;;;;;;;;:14;;;17544:1;17546;17544:4;;;;;;;;;;;;;;;;;:21;17525:3;;17494:82;;;-1:-1:-1;17593:1:3;17272:330;-1:-1:-1;;;17272:330:3:o;26604:862::-;7961:6;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;26765:41;26784:12;:10;:12::i;:::-;26798:7;26765:18;:41::i;:::-;26744:109;;;;-1:-1:-1;;;26744:109:3;;;;;;;;;26864:14;26881:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;26881:32:3;;26939:16;26898:7;26939;:16::i;:::-;26965:19;26987:28;;;:19;:28;;;;;;;;;27030:16;:25;;;;;;:51;;;26923:32;;-1:-1:-1;26987:28:3;;;-1:-1:-1;;;27030:51:3;;;;27026:220;;27131:35;27148:4;27154:2;27158:7;27131:16;:35::i;:::-;:44;27106:129;;;;-1:-1:-1;;;27106:129:3;;;;;;;;;27277:8;;;:81;;-1:-1:-1;;;27277:81:3;;-1:-1:-1;;;;;27277:8:3;;;;:33;;:81;;27311:12;;27325:4;;27331:2;;27335:7;;27344:6;;27352:5;;27277:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27277:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27277:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27277:81:3;;;;;;;;;27256:149;;;;-1:-1:-1;;;27256:149:3;;;;;;;;;27416:42;27434:4;27440:2;27444:7;27453:4;27416:17;:42::i;:::-;7978:1;;;26604:862;;;;:::o;7224:144::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;7322:8;:39;;-1:-1:-1;;;;;;7322:39:3;-1:-1:-1;;;;;7322:39:3;;;;;;;;;;7224:144::o;14103:258::-;14161:13;14208:16;14216:7;14208;:16::i;:::-;14187:81;;;;-1:-1:-1;;;14187:81:3;;;;;;;;;14310:15;14327:24;14343:7;14327:15;:24::i;:::-;14293:59;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14293:59:3;;;14279:74;;14103:258;;;:::o;6902:169::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;-1:-1:-1;;;;;6999:22:3;;;6995:70;;7037:6;:17;;-1:-1:-1;;;;;;7037:17:3;-1:-1:-1;;;;;7037:17:3;;;;;6995:70;6902:169;:::o;16100:752::-;16170:14;16194:13;16217:23;16250:16;16276:14;16300:30;16340:19;16398:16;16406:7;16398;:16::i;:::-;16377:81;;;;-1:-1:-1;;;16377:81:3;;;;;;;;;16469:25;;:::i;:::-;16497;;;;:16;:25;;;;;;;;;16469:53;;;;;;;;;-1:-1:-1;;;;;16469:53:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16469:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;16497:25;;16469:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16469:53:3;;;-1:-1:-1;;16469:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16469:53:3;;;;;;;;;;;;;;;-1:-1:-1;16555:28:3;;;:19;:28;;;;;;16615:16;;;;-1:-1:-1;16555:28:3;;;16645:16;16555:28;16645:7;:16::i;:::-;16675:19;;;;16708;;;;16741:17;;;;16772:35;;;;;16594:250;;;;-1:-1:-1;16675:19:3;;-1:-1:-1;16708:19:3;-1:-1:-1;16741:17:3;;-1:-1:-1;16772:35:3;-1:-1:-1;16772:35:3;-1:-1:-1;16100:752:3;-1:-1:-1;;16100:752:3:o;8923:860::-;7961:6;;9165:7;;-1:-1:-1;;;7961:6:3;;;;7960:7;7952:16;;;;;;9210:7;;9197:9;:20;;9189:29;;;;;;9252:1;9237:12;:16;;;9229:50;;;;-1:-1:-1;;;9229:50:3;;;;;;;;;9311:8;;-1:-1:-1;;;;;9311:8:3;:17;9329:12;9343;:10;:12::i;:::-;9311:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9311:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9311:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9311:45:3;;;;;;;;;9290:129;;;;-1:-1:-1;;;9290:129:3;;;;;;;;;9451:61;9468:9;9479;9490:7;9499:12;9451:16;:61::i;:::-;9430:125;;;;-1:-1:-1;;;9430:125:3;;;;;;;;;9566:15;9584:19;9590:12;:10;:12::i;:::-;9584:5;:19::i;6726:169::-;6479:6;;-1:-1:-1;;;;;6479:6:3;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6463:22:3;;6462:52;;;-1:-1:-1;6507:6:3;;-1:-1:-1;;;;;6507:6:3;6491:12;:10;:12::i;:::-;-1:-1:-1;;;;;6491:22:3;;6462:52;6441:118;;;;-1:-1:-1;;;6441:118:3;;;;;;;;;-1:-1:-1;;;;;6823:22:3;;;6819:70;;6861:6;:17;;-1:-1:-1;;;;;6861:17:3;;-1:-1:-1;;;;;;6861:17:3;;;;;;6726:169;:::o;23648:185::-;-1:-1:-1;;;;;23785:30:3;;;23757:4;23785:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;23648:185::o;28673:165::-;28730:4;28768:20;;;:11;:20;;;;;;-1:-1:-1;;;;;28768:20:3;28806:24;;;28673:165::o;5898:90::-;5970:10;5898:90;:::o;1061:112:1:-;1152:14;;1061:112::o;29199:384:3:-;29308:4;29350:16;29358:7;29350;:16::i;:::-;29329:81;;;;-1:-1:-1;;;29329:81:3;;;;;;;;;29421:18;29442:16;29450:7;29442;:16::i;:::-;29421:37;;29488:10;-1:-1:-1;;;;;29477:21:3;:7;-1:-1:-1;;;;;29477:21:3;;:56;;;;29526:7;-1:-1:-1;;;;;29502:31:3;:20;29514:7;29502:11;:20::i;:::-;-1:-1:-1;;;;;29502:31:3;;29477:56;:97;;;;29537:37;29554:10;29566:7;29537:16;:37::i;:::-;29469:106;29199:384;-1:-1:-1;;;;29199:384:3:o;33666:350::-;33813:4;33851:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;33851:32:3;;;;33898:14;;;;;:30;;;33922:6;-1:-1:-1;;;;;33916:12:3;:2;-1:-1:-1;;;;;33916:12:3;;33898:30;33894:115;;;33951:5;33944:12;;;;;33894:115;33994:4;33987:11;;;33666:350;;;;;;:::o;29964:486::-;30091:4;-1:-1:-1;;;;;30071:24:3;:16;30079:7;30071;:16::i;:::-;-1:-1:-1;;;;;30071:24:3;;30050:92;;;;-1:-1:-1;;;30050:92:3;;;;;;;;;-1:-1:-1;;;;;30174:16:3;;30153:87;;;;-1:-1:-1;;;30153:87:3;;;;;;;;;30251:23;30266:7;30251:14;:23::i;:::-;-1:-1:-1;;;;;30285:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;30330:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;30374:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;30374:25:3;-1:-1:-1;;;;;30374:25:3;;;;;;;;;30415:27;;30374:20;;30415:27;;;;;;;29964:486;;;:::o;33539:92::-;33591:32;33597:16;33605:7;33597;:16::i;:::-;33615:7;33591:5;:32::i;14419:461::-;14624:8;;;:63;;-1:-1:-1;;;14624:63:3;;14586:4;;-1:-1:-1;;;;;14624:8:3;;;;:38;;:63;;14663:12;;14677:9;;14624:63;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14624:63:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14624:63:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14624:63:3;;;;;;;;;14603:145;;;;-1:-1:-1;;;14603:145:3;;;;;;;;;14790:9;14780:19;;:7;:19;;;14759:91;;;;-1:-1:-1;;;14759:91:3;;;;;;;;;-1:-1:-1;14868:4:3;14419:461;;;;;;:::o;12997:301::-;13065:7;13085:15;13103:9;13109:2;13103:5;:9::i;:::-;13085:27;;13144:53;13175:1;13179:2;13183:7;13192:4;13144:22;:53::i;:::-;13123:142;;;;-1:-1:-1;;;13123:142:3;;;;;;;;15307:786;15529:16;15537:7;15529;:16::i;:::-;15508:81;;;;-1:-1:-1;;;15508:81:3;;;;;;;;;15600:25;;:::i;:::-;15628:257;;;;;;;;15667:12;:10;:12::i;:::-;-1:-1:-1;;;;;15628:257:3;;;;;15712:9;15628:257;;;;15754:9;15628:257;;;;;;15794:7;15628:257;;;;;;15848:25;15628:257;;;;;15600:285;;15924:9;15896:16;:25;15913:7;15896:25;;;;;;;;;;;:37;;;;;;;;;;;;;-1:-1:-1;;;;;15896:37:3;;;;;-1:-1:-1;;;;;15896:37:3;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15896:37:3;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15896:37:3;;;;;;;;-1:-1:-1;;15896:37:3;;;;;;;;;;;;;;-1:-1:-1;;15896:37:3;-1:-1:-1;;;15896:37:3;;;;;;;;;;15949;15976:9;15949:26;:37::i;:::-;15944:142;;16002:24;:38;16027:12;:10;:12::i;:::-;-1:-1:-1;;;;;16002:38:3;;;;;;;;;;;;;;;-1:-1:-1;16002:38:3;;;16047:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;16002:73:3;;;;;;;;;;;23:18:-1;;16002:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;15307:786;;;;;;:::o;12297:136::-;12346:7;12366:15;12384:17;12394:2;12384:17;;;;;;;;;;;;:9;:17::i;28170:308::-;28291:32;28305:4;28311:2;28315:7;28291:13;:32::i;:::-;28355:47;28378:4;28384:2;28388:7;28397:4;28355:22;:47::i;:::-;28334:136;;;;-1:-1:-1;;;28334:136:3;;;;;;;;34258:472;34315:27;34358:7;34354:48;;-1:-1:-1;34381:10:3;;;;;;;;;;;;-1:-1:-1;;;34381:10:3;;;;;;34354:48;34420:2;34411:6;34450:66;34457:6;;34450:66;;34479:5;;34503:2;34498:7;;;;34450:66;;;34525:17;34555:3;34545:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;34545:14:3;87:34:-1;135:17;;-1:-1;34545:14:3;-1:-1:-1;34525:34:3;-1:-1:-1;;;34578:7:3;;34595:100;34602:7;;34595:100;;34658:2;34653;:7;34648:2;:12;34637:25;;34625:4;34630:3;;;;;;;34625:9;;;;;;;;;;;:37;;;;;;;;;;-1:-1:-1;34682:2:3;34676:8;;;;34595:100;;;-1:-1:-1;34718:4:3;34258:472;-1:-1:-1;;;;34258:472:3:o;13484:398::-;13529:7;-1:-1:-1;;;;;13557:16:3;;13549:49;;;;-1:-1:-1;;;13549:49:3;;;;;;;;;13609:21;:9;:19;:21::i;:::-;13640:15;13658:19;:9;:17;:19::i;:::-;13688:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;13688:25:3;-1:-1:-1;;;;;13688:25:3;;;;;;;;13723:21;;:17;:21;;;;;13688:20;;-1:-1:-1;13723:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;13766:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;13816:33;;13841:7;;-1:-1:-1;;;;;13816:33:3;;;13833:1;;13816:33;;13833:1;;13816:33;13867:7;13484:398;-1:-1:-1;;13484:398:3:o;31557:173::-;31657:1;31621:24;;;:15;:24;;;;;;-1:-1:-1;;;;;31621:24:3;:38;31617:106;;31710:1;31675:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;31675:37:3;;;31557:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;32923:435:3:-;33036:10;-1:-1:-1;;;;;33016:30:3;:16;33024:7;33016;:16::i;:::-;-1:-1:-1;;;;;33016:30:3;;32995:94;;;;-1:-1:-1;;;32995:94:3;;;;;;;;;33100:23;33115:7;33100:14;:23::i;:::-;-1:-1:-1;;;;;33134:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;33216:1;33185:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;33185:33:3;;;;;;33268:16;:25;;;;;33261:32;;;;;;;33268:25;33261:32;33185:33;33261:32;;33216:1;33261:32;:::i;:::-;-1:-1:-1;33261:32:3;;;;-1:-1:-1;;33261:32:3;;;33309:41;;33342:7;;33261:32;;-1:-1:-1;;;;;33309:41:3;;;;;33261:32;;33309:41;32923:435;;:::o;31038:357::-;31166:4;31192:15;:2;-1:-1:-1;;;;;31192:13:3;;:15::i;:::-;31187:58;;-1:-1:-1;31230:4:3;31223:11;;31187:58;31255:13;31287:2;-1:-1:-1;;;;;31271:36:3;;31308:12;:10;:12::i;:::-;31322:4;31328:7;31337:4;31271:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31271:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31271:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;31271:71:3;;;;;;;;;-1:-1:-1;;;;;;31360:26:3;-1:-1:-1;;;31360:26:3;;-1:-1:-1;;31038:357:3;;;;;;:::o;14887:413::-;15057:10;14986:4;15032:36;;;:24;:36;;;;;;;;15003:65;;;;;;;;;;;;;;;;;:26;;14986:4;;15003:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15003:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15003:65:3;;-1:-1:-1;15078:15:3;;-1:-1:-1;15078:15:3;;-1:-1:-1;;15111:155:3;15132:1;:8;15128:1;:12;15111:155;;;15165:39;15178:9;15189:1;15191;15189:4;;;;;;;;;;;;;;:14;;;15165:12;:39::i;:::-;15161:95;;;15237:4;15224:17;;15161:95;15142:3;;15111:155;;1276:134:10;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;34022:230:3:-;34147:4;34239:1;34221:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34221:21:3;;;34211:32;;;;;;34203:1;34185:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34185:21:3;;;34175:32;;;;;;:68;34167:78;;34022:230;;;;:::o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;850:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1582:130;1649:20;;1674:33;1649:20;1674:33;;1719:128;1785:20;;1810:32;1785:20;1810:32;;1854:128;1920:20;;1945:32;1920:20;1945:32;;1989:241;;2093:2;2081:9;2072:7;2068:23;2064:32;2061:2;;;2109:1;2106;2099:12;2061:2;2144:1;2161:53;2206:7;2186:9;2161:53;;2237:366;;;2358:2;2346:9;2337:7;2333:23;2329:32;2326:2;;;2374:1;2371;2364:12;2326:2;2409:1;2426:53;2471:7;2451:9;2426:53;;;2416:63;;2388:97;2516:2;2534:53;2579:7;2570:6;2559:9;2555:22;2534:53;;;2524:63;;2495:98;2320:283;;;;;;2610:491;;;;2748:2;2736:9;2727:7;2723:23;2719:32;2716:2;;;2764:1;2761;2754:12;2716:2;2799:1;2816:53;2861:7;2841:9;2816:53;;;2806:63;;2778:97;2906:2;2924:53;2969:7;2960:6;2949:9;2945:22;2924:53;;;2914:63;;2885:98;3014:2;3032:53;3077:7;3068:6;3057:9;3053:22;3032:53;;;3022:63;;2993:98;2710:391;;;;;;3108:721;;;;;3272:3;3260:9;3251:7;3247:23;3243:33;3240:2;;;3289:1;3286;3279:12;3240:2;3324:1;3341:53;3386:7;3366:9;3341:53;;;3331:63;;3303:97;3431:2;3449:53;3494:7;3485:6;3474:9;3470:22;3449:53;;;3439:63;;3410:98;3539:2;3557:53;3602:7;3593:6;3582:9;3578:22;3557:53;;;3547:63;;3518:98;3675:2;3664:9;3660:18;3647:32;3699:18;3691:6;3688:30;3685:2;;;3731:1;3728;3721:12;3685:2;3751:62;3805:7;3796:6;3785:9;3781:22;3751:62;;;3741:72;;3626:193;3234:595;;;;;;;;3836:360;;;3954:2;3942:9;3933:7;3929:23;3925:32;3922:2;;;3970:1;3967;3960:12;3922:2;4005:1;4022:53;4067:7;4047:9;4022:53;;;4012:63;;3984:97;4112:2;4130:50;4172:7;4163:6;4152:9;4148:22;4130:50;;4203:366;;;4324:2;4312:9;4303:7;4299:23;4295:32;4292:2;;;4340:1;4337;4330:12;4292:2;4375:1;4392:53;4437:7;4417:9;4392:53;;;4382:63;;4354:97;4482:2;4500:53;4545:7;4536:6;4525:9;4521:22;4500:53;;4576:257;;4688:2;4676:9;4667:7;4663:23;4659:32;4656:2;;;4704:1;4701;4694:12;4656:2;4739:1;4756:61;4809:7;4789:9;4756:61;;4840:239;;4943:2;4931:9;4922:7;4918:23;4914:32;4911:2;;;4959:1;4956;4949:12;4911:2;4994:1;5011:52;5055:7;5035:9;5011:52;;5086:261;;5200:2;5188:9;5179:7;5175:23;5171:32;5168:2;;;5216:1;5213;5206:12;5168:2;5251:1;5268:63;5323:7;5303:9;5268:63;;5354:347;;5468:2;5456:9;5447:7;5443:23;5439:32;5436:2;;;5484:1;5481;5474:12;5436:2;5519:31;;5570:18;5559:30;;5556:2;;;5602:1;5599;5592:12;5556:2;5622:63;5677:7;5668:6;5657:9;5653:22;5622:63;;5708:837;;;;;;5884:3;5872:9;5863:7;5859:23;5855:33;5852:2;;;5901:1;5898;5891:12;5852:2;5936:31;;5987:18;5976:30;;5973:2;;;6019:1;6016;6009:12;5973:2;6039:63;6094:7;6085:6;6074:9;6070:22;6039:63;;;6029:73;;5915:193;6139:2;6157:52;6201:7;6192:6;6181:9;6177:22;6157:52;;;6147:62;;6118:97;6246:2;6264:52;6308:7;6299:6;6288:9;6284:22;6264:52;;;6254:62;;6225:97;6353:2;6371:50;6413:7;6404:6;6393:9;6389:22;6371:50;;;6361:60;;6332:95;6458:3;6477:52;6521:7;6512:6;6501:9;6497:22;6477:52;;;6467:62;;6437:98;5846:699;;;;;;;;;6552:1067;;;;;;;6754:3;6742:9;6733:7;6729:23;6725:33;6722:2;;;6771:1;6768;6761:12;6722:2;6806:31;;6857:18;6846:30;;6843:2;;;6889:1;6886;6879:12;6843:2;6909:63;6964:7;6955:6;6944:9;6940:22;6909:63;;;6899:73;;6785:193;7009:2;7027:52;7071:7;7062:6;7051:9;7047:22;7027:52;;;7017:62;;6988:97;7116:2;7134:52;7178:7;7169:6;7158:9;7154:22;7134:52;;;7124:62;;7095:97;7223:2;7241:50;7283:7;7274:6;7263:9;7259:22;7241:50;;;7231:60;;7202:95;7328:3;7347:52;7391:7;7382:6;7371:9;7367:22;7347:52;;;7337:62;;7307:98;7464:3;7453:9;7449:19;7436:33;7489:18;7481:6;7478:30;7475:2;;;7521:1;7518;7511:12;7475:2;7541:62;7595:7;7586:6;7575:9;7571:22;7541:62;;;7531:72;;7415:194;6716:903;;;;;;;;;7626:241;;7730:2;7718:9;7709:7;7705:23;7701:32;7698:2;;;7746:1;7743;7736:12;7698:2;7781:1;7798:53;7843:7;7823:9;7798:53;;7875:181;;7988:62;8046:3;8038:6;7988:62;;8065:173;;8152:46;8194:3;8186:6;8152:46;;;-1:-1;;8227:4;8218:14;;8145:93;8246:113;8329:24;8347:5;8329:24;;;8324:3;8317:37;8311:48;;;8395:896;;8552:60;8606:5;8552:60;;;8625:92;8710:6;8705:3;8625:92;;;8618:99;;8740:3;8782:4;8774:6;8770:17;8765:3;8761:27;8809:62;8865:5;8809:62;;;8891:7;8919:1;8904:348;8929:6;8926:1;8923:13;8904:348;;;8991:9;8985:4;8981:20;8976:3;8969:33;9036:6;9030:13;9058:76;9129:4;9114:13;9058:76;;;9050:84;;9151:66;9210:6;9151:66;;;9240:4;9231:14;;;;;9141:76;-1:-1;;8951:1;8944:9;8904:348;;;-1:-1;9265:4;;8531:760;-1:-1;;;;;;;8531:760;9330:690;;9475:54;9523:5;9475:54;;;9542:86;9621:6;9616:3;9542:86;;;9535:93;;9649:56;9699:5;9649:56;;;9725:7;9753:1;9738:260;9763:6;9760:1;9757:13;9738:260;;;9830:6;9824:13;9851:63;9910:3;9895:13;9851:63;;;9844:70;;9931:60;9984:6;9931:60;;;9921:70;-1:-1;;9785:1;9778:9;9738:260;;;-1:-1;10011:3;;9454:566;-1:-1;;;;;9454:566;10028:104;10105:21;10120:5;10105:21;;10139:343;;10249:38;10281:5;10249:38;;;10299:70;10362:6;10357:3;10299:70;;;10292:77;;10374:52;10419:6;10414:3;10407:4;10400:5;10396:16;10374:52;;;10447:29;10469:6;10447:29;;;10438:39;;;;10229:253;-1:-1;;;10229:253;10489:174;10596:61;10651:5;10596:61;;11024:360;;11154:39;11187:5;11154:39;;;11205:89;11287:6;11282:3;11205:89;;;11198:96;;11299:52;11344:6;11339:3;11332:4;11325:5;11321:16;11299:52;;;11363:16;;;;;11134:250;-1:-1;;11134:250;12088:884;;12225:5;12219:12;12259:1;12248:9;12244:17;12272:1;12267:268;;;;12546:1;12541:425;;;;12237:729;;12267:268;12345:4;12341:1;12330:9;12326:17;12322:28;12364:89;12446:6;12441:3;12364:89;;;-1:-1;;12472:25;;12460:38;;12357:96;-1:-1;12512:16;;;-1:-1;12267:268;;12541:425;12610:1;12599:9;12595:17;12626:89;12708:6;12703:3;12626:89;;;12619:96;;12737:38;12769:5;12737:38;;;12791:1;12799:130;12813:6;12810:1;12807:13;12799:130;;;12872:14;;12859:11;;;12852:35;12919:1;12906:15;;;;12835:4;12828:12;12799:130;;;-1:-1;;12943:16;;;-1:-1;12237:729;;12195:777;;;;;;12981:364;;13141:67;13205:2;13200:3;13141:67;;;13241:66;13221:87;;13336:2;13327:12;;13127:218;-1:-1;;13127:218;13354:364;;13514:67;13578:2;13573:3;13514:67;;;13614:66;13594:87;;13709:2;13700:12;;13500:218;-1:-1;;13500:218;13727:465;;13887:67;13951:2;13946:3;13887:67;;;13987:66;13967:87;;-1:-1;;;14083:2;14074:12;;14067:88;14183:2;14174:12;;13873:319;-1:-1;;13873:319;14201:364;;14361:67;14425:2;14420:3;14361:67;;;14461:66;14441:87;;14556:2;14547:12;;14347:218;-1:-1;;14347:218;14574:364;;14734:67;14798:2;14793:3;14734:67;;;14834:66;14814:87;;14929:2;14920:12;;14720:218;-1:-1;;14720:218;14947:364;;15107:67;15171:2;15166:3;15107:67;;;15207:66;15187:87;;15302:2;15293:12;;15093:218;-1:-1;;15093:218;15320:364;;15480:67;15544:2;15539:3;15480:67;;;15580:66;15560:87;;15675:2;15666:12;;15466:218;-1:-1;;15466:218;15693:364;;15853:67;15917:2;15912:3;15853:67;;;15953:66;15933:87;;16048:2;16039:12;;15839:218;-1:-1;;15839:218;16066:465;;16226:67;16290:2;16285:3;16226:67;;;16326:66;16306:87;;-1:-1;;;16422:2;16413:12;;16406:88;16522:2;16513:12;;16212:319;-1:-1;;16212:319;16540:364;;16700:67;16764:2;16759:3;16700:67;;;16800:66;16780:87;;16895:2;16886:12;;16686:218;-1:-1;;16686:218;16913:364;;17073:67;17137:2;17132:3;17073:67;;;17173:66;17153:87;;17268:2;17259:12;;17059:218;-1:-1;;17059:218;17286:364;;17446:67;17510:2;17505:3;17446:67;;;17546:66;17526:87;;17641:2;17632:12;;17432:218;-1:-1;;17432:218;17659:364;;17819:67;17883:2;17878:3;17819:67;;;17919:66;17899:87;;18014:2;18005:12;;17805:218;-1:-1;;17805:218;18032:296;;18209:83;18290:1;18285:3;18209:83;;18337:364;;18497:67;18561:2;18556:3;18497:67;;;18597:66;18577:87;;18692:2;18683:12;;18483:218;-1:-1;;18483:218;18710:364;;18870:67;18934:2;18929:3;18870:67;;;18970:66;18950:87;;19065:2;19056:12;;18856:218;-1:-1;;18856:218;19083:465;;19243:67;19307:2;19302:3;19243:67;;;19343:66;19323:87;;-1:-1;;;19439:2;19430:12;;19423:88;19539:2;19530:12;;19229:319;-1:-1;;19229:319;19557:364;;19717:67;19781:2;19776:3;19717:67;;;19817:66;19797:87;;19912:2;19903:12;;19703:218;-1:-1;;19703:218;19930:364;;20090:67;20154:2;20149:3;20090:67;;;20190:66;20170:87;;20285:2;20276:12;;20076:218;-1:-1;;20076:218;20302:103;20375:24;20393:5;20375:24;;20532:110;20613:23;20630:5;20613:23;;20649:110;20730:23;20747:5;20730:23;;20766:266;;20912:95;21003:3;20994:6;20912:95;;21039:421;;21230:92;21318:3;21309:6;21230:92;;;21223:99;;21340:95;21431:3;21422:6;21340:95;;21467:370;;21665:147;21808:3;21665:147;;21844:213;21962:2;21947:18;;21976:71;21951:9;22020:6;21976:71;;22064:947;22358:3;22343:19;;22373:71;22347:9;22417:6;22373:71;;;22455:72;22523:2;22512:9;22508:18;22499:6;22455:72;;;22575:9;22569:4;22565:20;22560:2;22549:9;22545:18;22538:48;22600:78;22673:4;22664:6;22600:78;;;22592:86;;22689:70;22755:2;22744:9;22740:18;22731:6;22689:70;;;22770:71;22836:3;22825:9;22821:19;22812:6;22770:71;;;22852:67;22914:3;22903:9;22899:19;22890:6;22852:67;;;22930:71;22996:3;22985:9;22981:19;22972:6;22930:71;;;22329:682;;;;;;;;;;;23018:631;23238:3;23223:19;;23253:71;23227:9;23297:6;23253:71;;;23335:72;23403:2;23392:9;23388:18;23379:6;23335:72;;;23418;23486:2;23475:9;23471:18;23462:6;23418:72;;;23538:9;23532:4;23528:20;23523:2;23512:9;23508:18;23501:48;23563:76;23634:4;23625:6;23563:76;;;23555:84;23209:440;-1:-1;;;;;;23209:440;23656:385;23836:2;23850:47;;;23821:18;;23911:120;23821:18;24017:6;23911:120;;24048:361;24216:2;24230:47;;;24201:18;;24291:108;24201:18;24385:6;24291:108;;24416:201;24528:2;24513:18;;24542:65;24517:9;24580:6;24542:65;;24624:261;24766:2;24751:18;;24780:95;24755:9;24848:6;24780:95;;24892:293;25026:2;25040:47;;;25011:18;;25101:74;25011:18;25161:6;25101:74;;25500:407;25691:2;25705:47;;;25676:18;;25766:131;25676:18;25766:131;;25914:407;26105:2;26119:47;;;26090:18;;26180:131;26090:18;26180:131;;26328:407;26519:2;26533:47;;;26504:18;;26594:131;26504:18;26594:131;;26742:407;26933:2;26947:47;;;26918:18;;27008:131;26918:18;27008:131;;27156:407;27347:2;27361:47;;;27332:18;;27422:131;27332:18;27422:131;;27570:407;27761:2;27775:47;;;27746:18;;27836:131;27746:18;27836:131;;27984:407;28175:2;28189:47;;;28160:18;;28250:131;28160:18;28250:131;;28398:407;28589:2;28603:47;;;28574:18;;28664:131;28574:18;28664:131;;28812:407;29003:2;29017:47;;;28988:18;;29078:131;28988:18;29078:131;;29226:407;29417:2;29431:47;;;29402:18;;29492:131;29402:18;29492:131;;29640:407;29831:2;29845:47;;;29816:18;;29906:131;29816:18;29906:131;;30054:407;30245:2;30259:47;;;30230:18;;30320:131;30230:18;30320:131;;30468:407;30659:2;30673:47;;;30644:18;;30734:131;30644:18;30734:131;;30882:407;31073:2;31087:47;;;31058:18;;31148:131;31058:18;31148:131;;31296:407;31487:2;31501:47;;;31472:18;;31562:131;31472:18;31562:131;;31710:407;31901:2;31915:47;;;31886:18;;31976:131;31886:18;31976:131;;32124:407;32315:2;32329:47;;;32300:18;;32390:131;32300:18;32390:131;;32538:407;32729:2;32743:47;;;32714:18;;32804:131;32714:18;32804:131;;32952:213;33070:2;33055:18;;33084:71;33059:9;33128:6;33084:71;;33172:209;33288:2;33273:18;;33302:69;33277:9;33344:6;33302:69;;33388:320;33532:2;33517:18;;33546:69;33521:9;33588:6;33546:69;;;33626:72;33694:2;33683:9;33679:18;33670:6;33626:72;;33715:767;33971:3;33956:19;;33986:69;33960:9;34028:6;33986:69;;;34066:72;34134:2;34123:9;34119:18;34110:6;34066:72;;;34149;34217:2;34206:9;34202:18;34193:6;34149:72;;;34232;34300:2;34289:9;34285:18;34276:6;34232:72;;;34315:73;34383:3;34372:9;34368:19;34359:6;34315:73;;;34399;34467:3;34456:9;34452:19;34443:6;34399:73;;;33942:540;;;;;;;;;;34489:408;34653:2;34638:18;;34667:69;34642:9;34709:6;34667:69;;;34784:9;34778:4;34774:20;34769:2;34758:9;34754:18;34747:48;34809:78;34882:4;34873:6;34809:78;;34904:256;34966:2;34960:9;34992:17;;;35067:18;35052:34;;35088:22;;;35049:62;35046:2;;;35124:1;35121;35114:12;35046:2;35140;35133:22;34944:216;;-1:-1;34944:216;35167:321;;35310:18;35302:6;35299:30;35296:2;;;35342:1;35339;35332:12;35296:2;-1:-1;35473:4;35409;35386:17;;;;-1:-1;;35382:33;35463:15;;35233:255;35824:157;35954:4;35945:14;;35902:79;36146:158;;36241:14;;;36283:4;36270:18;;;36200:104;36311:143;36420:12;;36391:63;37224:184;37348:19;;;37397:4;37388:14;;37341:67;38415:91;;38477:24;38495:5;38477:24;;38513:85;38579:13;38572:21;;38555:43;38605:144;-1:-1;;;;;;38666:78;;38649:100;38756:121;-1:-1;;;;;38818:54;;38801:76;38963:88;39035:10;39024:22;;39007:44;39058:92;39130:14;39119:26;;39102:48;39157:169;;39260:61;39315:5;39260:61;;39473:145;39554:6;39549:3;39544;39531:30;-1:-1;39610:1;39592:16;;39585:27;39524:94;39627:268;39692:1;39699:101;39713:6;39710:1;39707:13;39699:101;;;39780:11;;;39774:18;39761:11;;;39754:39;39735:2;39728:10;39699:101;;;39815:6;39812:1;39809:13;39806:2;;;-1:-1;;39880:1;39862:16;;39855:27;39676:219;39903:97;39991:2;39971:14;-1:-1;;39967:28;;39951:49;40008:117;40077:24;40095:5;40077:24;;;40070:5;40067:35;40057:2;;40116:1;40113;40106:12;40132:111;40198:21;40213:5;40198:21;;40250:115;40318:23;40335:5;40318:23;;40372:117;40441:24;40459:5;40441:24;;40496:115;40564:23;40581:5;40564:23;;40618:115;40686:23;40703:5;40686:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/mspt/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/mspt/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2264
      ]
    },
    "id": 2265,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2208,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2209,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/mspt/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2210,
        "nodeType": "ImportDirective",
        "scope": 2265,
        "sourceUnit": 2055,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2211,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2054,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2054",
                "typeString": "contract ERC721"
              }
            },
            "id": 2212,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2054,
          2064,
          2167
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2264,
        "linearizedBaseContracts": [
          2264,
          2054,
          2167,
          142,
          2064
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2214,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2264,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2213,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2216,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2264,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2215,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2219,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2264,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2217,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2246,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2228,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2229,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2221,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2231,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2232,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2216,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2233,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2223,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2237,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2219,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2236,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2243,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2264",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 381,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2247,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2221,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2220,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2223,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2264,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2254,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2252,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2214,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2251,
                  "id": 2253,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2264,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2262,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2260,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2216,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2259,
                  "id": 2261,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2257,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2264,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2265,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/mspt/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2264
      ]
    },
    "id": 2265,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2208,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2209,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/mspt/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2210,
        "nodeType": "ImportDirective",
        "scope": 2265,
        "sourceUnit": 2055,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2211,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2054,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2054",
                "typeString": "contract ERC721"
              }
            },
            "id": 2212,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2054,
          2064,
          2167
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2264,
        "linearizedBaseContracts": [
          2264,
          2054,
          2167,
          142,
          2064
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2214,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2264,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2213,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2216,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2264,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2215,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2219,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2264,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2217,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2246,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2228,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2229,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2221,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2231,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2232,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2216,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2233,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2223,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2237,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2219,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2236,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2243,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2264",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 381,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2247,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2221,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2220,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2223,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2264,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2254,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2252,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2214,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2251,
                  "id": 2253,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2264,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2262,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2260,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2216,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2259,
                  "id": 2261,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2257,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2264,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2265,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1614808561913": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2121C95A5D19128F88126f5a486fB2a944f6D545",
      "transactionHash": "0xe7600eaf39a538b2a9c8285a58e7b1b6c3a89edf0f3f52bf41ace11663e19c68"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-03T23:28:17.608Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,uint48,uint48,bool,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,uint48,uint48,bool,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,uint48,uint48,bool,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID"
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "updateTokenURIBaseURL(string)": {
        "details": "Update the base url for all tokenURI's"
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}