{
  "contractName": "Microsponsors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToFederationId",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokensMintedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract DeployedRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateMintFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "tokenMinterContentIds",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "safeMintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenTimeSlot",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contentId",
          "type": "string"
        },
        {
          "internalType": "uint48",
          "name": "startTime",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "endTime",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "isSecondaryTradingEnabled",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "federationId",
          "type": "uint32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToFederationId\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokensMintedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract DeployedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateMintFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"tokenMinterContentIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenTimeSlot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentId\",\"type\":\"string\"},{\"internalType\":\"uint48\",\"name\":\"startTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"endTime\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"isSecondaryTradingEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"federationId\",\"type\":\"uint32\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"tokenOwner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Customized for MicrosponsorsBurns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned\"}},\"constructor\":{\"details\":\"Constructor function\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given token owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"tokenOwner\":\"token owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the token owner\"},\"mint(string,uint48,uint48,bool,uint32)\":{\"details\":\"Function to mint tokens.\",\"return\":\"tokenId\"},\"mintWithTokenURI(string,uint48,uint48,bool,uint32,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by contract owner to pause minting and transfers.\"},\"safeMint(string,uint48,uint48,bool,uint32)\":{\"details\":\"Function to safely mint tokens.\",\"return\":\"tokenId\"},\"safeMint(string,uint48,uint48,bool,uint32,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check.\"},\"return\":\"tokenId\"},\"safeMintWithTokenURI(string,uint48,uint48,bool,uint32,string)\":{\"params\":{\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"tokenId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenMinterContentIds(address)\":{\"details\":\"Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"uint256 ID of the token to query\"},\"return\":\"URI for a given token ID.\"},\"tokensMintedBy(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\"},\"tokensOfOwner(address)\":{\"details\":\"This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).\",\"params\":{\"tokenOwner\":\"The owner whose tokens we are interested in.\"}},\"totalSupply()\":{\"details\":\"Gets the total number of tokens ever minted.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership1(address)\":{\"details\":\"Transfer owner (admin) functions to another address\",\"params\":{\"newOwner\":\"Address of new owner/ admin of contract\"}},\"unpause()\":{\"details\":\"Called by contract owner to unpause minting and transfers.\"},\"updateMintFee(uint256)\":{\"details\":\"Update the fee (in wei) charged for minting a single token\"},\"updateRegistryAddress(address)\":{\"details\":\"Update contract address for Microsponsors Registry contract\",\"params\":{\"newAddress\":\"where the Registry contract lives\"}},\"withdrawBalance()\":{\"details\":\"Admin withdraws entire balance from contract.\"}}},\"userdoc\":{\"methods\":{\"tokenURI(uint256)\":{\"notice\":\"Throws if the token ID does not exist. May return an empty string.\"},\"tokensMintedBy(address)\":{\"notice\":\"Return all the Token IDs minted by a given account.\"}},\"notice\":\"Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\"}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":\"Microsponsors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/erc-721/contracts/Address.sol\":{\"keccak256\":\"0xb9c8ec62a75480fb84d7b7ddb457fab3e198c8cd1e080097227c5a0c307bded0\",\"urls\":[\"bzz-raw://997a59cc670e9ec614c3b656fe7c9802ee08398c021882202b1ba66860b3b411\",\"dweb:/ipfs/QmS7eyFmB2uPsAGvGTp4wNkdesSDbsyYmwTtXZRMgjJQLY\"]},\"/Users/lauren/github/erc-721/contracts/Counters.sol\":{\"keccak256\":\"0xf46bdae61a952c7c88b0e14b2b8a36323124d3ae6c1809b1cb6c8e0ee1ef52bd\",\"urls\":[\"bzz-raw://9df021130f1d2a259d3ecdbb1c4119d9d8e343d099c71c7c419b80dc224dcf5c\",\"dweb:/ipfs/QmbvGt28QyqV5eyEx63JKqmnVX23pKUQtUky4Ddgofw5T8\"]},\"/Users/lauren/github/erc-721/contracts/ERC165.sol\":{\"keccak256\":\"0x3a7970619ff17158d3906f2d74b2fa9896e698368ffe4bbacf4c61a821de5a89\",\"urls\":[\"bzz-raw://9abeddaf2555a3d4cc13e7988bee67ea60ce72ac70e27ce3c4120f873b0528c8\",\"dweb:/ipfs/QmVxW1BRWhpVLtecgN41Cx2XTNdiVAVbDUKQd6V1YTv6Qc\"]},\"/Users/lauren/github/erc-721/contracts/ERC721.sol\":{\"keccak256\":\"0xd45994cd09139c1eabf3a3399c4cbc5ef8914c6a739667507db34f8409da5f8c\",\"urls\":[\"bzz-raw://d610958caaf71561291e7a5f586a51d87ef6f555c4c4ada2972b33a044b279ee\",\"dweb:/ipfs/QmSwBkWpgYNgxrpWULSCX2HdV5A4seoa3FjHRkcxEe2fRF\"]},\"/Users/lauren/github/erc-721/contracts/IERC165.sol\":{\"keccak256\":\"0xdf77f8206b88bee3fab2197feea6db1d30d88799485b2c8f94de4ccfc5130f51\",\"urls\":[\"bzz-raw://652a4382cf6ce8b5b950a7e10ad3acf2756c9b57b6dc97a453cb8de365e2dd74\",\"dweb:/ipfs/QmdQjC5k9RSMYxC1bnHwRvUCemsrx59wWVT8gBG85xmA1y\"]},\"/Users/lauren/github/erc-721/contracts/IERC721.sol\":{\"keccak256\":\"0xdcea19a3fba19d9c18bea199c2c4882f533680a7c8ff481978aef4a959c1a0d4\",\"urls\":[\"bzz-raw://80da325ae2d4945672f28bae883a91f58f4c93caacbc448573eb5e6d5fb4227b\",\"dweb:/ipfs/QmdwreDnciyDjRTMXcBnr7HX7AGPtjiejUmdVtEQCEXYhC\"]},\"/Users/lauren/github/erc-721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x2aa068c070f5be5b5a307dc7ef86b021afc38a32cee1412ee4a790e5d01f61f5\",\"urls\":[\"bzz-raw://44130d2414de808036767524a3184b3820e2c928452e1ec41f70471490e73326\",\"dweb:/ipfs/QmXA7bbDDLmNPQH3r7ERYGXWUNdDNnUYWDPnDwbD98kUy2\"]},\"/Users/lauren/github/erc-721/contracts/Microsponsors.sol\":{\"keccak256\":\"0x45fb6eddb422590ad9eec286d07eae2bd45db219aa127066eb23c7e3da4d0029\",\"urls\":[\"bzz-raw://840173239762fa8808437c611cdb3858b2d115a1a97153d330f6ed5ab4ff6412\",\"dweb:/ipfs/QmZ53b1m2kAA6PKotGU4htzNVFzRKe6MyWVfpKBpaYPMij\"]},\"/Users/lauren/github/erc-721/contracts/SafeMath.sol\":{\"keccak256\":\"0xb2add257d778d75e1cd810e86641a556fbffd33abde4d87f8598fec4d42a724d\",\"urls\":[\"bzz-raw://edbcc35e8e58498cc504217afa8a738e9882da3de3709d0889473668b189aaf2\",\"dweb:/ipfs/QmYTTRVrJoYmjLJus9JRzFcCWEJVwdV6cSqYK8fS7K2NHj\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff60a01b19169055655af3107a40006003553480156200002857600080fd5b5060405162003eed38038062003eed8339810160408190526200004b91620003ff565b6200007f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000b37f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b620000c66001600160e01b036200023416565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000f062000234565b600280546001600160a01b0319166001600160a01b039290921691909117905582516200012590600f906020860190620002ee565b5081516200013b906010906020850190620002ee565b50620001707f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b036200018f16565b62000186816200023960201b620018a21760201c565b505050620005d3565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee90620004f8565b60405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b6001546001600160a01b0316620002586001600160e01b036200023416565b6001600160a01b031614806200029357506002546001600160a01b0316620002886001600160e01b036200023416565b6001600160a01b0316145b620002cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ee906200050a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033157805160ff191683800117855562000361565b8280016001018555821562000361579182015b828111156200036157825182559160200191906001019062000344565b506200036f92915062000373565b5090565b6200023691905b808211156200036f57600081556001016200037a565b80516200039d81620005b9565b92915050565b600082601f830112620003b557600080fd5b8151620003cc620003c68262000543565b6200051c565b91508082526020830160208301858383011115620003e957600080fd5b620003f683828462000586565b50505092915050565b6000806000606084860312156200041557600080fd5b83516001600160401b038111156200042c57600080fd5b6200043a86828701620003a3565b93505060208401516001600160401b038111156200045757600080fd5b6200046586828701620003a3565b9250506040620004788682870162000390565b9150509250925092565b600062000491601c836200056b565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620004cc6013836200056b565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b602080825281016200039d8162000482565b602080825281016200039d81620004bd565b6040518181016001600160401b03811182821017156200053b57600080fd5b604052919050565b60006001600160401b038211156200055a57600080fd5b506020601f91909101601f19160190565b90815260200190565b60006001600160a01b0382166200039d565b60005b83811015620005a357818101518382015260200162000589565b83811115620005b3576000848401525b50505050565b620005c48162000574565b8114620005d057600080fd5b50565b61390a80620005e36000396000f3fe60806040526004361061021a5760003560e01c80637368891411610123578063b88d4fde116100ab578063e2b375a91161006f578063e2b375a9146105e5578063e5c2492414610605578063e89fecc014610638578063e982d5a91461064b578063e985e9c51461066b5761021a565b8063b88d4fde1461055f578063bd5c41851461057f578063c57a882514610592578063c87b56dd146105b2578063cd1ed24a146105d25761021a565b80638462151c116100f25780638462151c146104ca57806395d89b41146104ea578063a002c376146104ff578063a22cb46514610512578063a4ede128146105325761021a565b8063736889141461045e5780637b1039991461047357806384017e52146104955780638456cb59146104b55761021a565b80633f4ba83a116101a65780635a393bc2116101755780635a393bc2146103e15780635c975abb146103f45780635fd8c710146104095780636352211e1461041e57806370a082311461043e5761021a565b80633f4ba83a1461037757806342842e0e1461038c57806342966c68146103ac57806352709725146103cc5761021a565b806313966db5116101ed57806313966db5146102c6578063180b9e3f146102e857806318160ddd1461031557806323b872dd1461032a5780632a0c77991461034a5761021a565b806301ffc9a71461021f57806306fdde0314610255578063081812fc14610277578063095ea7b3146102a4575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612d40565b61068b565b60405161024c919061359c565b60405180910390f35b34801561026157600080fd5b5061026a6106ae565b60405161024c91906135b8565b34801561028357600080fd5b50610297610292366004612ebe565b610745565b60405161024c91906134b9565b3480156102b057600080fd5b506102c46102bf366004612cf2565b610791565b005b3480156102d257600080fd5b506102db61088d565b60405161024c91906136e9565b3480156102f457600080fd5b50610308610303366004612ebe565b610893565b60405161024c91906136f7565b34801561032157600080fd5b506102db6108ab565b34801561033657600080fd5b506102c4610345366004612bfc565b6108bc565b34801561035657600080fd5b5061036a610365366004612ba4565b610a38565b60405161024c919061358b565b34801561038357600080fd5b506102c4610b40565b34801561039857600080fd5b506102c46103a7366004612bfc565b610bc4565b3480156103b857600080fd5b506102c46103c7366004612ebe565b610be4565b3480156103d857600080fd5b50610297610d28565b6102db6103ef366004612e08565b610d37565b34801561040057600080fd5b5061023f610ea2565b34801561041557600080fd5b506102c4610eb2565b34801561042a57600080fd5b50610297610439366004612ebe565b610f8e565b34801561044a57600080fd5b506102db610459366004612ba4565b610fa9565b34801561046a57600080fd5b50610297610ff8565b34801561047f57600080fd5b50610488611007565b60405161024c91906135aa565b3480156104a157600080fd5b506102c46104b0366004612ebe565b611016565b3480156104c157600080fd5b506102c461107a565b3480156104d657600080fd5b5061036a6104e5366004612ba4565b611105565b3480156104f657600080fd5b5061026a6111bf565b6102db61050d366004612d7c565b611220565b34801561051e57600080fd5b506102c461052d366004612cc2565b611389565b34801561053e57600080fd5b5061055261054d366004612ba4565b61146e565b60405161024c919061357a565b34801561056b57600080fd5b506102c461057a366004612c49565b6115e4565b6102db61058d366004612e08565b611762565b34801561059e57600080fd5b506102c46105ad366004612ba4565b6118a2565b3480156105be57600080fd5b5061026a6105cd366004612ebe565b611923565b6102db6105e0366004612e08565b6119e9565b3480156105f157600080fd5b506102c4610600366004612ba4565b611b15565b34801561061157600080fd5b50610625610620366004612ebe565b611ba2565b60405161024c97969594939291906134c7565b6102db610646366004612d7c565b611d2d565b34801561065757600080fd5b506102c4610666366004612ba4565b611e54565b34801561067757600080fd5b5061023f610686366004612bc2565b611ee2565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600f8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505090505b90565b600061075082611f10565b6107755760405162461bcd60e51b815260040161076c906136a9565b60405180910390fd5b506000908152600d60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107a857600080fd5b60006107b382610f8e565b9050806001600160a01b0316836001600160a01b031614156107e75760405162461bcd60e51b815260040161076c90613629565b806001600160a01b03166107f9611f2d565b6001600160a01b03161480610815575061081581610686611f2d565b6108315760405162461bcd60e51b815260040161076c906136d9565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108b76005611f31565b905090565b600254600160a01b900460ff16156108d357600080fd5b6108e46108de611f2d565b82611f35565b6109005760405162461bcd60e51b815260040161076c906136c9565b6000818152600a60205260408120546001600160a01b03169061092283610f8e565b600084815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff1661098057610963868686611fba565b156109805760405162461bcd60e51b815260040161076c906135d9565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109b99185918b918b918b918b918b9101613720565b60206040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a099190810190612d22565b610a255760405162461bcd60e51b815260040161076c906136c9565b610a30868686612011565b505050505050565b60606001600160a01b038216610a605760405162461bcd60e51b815260040161076c90613609565b6001600160a01b0382166000908152600860205260408120610a8190611f31565b905080610aa35760408051600080825260208201909252905b509150506106a9565b606081604051908082528060200260200182016040528015610acf578160200160208202803883390190505b5090506000610adc6108ab565b9050600060015b828111610b33576000818152600a60205260409020546001600160a01b0388811691161415610b2b5780848381518110610b1957fe5b60209081029190910101526001909101905b600101610ae3565b83955050505050506106a9565b6001546001600160a01b0316610b54611f2d565b6001600160a01b03161480610b8357506002546001600160a01b0316610b78611f2d565b6001600160a01b0316145b610b9f5760405162461bcd60e51b815260040161076c90613679565b600254600160a01b900460ff16610bb557600080fd5b6002805460ff60a01b19169055565b610bdf838383604051806020016040528060008152506115e4565b505050565b600254600160a01b900460ff1615610bfb57600080fd5b6000818152600a60205260408120546001600160a01b031690610c1d83610f8e565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415610cec576004546001600160a01b03166312d26ac882610c63611f2d565b6040518363ffffffff1660e01b8152600401610c80929190613705565b60206040518083038186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cd09190810190612d22565b610cec5760405162461bcd60e51b815260040161076c90613619565b610cfd610cf7611f2d565b85611f35565b610d195760405162461bcd60e51b815260040161076c90613619565b610d2284612117565b50505050565b6002546001600160a01b031681565b600254600090600160a01b900460ff1615610d5157600080fd5b600354341015610d6057600080fd5b60008363ffffffff1611610d865760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac884610da0611f2d565b6040518363ffffffff1660e01b8152600401610dbd929190613705565b60206040518083038186803b158015610dd557600080fd5b505afa158015610de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e0d9190810190612d22565b610e295760405162461bcd60e51b815260040161076c906136b9565b610e3587878786612129565b610e515760405162461bcd60e51b815260040161076c90613699565b6000610e64610e5e611f2d565b84612203565b9050610e73818989898961223a565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509695505050505050565b600254600160a01b900460ff1681565b6001546001600160a01b0316610ec6611f2d565b6001600160a01b03161480610ef557506002546001600160a01b0316610eea611f2d565b6001600160a01b0316145b610f115760405162461bcd60e51b815260040161076c90613679565b60405130319060009033908390610f27906134ae565b60006040518083038185875af1925050503d8060008114610f64576040519150601f19603f3d011682016040523d82523d6000602084013e610f69565b606091505b5050905080610f8a5760405162461bcd60e51b815260040161076c90613639565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b038216610fd15760405162461bcd60e51b815260040161076c90613609565b6001600160a01b0382166000908152600760205260409020610ff290611f31565b92915050565b6001546001600160a01b031681565b6004546001600160a01b031681565b6001546001600160a01b031661102a611f2d565b6001600160a01b0316148061105957506002546001600160a01b031661104e611f2d565b6001600160a01b0316145b6110755760405162461bcd60e51b815260040161076c90613679565b600355565b6001546001600160a01b031661108e611f2d565b6001600160a01b031614806110bd57506002546001600160a01b03166110b2611f2d565b6001600160a01b0316145b6110d95760405162461bcd60e51b815260040161076c90613679565b600254600160a01b900460ff16156110f057600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061111283610fa9565b90508061112f576040805160008082526020820190925290610a9a565b60608160405190808252806020026020018201604052801561115b578160200160208202803883390190505b50905060006111686108ab565b9050600060015b828111610b33576000818152600660205260409020546001600160a01b03888116911614156111b757808483815181106111a557fe5b60209081029190910101526001909101905b60010161116f565b60108054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073a5780601f1061070f5761010080835404028352916020019161073a565b600254600090600160a01b900460ff161561123a57600080fd5b60035434101561124957600080fd5b60008263ffffffff161161126f5760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac883611289611f2d565b6040518363ffffffff1660e01b81526004016112a6929190613705565b60206040518083038186803b1580156112be57600080fd5b505afa1580156112d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112f69190810190612d22565b6113125760405162461bcd60e51b815260040161076c906136b9565b61131e86868685612129565b61133a5760405162461bcd60e51b815260040161076c90613699565b600061134c611347611f2d565b6123f9565b905061135b818888888861223a565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905095945050505050565b600254600160a01b900460ff16156113a057600080fd5b6113a8611f2d565b6001600160a01b0316826001600160a01b031614156113d95760405162461bcd60e51b815260040161076c90613659565b80600e60006113e6611f2d565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561142a611f2d565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611462919061359c565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b8282101561155957600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115415780601f1061151657610100808354040283529160200191611541565b820191906000526020600020905b81548152906001019060200180831161152457829003601f168201915b505050505081525050815260200190600101906114a2565b5050505090506060815160405190808252806020026020018201604052801561159657816020015b60608152602001906001900390816115815790505b50905060005b82518110156115dc578281815181106115b157fe5b6020026020010151600001518282815181106115c957fe5b602090810291909101015260010161159c565b509392505050565b600254600160a01b900460ff16156115fb57600080fd5b61160c611606611f2d565b83611f35565b6116285760405162461bcd60e51b815260040161076c906136c9565b6000828152600a60205260408120546001600160a01b03169061164a84610f8e565b600085815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff166116a85761168b878787611fba565b156116a85760405162461bcd60e51b815260040161076c906135d9565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916116e19185918c918c918c918b918b9101613720565b60206040518083038186803b1580156116f957600080fd5b505afa15801561170d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117319190810190612d22565b61174d5760405162461bcd60e51b815260040161076c906136c9565b61175987878787612415565b50505050505050565b600254600090600160a01b900460ff161561177c57600080fd5b60035434101561178b57600080fd5b60008363ffffffff16116117b15760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac8846117cb611f2d565b6040518363ffffffff1660e01b81526004016117e8929190613705565b60206040518083038186803b15801561180057600080fd5b505afa158015611814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118389190810190612d22565b6118545760405162461bcd60e51b815260040161076c906136b9565b61186087878786612129565b61187c5760405162461bcd60e51b815260040161076c90613699565b6000611889611347611f2d565b9050611898818989898961223a565b610e738184612448565b6001546001600160a01b03166118b6611f2d565b6001600160a01b031614806118e557506002546001600160a01b03166118da611f2d565b6001600160a01b0316145b6119015760405162461bcd60e51b815260040161076c90613679565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b606061192e82611f10565b61194a5760405162461bcd60e51b815260040161076c906136a9565b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156119dd5780601f106119b2576101008083540402835291602001916119dd565b820191906000526020600020905b8154815290600101906020018083116119c057829003601f168201915b50505050509050919050565b600254600090600160a01b900460ff1615611a0357600080fd5b600354341015611a1257600080fd5b60008363ffffffff1611611a385760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac884611a52611f2d565b6040518363ffffffff1660e01b8152600401611a6f929190613705565b60206040518083038186803b158015611a8757600080fd5b505afa158015611a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611abf9190810190612d22565b611adb5760405162461bcd60e51b815260040161076c906136b9565b611ae787878786612129565b611b035760405162461bcd60e51b815260040161076c90613699565b6000611889611b10611f2d565b61248c565b6001546001600160a01b0316611b29611f2d565b6001600160a01b03161480611b5857506002546001600160a01b0316611b4d611f2d565b6001600160a01b0316145b611b745760405162461bcd60e51b815260040161076c90613679565b6001600160a01b03811615611b9f57600280546001600160a01b0319166001600160a01b0383161790555b50565b6000806060600080600080611bb688611f10565b611bd25760405162461bcd60e51b815260040161076c906136a9565b611bda6129f1565b6000898152600a6020908152604091829020825160a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611c925780601f10611c6757610100808354040283529160200191611c92565b820191906000526020600020905b815481529060010190602001808311611c7557829003601f168201915b50505091835250506002919091015465ffffffffffff80821660208085019190915266010000000000008304909116604080850191909152600160601b90920460ff16151560609093019290925260008c81526009909252902054815191925063ffffffff1690611d028b610f8e565b602084015160408501516060860151608090960151939e929d50909b50995092975095509350915050565b600254600090600160a01b900460ff1615611d4757600080fd5b600354341015611d5657600080fd5b60008263ffffffff1611611d7c5760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac883611d96611f2d565b6040518363ffffffff1660e01b8152600401611db3929190613705565b60206040518083038186803b158015611dcb57600080fd5b505afa158015611ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e039190810190612d22565b611e1f5760405162461bcd60e51b815260040161076c906136b9565b611e2b86868685612129565b611e475760405162461bcd60e51b815260040161076c90613699565b600061134c611b10611f2d565b6001546001600160a01b0316611e68611f2d565b6001600160a01b03161480611e9757506002546001600160a01b0316611e8c611f2d565b6001600160a01b0316145b611eb35760405162461bcd60e51b815260040161076c90613679565b6001600160a01b03811615611b9f57600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b6000611f4082611f10565b611f5c5760405162461bcd60e51b815260040161076c906136a9565b6000611f6783610f8e565b9050806001600160a01b0316846001600160a01b03161480611fa25750836001600160a01b0316611f9784610745565b6001600160a01b0316145b80611fb25750611fb28185611ee2565b949350505050565b6000818152600a60205260408120546001600160a01b03908116908516811480611ff55750806001600160a01b0316846001600160a01b0316145b1561200457600091505061200a565b60019150505b9392505050565b826001600160a01b031661202482610f8e565b6001600160a01b03161461204a5760405162461bcd60e51b815260040161076c906136c9565b6001600160a01b0382166120705760405162461bcd60e51b815260040161076c906135f9565b6120798161256b565b6001600160a01b038316600090815260076020526040902061209a906125a6565b6001600160a01b03821660009081526007602052604090206120bb906125bd565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611b9f61212382610f8e565b826125c6565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe617839161215d9186918a910161377a565b60206040518083038186803b15801561217557600080fd5b505afa158015612189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121ad9190810190612d22565b6121c95760405162461bcd60e51b815260040161076c90613649565b8365ffffffffffff168365ffffffffffff16116121f85760405162461bcd60e51b815260040161076c90613689565b506001949350505050565b60008061220f8461248c565b905061221e60008583866126fd565b61200a5760405162461bcd60e51b815260040161076c906135e9565b61224385611f10565b61225f5760405162461bcd60e51b815260040161076c906136a9565b6122676129f1565b6040518060a0016040528061227a611f2d565b6001600160a01b031681526020018681526020018565ffffffffffff1681526020018465ffffffffffff168152602001831515815250905080600a600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101908051906020019061230f929190612a20565b5060408201516002919091018054606084015160809094015165ffffffffffff1990911665ffffffffffff938416176bffffffffffff000000000000191666010000000000009390941692909202929092176cff0000000000000000000000001916600160601b91151591909102179055612389856127c8565b610a3057600b6000612399611f2d565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528883528054600181018083559183529184902083518051929591909301926123ed9284929190910190612a20565b50505050505050505050565b60008061200a8360405180602001604052806000815250612203565b612420848484612011565b61242c848484846126fd565b610d225760405162461bcd60e51b815260040161076c906135e9565b61245182611f10565b61246d5760405162461bcd60e51b815260040161076c906136a9565b6000828152600c602090815260409091208251610bdf92840190612a20565b60006001600160a01b0382166124b45760405162461bcd60e51b815260040161076c906135c9565b6124be60056125bd565b60006124ca6005611f31565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b03891690811790915583526007909152902090915061250c906125bd565b6001600160a01b038316600090815260086020526040902061252d906125bd565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000818152600d60205260409020546001600160a01b031615611b9f576000908152600d6020526040902080546001600160a01b0319169055565b80546125b990600163ffffffff6128f316565b9055565b80546001019055565b816001600160a01b03166125d982610f8e565b6001600160a01b0316146125ff5760405162461bcd60e51b815260040161076c90613619565b6126088161256b565b6001600160a01b0382166000908152600760205260409020612629906125a6565b600081815260066020908152604080832080546001600160a01b0319169055600c909152902054600260001960018316156101000201909116041561267f576000818152600c6020526040812061267f91612a9e565b6000818152600a6020526040812080546001600160a01b0319168155906126a96001830182612a9e565b5060020180546cffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612711846001600160a01b0316612935565b61271d57506001611fb2565b6000846001600160a01b031663150b7a02612736611f2d565b8887876040518563ffffffff1660e01b81526004016127589493929190613536565b602060405180830381600087803b15801561277257600080fd5b505af1158015612786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127aa9190810190612d5e565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b828210156128aa57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156128925780601f1061286757610100808354040283529160200191612892565b820191906000526020600020905b81548152906001019060200180831161287557829003601f168201915b505050505081525050815260200190600101906127f3565b5092935060009250829150505b82518110156115dc576128e1858483815181106128d057fe5b60200260200101516000015161296c565b156128eb57600191505b6001016128b7565b600061200a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506129c5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611fb25750141592915050565b60008160405160200161297f91906134a2565b60405160208183030381529060405280519060200120836040516020016129a691906134a2565b6040516020818303038152906040528051906020012014905092915050565b600081848411156129e95760405162461bcd60e51b815260040161076c91906135b8565b505050900390565b6040805160a0810182526000808252606060208301819052928201819052918101829052608081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a6157805160ff1916838001178555612a8e565b82800160010185558215612a8e579182015b82811115612a8e578251825591602001919060010190612a73565b50612a9a929150612ade565b5090565b50805460018160011615610100020316600290046000825580601f10612ac45750611b9f565b601f016020900490600052602060002090810190611b9f91905b61074291905b80821115612a9a5760008155600101612ae4565b8035610ff281613886565b8035610ff28161389a565b8051610ff28161389a565b8035610ff2816138a3565b8051610ff2816138a3565b600082601f830112612b4057600080fd5b8135612b53612b4e826137c1565b61379a565b91508082526020830160208301858383011115612b6f57600080fd5b612b7a838284613844565b50505092915050565b8035610ff2816138ac565b8035610ff2816138b5565b8035610ff2816138be565b600060208284031215612bb657600080fd5b6000611fb28484612af8565b60008060408385031215612bd557600080fd5b6000612be18585612af8565b9250506020612bf285828601612af8565b9150509250929050565b600080600060608486031215612c1157600080fd5b6000612c1d8686612af8565b9350506020612c2e86828701612af8565b9250506040612c3f86828701612b83565b9150509250925092565b60008060008060808587031215612c5f57600080fd5b6000612c6b8787612af8565b9450506020612c7c87828801612af8565b9350506040612c8d87828801612b83565b925050606085013567ffffffffffffffff811115612caa57600080fd5b612cb687828801612b2f565b91505092959194509250565b60008060408385031215612cd557600080fd5b6000612ce18585612af8565b9250506020612bf285828601612b03565b60008060408385031215612d0557600080fd5b6000612d118585612af8565b9250506020612bf285828601612b83565b600060208284031215612d3457600080fd5b6000611fb28484612b0e565b600060208284031215612d5257600080fd5b6000611fb28484612b19565b600060208284031215612d7057600080fd5b6000611fb28484612b24565b600080600080600060a08688031215612d9457600080fd5b853567ffffffffffffffff811115612dab57600080fd5b612db788828901612b2f565b9550506020612dc888828901612b99565b9450506040612dd988828901612b99565b9350506060612dea88828901612b03565b9250506080612dfb88828901612b8e565b9150509295509295909350565b60008060008060008060c08789031215612e2157600080fd5b863567ffffffffffffffff811115612e3857600080fd5b612e4489828a01612b2f565b9650506020612e5589828a01612b99565b9550506040612e6689828a01612b99565b9450506060612e7789828a01612b03565b9350506080612e8889828a01612b8e565b92505060a087013567ffffffffffffffff811115612ea557600080fd5b612eb189828a01612b2f565b9150509295509295509295565b600060208284031215612ed057600080fd5b6000611fb28484612b83565b600061200a8383612fdb565b6000612ef48383613487565b505060200190565b612f05816137fc565b82525050565b6000612f16826137ef565b612f2081856137f3565b935083602082028501612f32856137e9565b8060005b85811015612f6c5784840389528151612f4f8582612edc565b9450612f5a836137e9565b60209a909a0199925050600101612f36565b5091979650505050505050565b6000612f84826137ef565b612f8e81856137f3565b9350612f99836137e9565b8060005b83811015612fc7578151612fb18882612ee8565b9750612fbc836137e9565b925050600101612f9d565b509495945050505050565b612f0581613807565b6000612fe6826137ef565b612ff081856137f3565b9350613000818560208601613850565b6130098161387c565b9093019392505050565b612f0581613839565b6000613027826137ef565b61303181856106a9565b9350613041818560208601613850565b9290920192915050565b60006130586014836137f3565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000613091601a836137f3565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b60006130ca602a836137f3565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b60006131166018836137f3565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b600061314f6019836137f3565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b60006131886011836137f3565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b60006131c16015836137f3565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b60006131fa600f836137f3565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b60006132336023836137f3565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b6000613278601a836137f3565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b60006132b16015836137f3565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b60006132ea6013836137f3565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b60006133236019836137f3565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b6000610ff26000836106a9565b60006133696011836137f3565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b60006133a26012836137f3565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b60006133db6025836137f3565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b60006134226015836137f3565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b600061345b6015836137f3565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b612f0581610742565b612f0581613825565b612f058161382e565b600061200a828461301c565b6000610ff28261334f565b60208101610ff28284612efc565b60e081016134d5828a612efc565b6134e26020830189612efc565b81810360408301526134f48188612fdb565b90506135036060830187613499565b6135106080830186613499565b61351d60a0830185612fd2565b61352a60c0830184613490565b98975050505050505050565b608081016135448287612efc565b6135516020830186612efc565b61355e6040830185613487565b81810360608301526135708184612fdb565b9695505050505050565b6020808252810161200a8184612f0b565b6020808252810161200a8184612f79565b60208101610ff28284612fd2565b60208101610ff28284613013565b6020808252810161200a8184612fdb565b60208082528101610ff28161304b565b60208082528101610ff281613084565b60208082528101610ff2816130bd565b60208082528101610ff281613109565b60208082528101610ff281613142565b60208082528101610ff28161317b565b60208082528101610ff2816131b4565b60208082528101610ff2816131ed565b60208082528101610ff281613226565b60208082528101610ff28161326b565b60208082528101610ff2816132a4565b60208082528101610ff2816132dd565b60208082528101610ff281613316565b60208082528101610ff28161335c565b60208082528101610ff281613395565b60208082528101610ff2816133ce565b60208082528101610ff281613415565b60208082528101610ff28161344e565b60208101610ff28284613487565b60208101610ff28284613490565b604081016137138285613490565b61200a6020830184612efc565b60c0810161372e8289613490565b61373b6020830188612efc565b6137486040830187612efc565b6137556060830186613487565b6137626080830185612efc565b61376f60a0830184612efc565b979650505050505050565b604081016137888285613490565b8181036020830152611fb28184612fdb565b60405181810167ffffffffffffffff811182821017156137b957600080fd5b604052919050565b600067ffffffffffffffff8211156137d857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610ff282613819565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b6000610ff2826137fc565b82818337506000910152565b60005b8381101561386b578181015183820152602001613853565b83811115610d225750506000910152565b601f01601f191690565b61388f816137fc565b8114611b9f57600080fd5b61388f81613807565b61388f8161380c565b61388f81610742565b61388f81613825565b61388f8161382e56fea365627a7a72315820c75260f1b276f0041a5566404595ef9403f0eb4063ed76d7d24413b07b87aa8a6c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x60806040526004361061021a5760003560e01c80637368891411610123578063b88d4fde116100ab578063e2b375a91161006f578063e2b375a9146105e5578063e5c2492414610605578063e89fecc014610638578063e982d5a91461064b578063e985e9c51461066b5761021a565b8063b88d4fde1461055f578063bd5c41851461057f578063c57a882514610592578063c87b56dd146105b2578063cd1ed24a146105d25761021a565b80638462151c116100f25780638462151c146104ca57806395d89b41146104ea578063a002c376146104ff578063a22cb46514610512578063a4ede128146105325761021a565b8063736889141461045e5780637b1039991461047357806384017e52146104955780638456cb59146104b55761021a565b80633f4ba83a116101a65780635a393bc2116101755780635a393bc2146103e15780635c975abb146103f45780635fd8c710146104095780636352211e1461041e57806370a082311461043e5761021a565b80633f4ba83a1461037757806342842e0e1461038c57806342966c68146103ac57806352709725146103cc5761021a565b806313966db5116101ed57806313966db5146102c6578063180b9e3f146102e857806318160ddd1461031557806323b872dd1461032a5780632a0c77991461034a5761021a565b806301ffc9a71461021f57806306fdde0314610255578063081812fc14610277578063095ea7b3146102a4575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612d40565b61068b565b60405161024c919061359c565b60405180910390f35b34801561026157600080fd5b5061026a6106ae565b60405161024c91906135b8565b34801561028357600080fd5b50610297610292366004612ebe565b610745565b60405161024c91906134b9565b3480156102b057600080fd5b506102c46102bf366004612cf2565b610791565b005b3480156102d257600080fd5b506102db61088d565b60405161024c91906136e9565b3480156102f457600080fd5b50610308610303366004612ebe565b610893565b60405161024c91906136f7565b34801561032157600080fd5b506102db6108ab565b34801561033657600080fd5b506102c4610345366004612bfc565b6108bc565b34801561035657600080fd5b5061036a610365366004612ba4565b610a38565b60405161024c919061358b565b34801561038357600080fd5b506102c4610b40565b34801561039857600080fd5b506102c46103a7366004612bfc565b610bc4565b3480156103b857600080fd5b506102c46103c7366004612ebe565b610be4565b3480156103d857600080fd5b50610297610d28565b6102db6103ef366004612e08565b610d37565b34801561040057600080fd5b5061023f610ea2565b34801561041557600080fd5b506102c4610eb2565b34801561042a57600080fd5b50610297610439366004612ebe565b610f8e565b34801561044a57600080fd5b506102db610459366004612ba4565b610fa9565b34801561046a57600080fd5b50610297610ff8565b34801561047f57600080fd5b50610488611007565b60405161024c91906135aa565b3480156104a157600080fd5b506102c46104b0366004612ebe565b611016565b3480156104c157600080fd5b506102c461107a565b3480156104d657600080fd5b5061036a6104e5366004612ba4565b611105565b3480156104f657600080fd5b5061026a6111bf565b6102db61050d366004612d7c565b611220565b34801561051e57600080fd5b506102c461052d366004612cc2565b611389565b34801561053e57600080fd5b5061055261054d366004612ba4565b61146e565b60405161024c919061357a565b34801561056b57600080fd5b506102c461057a366004612c49565b6115e4565b6102db61058d366004612e08565b611762565b34801561059e57600080fd5b506102c46105ad366004612ba4565b6118a2565b3480156105be57600080fd5b5061026a6105cd366004612ebe565b611923565b6102db6105e0366004612e08565b6119e9565b3480156105f157600080fd5b506102c4610600366004612ba4565b611b15565b34801561061157600080fd5b50610625610620366004612ebe565b611ba2565b60405161024c97969594939291906134c7565b6102db610646366004612d7c565b611d2d565b34801561065757600080fd5b506102c4610666366004612ba4565b611e54565b34801561067757600080fd5b5061023f610686366004612bc2565b611ee2565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600f8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505090505b90565b600061075082611f10565b6107755760405162461bcd60e51b815260040161076c906136a9565b60405180910390fd5b506000908152600d60205260409020546001600160a01b031690565b600254600160a01b900460ff16156107a857600080fd5b60006107b382610f8e565b9050806001600160a01b0316836001600160a01b031614156107e75760405162461bcd60e51b815260040161076c90613629565b806001600160a01b03166107f9611f2d565b6001600160a01b03161480610815575061081581610686611f2d565b6108315760405162461bcd60e51b815260040161076c906136d9565b6000828152600d602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60035481565b60096020526000908152604090205463ffffffff1681565b60006108b76005611f31565b905090565b600254600160a01b900460ff16156108d357600080fd5b6108e46108de611f2d565b82611f35565b6109005760405162461bcd60e51b815260040161076c906136c9565b6000818152600a60205260408120546001600160a01b03169061092283610f8e565b600084815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff1661098057610963868686611fba565b156109805760405162461bcd60e51b815260040161076c906135d9565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916109b99185918b918b918b918b918b9101613720565b60206040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a099190810190612d22565b610a255760405162461bcd60e51b815260040161076c906136c9565b610a30868686612011565b505050505050565b60606001600160a01b038216610a605760405162461bcd60e51b815260040161076c90613609565b6001600160a01b0382166000908152600860205260408120610a8190611f31565b905080610aa35760408051600080825260208201909252905b509150506106a9565b606081604051908082528060200260200182016040528015610acf578160200160208202803883390190505b5090506000610adc6108ab565b9050600060015b828111610b33576000818152600a60205260409020546001600160a01b0388811691161415610b2b5780848381518110610b1957fe5b60209081029190910101526001909101905b600101610ae3565b83955050505050506106a9565b6001546001600160a01b0316610b54611f2d565b6001600160a01b03161480610b8357506002546001600160a01b0316610b78611f2d565b6001600160a01b0316145b610b9f5760405162461bcd60e51b815260040161076c90613679565b600254600160a01b900460ff16610bb557600080fd5b6002805460ff60a01b19169055565b610bdf838383604051806020016040528060008152506115e4565b505050565b600254600160a01b900460ff1615610bfb57600080fd5b6000818152600a60205260408120546001600160a01b031690610c1d83610f8e565b60008481526009602052604090205490915063ffffffff166001600160a01b038083169084161415610cec576004546001600160a01b03166312d26ac882610c63611f2d565b6040518363ffffffff1660e01b8152600401610c80929190613705565b60206040518083038186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cd09190810190612d22565b610cec5760405162461bcd60e51b815260040161076c90613619565b610cfd610cf7611f2d565b85611f35565b610d195760405162461bcd60e51b815260040161076c90613619565b610d2284612117565b50505050565b6002546001600160a01b031681565b600254600090600160a01b900460ff1615610d5157600080fd5b600354341015610d6057600080fd5b60008363ffffffff1611610d865760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac884610da0611f2d565b6040518363ffffffff1660e01b8152600401610dbd929190613705565b60206040518083038186803b158015610dd557600080fd5b505afa158015610de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e0d9190810190612d22565b610e295760405162461bcd60e51b815260040161076c906136b9565b610e3587878786612129565b610e515760405162461bcd60e51b815260040161076c90613699565b6000610e64610e5e611f2d565b84612203565b9050610e73818989898961223a565b6000818152600960205260409020805463ffffffff861663ffffffff1990911617905590509695505050505050565b600254600160a01b900460ff1681565b6001546001600160a01b0316610ec6611f2d565b6001600160a01b03161480610ef557506002546001600160a01b0316610eea611f2d565b6001600160a01b0316145b610f115760405162461bcd60e51b815260040161076c90613679565b60405130319060009033908390610f27906134ae565b60006040518083038185875af1925050503d8060008114610f64576040519150601f19603f3d011682016040523d82523d6000602084013e610f69565b606091505b5050905080610f8a5760405162461bcd60e51b815260040161076c90613639565b5050565b6000908152600660205260409020546001600160a01b031690565b60006001600160a01b038216610fd15760405162461bcd60e51b815260040161076c90613609565b6001600160a01b0382166000908152600760205260409020610ff290611f31565b92915050565b6001546001600160a01b031681565b6004546001600160a01b031681565b6001546001600160a01b031661102a611f2d565b6001600160a01b0316148061105957506002546001600160a01b031661104e611f2d565b6001600160a01b0316145b6110755760405162461bcd60e51b815260040161076c90613679565b600355565b6001546001600160a01b031661108e611f2d565b6001600160a01b031614806110bd57506002546001600160a01b03166110b2611f2d565b6001600160a01b0316145b6110d95760405162461bcd60e51b815260040161076c90613679565b600254600160a01b900460ff16156110f057600080fd5b6002805460ff60a01b1916600160a01b179055565b6060600061111283610fa9565b90508061112f576040805160008082526020820190925290610a9a565b60608160405190808252806020026020018201604052801561115b578160200160208202803883390190505b50905060006111686108ab565b9050600060015b828111610b33576000818152600660205260409020546001600160a01b03888116911614156111b757808483815181106111a557fe5b60209081029190910101526001909101905b60010161116f565b60108054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561073a5780601f1061070f5761010080835404028352916020019161073a565b600254600090600160a01b900460ff161561123a57600080fd5b60035434101561124957600080fd5b60008263ffffffff161161126f5760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac883611289611f2d565b6040518363ffffffff1660e01b81526004016112a6929190613705565b60206040518083038186803b1580156112be57600080fd5b505afa1580156112d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112f69190810190612d22565b6113125760405162461bcd60e51b815260040161076c906136b9565b61131e86868685612129565b61133a5760405162461bcd60e51b815260040161076c90613699565b600061134c611347611f2d565b6123f9565b905061135b818888888861223a565b6000818152600960205260409020805463ffffffff851663ffffffff19909116179055905095945050505050565b600254600160a01b900460ff16156113a057600080fd5b6113a8611f2d565b6001600160a01b0316826001600160a01b031614156113d95760405162461bcd60e51b815260040161076c90613659565b80600e60006113e6611f2d565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561142a611f2d565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611462919061359c565b60405180910390a35050565b6001600160a01b0381166000908152600b602090815260408083208054825181850281018501909352808352606094859484015b8282101561155957600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156115415780601f1061151657610100808354040283529160200191611541565b820191906000526020600020905b81548152906001019060200180831161152457829003601f168201915b505050505081525050815260200190600101906114a2565b5050505090506060815160405190808252806020026020018201604052801561159657816020015b60608152602001906001900390816115815790505b50905060005b82518110156115dc578281815181106115b157fe5b6020026020010151600001518282815181106115c957fe5b602090810291909101015260010161159c565b509392505050565b600254600160a01b900460ff16156115fb57600080fd5b61160c611606611f2d565b83611f35565b6116285760405162461bcd60e51b815260040161076c906136c9565b6000828152600a60205260408120546001600160a01b03169061164a84610f8e565b600085815260096020908152604080832054600a9092529091206002015491925063ffffffff1690600160601b900460ff166116a85761168b878787611fba565b156116a85760405162461bcd60e51b815260040161076c906135d9565b60048054604051630d1e359160e01b81526001600160a01b0390911691630d1e3591916116e19185918c918c918c918b918b9101613720565b60206040518083038186803b1580156116f957600080fd5b505afa15801561170d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117319190810190612d22565b61174d5760405162461bcd60e51b815260040161076c906136c9565b61175987878787612415565b50505050505050565b600254600090600160a01b900460ff161561177c57600080fd5b60035434101561178b57600080fd5b60008363ffffffff16116117b15760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac8846117cb611f2d565b6040518363ffffffff1660e01b81526004016117e8929190613705565b60206040518083038186803b15801561180057600080fd5b505afa158015611814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118389190810190612d22565b6118545760405162461bcd60e51b815260040161076c906136b9565b61186087878786612129565b61187c5760405162461bcd60e51b815260040161076c90613699565b6000611889611347611f2d565b9050611898818989898961223a565b610e738184612448565b6001546001600160a01b03166118b6611f2d565b6001600160a01b031614806118e557506002546001600160a01b03166118da611f2d565b6001600160a01b0316145b6119015760405162461bcd60e51b815260040161076c90613679565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b606061192e82611f10565b61194a5760405162461bcd60e51b815260040161076c906136a9565b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156119dd5780601f106119b2576101008083540402835291602001916119dd565b820191906000526020600020905b8154815290600101906020018083116119c057829003601f168201915b50505050509050919050565b600254600090600160a01b900460ff1615611a0357600080fd5b600354341015611a1257600080fd5b60008363ffffffff1611611a385760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac884611a52611f2d565b6040518363ffffffff1660e01b8152600401611a6f929190613705565b60206040518083038186803b158015611a8757600080fd5b505afa158015611a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611abf9190810190612d22565b611adb5760405162461bcd60e51b815260040161076c906136b9565b611ae787878786612129565b611b035760405162461bcd60e51b815260040161076c90613699565b6000611889611b10611f2d565b61248c565b6001546001600160a01b0316611b29611f2d565b6001600160a01b03161480611b5857506002546001600160a01b0316611b4d611f2d565b6001600160a01b0316145b611b745760405162461bcd60e51b815260040161076c90613679565b6001600160a01b03811615611b9f57600280546001600160a01b0319166001600160a01b0383161790555b50565b6000806060600080600080611bb688611f10565b611bd25760405162461bcd60e51b815260040161076c906136a9565b611bda6129f1565b6000898152600a6020908152604091829020825160a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015611c925780601f10611c6757610100808354040283529160200191611c92565b820191906000526020600020905b815481529060010190602001808311611c7557829003601f168201915b50505091835250506002919091015465ffffffffffff80821660208085019190915266010000000000008304909116604080850191909152600160601b90920460ff16151560609093019290925260008c81526009909252902054815191925063ffffffff1690611d028b610f8e565b602084015160408501516060860151608090960151939e929d50909b50995092975095509350915050565b600254600090600160a01b900460ff1615611d4757600080fd5b600354341015611d5657600080fd5b60008263ffffffff1611611d7c5760405162461bcd60e51b815260040161076c90613669565b6004546001600160a01b03166312d26ac883611d96611f2d565b6040518363ffffffff1660e01b8152600401611db3929190613705565b60206040518083038186803b158015611dcb57600080fd5b505afa158015611ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e039190810190612d22565b611e1f5760405162461bcd60e51b815260040161076c906136b9565b611e2b86868685612129565b611e475760405162461bcd60e51b815260040161076c90613699565b600061134c611b10611f2d565b6001546001600160a01b0316611e68611f2d565b6001600160a01b03161480611e9757506002546001600160a01b0316611e8c611f2d565b6001600160a01b0316145b611eb35760405162461bcd60e51b815260040161076c90613679565b6001600160a01b03811615611b9f57600180546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b6000908152600660205260409020546001600160a01b0316151590565b3390565b5490565b6000611f4082611f10565b611f5c5760405162461bcd60e51b815260040161076c906136a9565b6000611f6783610f8e565b9050806001600160a01b0316846001600160a01b03161480611fa25750836001600160a01b0316611f9784610745565b6001600160a01b0316145b80611fb25750611fb28185611ee2565b949350505050565b6000818152600a60205260408120546001600160a01b03908116908516811480611ff55750806001600160a01b0316846001600160a01b0316145b1561200457600091505061200a565b60019150505b9392505050565b826001600160a01b031661202482610f8e565b6001600160a01b03161461204a5760405162461bcd60e51b815260040161076c906136c9565b6001600160a01b0382166120705760405162461bcd60e51b815260040161076c906135f9565b6120798161256b565b6001600160a01b038316600090815260076020526040902061209a906125a6565b6001600160a01b03821660009081526007602052604090206120bb906125bd565b60008181526006602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611b9f61212382610f8e565b826125c6565b6004805460405163abe6178360e01b81526000926001600160a01b039092169163abe617839161215d9186918a910161377a565b60206040518083038186803b15801561217557600080fd5b505afa158015612189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121ad9190810190612d22565b6121c95760405162461bcd60e51b815260040161076c90613649565b8365ffffffffffff168365ffffffffffff16116121f85760405162461bcd60e51b815260040161076c90613689565b506001949350505050565b60008061220f8461248c565b905061221e60008583866126fd565b61200a5760405162461bcd60e51b815260040161076c906135e9565b61224385611f10565b61225f5760405162461bcd60e51b815260040161076c906136a9565b6122676129f1565b6040518060a0016040528061227a611f2d565b6001600160a01b031681526020018681526020018565ffffffffffff1681526020018465ffffffffffff168152602001831515815250905080600a600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101908051906020019061230f929190612a20565b5060408201516002919091018054606084015160809094015165ffffffffffff1990911665ffffffffffff938416176bffffffffffff000000000000191666010000000000009390941692909202929092176cff0000000000000000000000001916600160601b91151591909102179055612389856127c8565b610a3057600b6000612399611f2d565b6001600160a01b031681526020808201929092526040908101600090812082518085019093528883528054600181018083559183529184902083518051929591909301926123ed9284929190910190612a20565b50505050505050505050565b60008061200a8360405180602001604052806000815250612203565b612420848484612011565b61242c848484846126fd565b610d225760405162461bcd60e51b815260040161076c906135e9565b61245182611f10565b61246d5760405162461bcd60e51b815260040161076c906136a9565b6000828152600c602090815260409091208251610bdf92840190612a20565b60006001600160a01b0382166124b45760405162461bcd60e51b815260040161076c906135c9565b6124be60056125bd565b60006124ca6005611f31565b600081815260066020908152604080832080546001600160a01b0319166001600160a01b03891690811790915583526007909152902090915061250c906125bd565b6001600160a01b038316600090815260086020526040902061252d906125bd565b60405181906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b6000818152600d60205260409020546001600160a01b031615611b9f576000908152600d6020526040902080546001600160a01b0319169055565b80546125b990600163ffffffff6128f316565b9055565b80546001019055565b816001600160a01b03166125d982610f8e565b6001600160a01b0316146125ff5760405162461bcd60e51b815260040161076c90613619565b6126088161256b565b6001600160a01b0382166000908152600760205260409020612629906125a6565b600081815260066020908152604080832080546001600160a01b0319169055600c909152902054600260001960018316156101000201909116041561267f576000818152600c6020526040812061267f91612a9e565b6000818152600a6020526040812080546001600160a01b0319168155906126a96001830182612a9e565b5060020180546cffffffffffffffffffffffffff1916905560405181906000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000612711846001600160a01b0316612935565b61271d57506001611fb2565b6000846001600160a01b031663150b7a02612736611f2d565b8887876040518563ffffffff1660e01b81526004016127589493929190613536565b602060405180830381600087803b15801561277257600080fd5b505af1158015612786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127aa9190810190612d5e565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b336000908152600b602090815260408083208054825181850281018501909352808352606093859084015b828210156128aa57600084815260209081902060408051918501805460026001821615610100026000190190911604601f81018590048502840183018352938301848152929390928492909184918401828280156128925780601f1061286757610100808354040283529160200191612892565b820191906000526020600020905b81548152906001019060200180831161287557829003601f168201915b505050505081525050815260200190600101906127f3565b5092935060009250829150505b82518110156115dc576128e1858483815181106128d057fe5b60200260200101516000015161296c565b156128eb57600191505b6001016128b7565b600061200a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506129c5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611fb25750141592915050565b60008160405160200161297f91906134a2565b60405160208183030381529060405280519060200120836040516020016129a691906134a2565b6040516020818303038152906040528051906020012014905092915050565b600081848411156129e95760405162461bcd60e51b815260040161076c91906135b8565b505050900390565b6040805160a0810182526000808252606060208301819052928201819052918101829052608081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a6157805160ff1916838001178555612a8e565b82800160010185558215612a8e579182015b82811115612a8e578251825591602001919060010190612a73565b50612a9a929150612ade565b5090565b50805460018160011615610100020316600290046000825580601f10612ac45750611b9f565b601f016020900490600052602060002090810190611b9f91905b61074291905b80821115612a9a5760008155600101612ae4565b8035610ff281613886565b8035610ff28161389a565b8051610ff28161389a565b8035610ff2816138a3565b8051610ff2816138a3565b600082601f830112612b4057600080fd5b8135612b53612b4e826137c1565b61379a565b91508082526020830160208301858383011115612b6f57600080fd5b612b7a838284613844565b50505092915050565b8035610ff2816138ac565b8035610ff2816138b5565b8035610ff2816138be565b600060208284031215612bb657600080fd5b6000611fb28484612af8565b60008060408385031215612bd557600080fd5b6000612be18585612af8565b9250506020612bf285828601612af8565b9150509250929050565b600080600060608486031215612c1157600080fd5b6000612c1d8686612af8565b9350506020612c2e86828701612af8565b9250506040612c3f86828701612b83565b9150509250925092565b60008060008060808587031215612c5f57600080fd5b6000612c6b8787612af8565b9450506020612c7c87828801612af8565b9350506040612c8d87828801612b83565b925050606085013567ffffffffffffffff811115612caa57600080fd5b612cb687828801612b2f565b91505092959194509250565b60008060408385031215612cd557600080fd5b6000612ce18585612af8565b9250506020612bf285828601612b03565b60008060408385031215612d0557600080fd5b6000612d118585612af8565b9250506020612bf285828601612b83565b600060208284031215612d3457600080fd5b6000611fb28484612b0e565b600060208284031215612d5257600080fd5b6000611fb28484612b19565b600060208284031215612d7057600080fd5b6000611fb28484612b24565b600080600080600060a08688031215612d9457600080fd5b853567ffffffffffffffff811115612dab57600080fd5b612db788828901612b2f565b9550506020612dc888828901612b99565b9450506040612dd988828901612b99565b9350506060612dea88828901612b03565b9250506080612dfb88828901612b8e565b9150509295509295909350565b60008060008060008060c08789031215612e2157600080fd5b863567ffffffffffffffff811115612e3857600080fd5b612e4489828a01612b2f565b9650506020612e5589828a01612b99565b9550506040612e6689828a01612b99565b9450506060612e7789828a01612b03565b9350506080612e8889828a01612b8e565b92505060a087013567ffffffffffffffff811115612ea557600080fd5b612eb189828a01612b2f565b9150509295509295509295565b600060208284031215612ed057600080fd5b6000611fb28484612b83565b600061200a8383612fdb565b6000612ef48383613487565b505060200190565b612f05816137fc565b82525050565b6000612f16826137ef565b612f2081856137f3565b935083602082028501612f32856137e9565b8060005b85811015612f6c5784840389528151612f4f8582612edc565b9450612f5a836137e9565b60209a909a0199925050600101612f36565b5091979650505050505050565b6000612f84826137ef565b612f8e81856137f3565b9350612f99836137e9565b8060005b83811015612fc7578151612fb18882612ee8565b9750612fbc836137e9565b925050600101612f9d565b509495945050505050565b612f0581613807565b6000612fe6826137ef565b612ff081856137f3565b9350613000818560208601613850565b6130098161387c565b9093019392505050565b612f0581613839565b6000613027826137ef565b61303181856106a9565b9350613041818560208601613850565b9290920192915050565b60006130586014836137f3565b7f4d494e545f544f5f5a45524f5f41444452455353000000000000000000000000815260200192915050565b6000613091601a836137f3565b7f5345434f4e444152595f54524144494e475f44495341424c4544000000000000815260200192915050565b60006130ca602a836137f3565b7f5452414e534645525f544f5f4e4f4e5f45524337323152454345495645525f4981526926a82622a6a2a72a22a960b11b602082015260400192915050565b60006131166018836137f3565b7f5452414e534645525f544f5f5a45524f5f414444524553530000000000000000815260200192915050565b600061314f6019836137f3565b7f43414e4e4f545f51554552595f5a45524f5f4144445245535300000000000000815260200192915050565b60006131886011836137f3565b7f554e415554484f52495a45445f4255524e000000000000000000000000000000815260200192915050565b60006131c16015836137f3565b7f415050524f56414c5f49535f524544554e44414e540000000000000000000000815260200192915050565b60006131fa600f836137f3565b7f57495448445241575f4641494c45440000000000000000000000000000000000815260200192915050565b60006132336023836137f3565b7f434f4e54454e545f49445f4e4f545f524547495354455245445f544f5f43414c8152622622a960e91b602082015260400192915050565b6000613278601a836137f3565b7f43414c4c45525f43414e4e4f545f415050524f56455f53454c46000000000000815260200192915050565b60006132b16015836137f3565b7f494e56414c49445f46454445524154494f4e5f49440000000000000000000000815260200192915050565b60006132ea6013836137f3565b7f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000815260200192915050565b60006133236019836137f3565b7f53544152545f54494d455f41465445525f454e445f54494d4500000000000000815260200192915050565b6000610ff26000836106a9565b60006133696011836137f3565b7f494e56414c49445f54494d455f534c4f54000000000000000000000000000000815260200192915050565b60006133a26012836137f3565b7f4e4f4e5f4558495354454e545f544f4b454e0000000000000000000000000000815260200192915050565b60006133db6025836137f3565b7f43414c4c45525f4e4f545f415554484f52495a45445f464f525f4d494e5445528152645f524f4c4560d81b602082015260400192915050565b60006134226015836137f3565b7f554e415554484f52495a45445f5452414e534645520000000000000000000000815260200192915050565b600061345b6015836137f3565b7f43414c4c45525f4e4f545f415554484f52495a45440000000000000000000000815260200192915050565b612f0581610742565b612f0581613825565b612f058161382e565b600061200a828461301c565b6000610ff28261334f565b60208101610ff28284612efc565b60e081016134d5828a612efc565b6134e26020830189612efc565b81810360408301526134f48188612fdb565b90506135036060830187613499565b6135106080830186613499565b61351d60a0830185612fd2565b61352a60c0830184613490565b98975050505050505050565b608081016135448287612efc565b6135516020830186612efc565b61355e6040830185613487565b81810360608301526135708184612fdb565b9695505050505050565b6020808252810161200a8184612f0b565b6020808252810161200a8184612f79565b60208101610ff28284612fd2565b60208101610ff28284613013565b6020808252810161200a8184612fdb565b60208082528101610ff28161304b565b60208082528101610ff281613084565b60208082528101610ff2816130bd565b60208082528101610ff281613109565b60208082528101610ff281613142565b60208082528101610ff28161317b565b60208082528101610ff2816131b4565b60208082528101610ff2816131ed565b60208082528101610ff281613226565b60208082528101610ff28161326b565b60208082528101610ff2816132a4565b60208082528101610ff2816132dd565b60208082528101610ff281613316565b60208082528101610ff28161335c565b60208082528101610ff281613395565b60208082528101610ff2816133ce565b60208082528101610ff281613415565b60208082528101610ff28161344e565b60208101610ff28284613487565b60208101610ff28284613490565b604081016137138285613490565b61200a6020830184612efc565b60c0810161372e8289613490565b61373b6020830188612efc565b6137486040830187612efc565b6137556060830186613487565b6137626080830185612efc565b61376f60a0830184612efc565b979650505050505050565b604081016137888285613490565b8181036020830152611fb28184612fdb565b60405181810167ffffffffffffffff811182821017156137b957600080fd5b604052919050565b600067ffffffffffffffff8211156137d857600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610ff282613819565b151590565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b65ffffffffffff1690565b6000610ff2826137fc565b82818337506000910152565b60005b8381101561386b578181015183820152602001613853565b83811115610d225750506000910152565b601f01601f191690565b61388f816137fc565b8114611b9f57600080fd5b61388f81613807565b61388f8161380c565b61388f81610742565b61388f81613825565b61388f8161382e56fea365627a7a72315820c75260f1b276f0041a5566404595ef9403f0eb4063ed76d7d24413b07b87aa8a6c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "850:1239:8:-;;;1437:26:3;;;-1:-1:-1;;;;1437:26:3;;;1576:15;1551:40;;1366:336:8;5:2:-1;;;;30:1;27;20:12;5:2;1366:336:8;;;;;;;;;;;;;;;;;;;;;720:40:2;739:20;-1:-1:-1;;;;;720:18:2;:40;:::i;:::-;5306::3;5325:20;-1:-1:-1;;;;;5306:18:3;:40;:::i;:::-;5426:12;-1:-1:-1;;;;;5426:10:3;:12;:::i;:::-;5417:6;:21;;-1:-1:-1;;;;;;5417:21:3;-1:-1:-1;;;;;5417:21:3;;;;;;;;;;5457:12;:10;:12::i;:::-;5448:6;:21;;-1:-1:-1;;;;;;5448:21:3;-1:-1:-1;;;;;5448:21:3;;;;;;;;;;1464:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1486:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1590:49:8;1609:29;-1:-1:-1;;;;;1590:18:8;:49;:::i;:::-;1650:44;1678:15;1650:27;;;;;:44;;:::i;:::-;1366:336;;;850:1239;;1444:190:2;1519:25;;;;;;1511:66;;;;;;;;;;;;;;;;;;;;;;1587:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1587:40:2;1623:4;1587:40;;;1444:190::o;5943:90:3:-;6015:10;5943:90;;:::o;7269:144::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;-1:-1:-1;;;;;6508:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;-1:-1:-1;;;;;6536:10:3;:12;:::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;;;;;;;;;;;7367:8;:39;;-1:-1:-1;;;;;;7367:39:3;-1:-1:-1;;;;;7367:39:3;;;;;;;;;;7269:144::o;850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:24;;-1:-1;;;;;852:30;;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;-1:-1;;;;;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1340:364;;1500:67;1564:2;1559:3;1500:67;;;1600:66;1580:87;;1695:2;1686:12;;1486:218;-1:-1;;1486:218;1713:364;;1873:67;1937:2;1932:3;1873:67;;;1973:66;1953:87;;2068:2;2059:12;;1859:218;-1:-1;;1859:218;2085:407;2276:2;2290:47;;;2261:18;;2351:131;2261:18;2351:131;;2499:407;2690:2;2704:47;;;2675:18;;2765:131;2675:18;2765:131;;2913:256;2975:2;2969:9;3001:17;;;-1:-1;;;;;3061:34;;3097:22;;;3058:62;3055:2;;;3133:1;3130;3123:12;3055:2;3149;3142:22;2953:216;;-1:-1;2953:216;3176:322;;-1:-1;;;;;3312:6;3309:30;3306:2;;;3352:1;3349;3342:12;3306:2;-1:-1;3483:4;3419;3396:17;;;;-1:-1;;3392:33;3473:15;;3243:255;3506:163;3609:19;;;3658:4;3649:14;;3602:67;3677:91;;-1:-1;;;;;3837:54;;3739:24;3820:76;3904:268;3969:1;3976:101;3990:6;3987:1;3984:13;3976:101;;;4057:11;;;4051:18;4038:11;;;4031:39;4012:2;4005:10;3976:101;;;4092:6;4089:1;4086:13;4083:2;;;4157:1;4148:6;4143:3;4139:16;4132:27;4083:2;3953:219;;;;;4180:117;4249:24;4267:5;4249:24;;;4242:5;4239:35;4229:2;;4288:1;4285;4278:12;4229:2;4223:74;;;850:1239:8;;;;;;",
  "deployedSourceMap": "850:1239:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:133:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;917:133:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1807:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:83:8;;;:::i;:::-;;;;;;;;24898:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24898:210:3;;;;;;;;:::i;:::-;;;;;;;;24136:477;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24136:477:3;;;;;;;;:::i;:::-;;1551:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:40:3;;;:::i;:::-;;;;;;;;2429:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2429:54:3;;;;;;;;:::i;:::-;;;;;;;;21497:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21497:98:3;;;:::i;26648:829::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26648:829:3;;;;;;;;:::i;20390:973::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20390:973:3;;;;;;;;:::i;:::-;;;;;;;;8203:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8203:78:3;;;:::i;28126:134::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28126:134:3;;;;;;;;:::i;34477:550::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;34477:550:3;;;;;;;;:::i;1326:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1326:21:3;;;:::i;11830:901::-;;;;;;;;;:::i;1437:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1437:26:3;;;:::i;8346:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8346:305:3;;;:::i;22264:152::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22264:152:3;;;;;;;;:::i;21804:241::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21804:241:3;;;;;;;;:::i;1299:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1299:21:3;;;:::i;1769:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1769:32:3;;;:::i;:::-;;;;;;;;7506:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7506:105:3;;;;;;;;:::i;8047:78::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8047:78:3;;;:::i;22834:840::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22834:840:3;;;;;;;;:::i;1999:87:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1999:87:8;;;:::i;10801:868:3:-;;;;;;;;;:::i;25401:286::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25401:286:3;;;;;;;;:::i;19650:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19650:330:3;;;;;;;;:::i;:::-;;;;;;;;28982:862;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28982:862:3;;;;;;;;:::i;12834:953::-;;;;;;;;;:::i;7269:144::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7269:144:3;;;;;;;;:::i;16529:210::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16529:210:3;;;;;;;;:::i;9767:945::-;;;;;;;;;:::i;6947:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6947:169:3;;;;;;;;:::i;18478:752::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18478:752:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8767:860;;;;;;;;;:::i;6771:169::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6771:169:3;;;;;;;;:::i;26026:185::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26026:185:3;;;;;;;;:::i;917:133:2:-;-1:-1:-1;;;;;;1010:33:2;;987:4;1010:33;;;;;;;;;;;;;917:133;;;;:::o;1807:83:8:-;1878:5;1871:12;;;;;;;;-1:-1:-1;;1871:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:13;;1871:12;;1878:5;;1871:12;;1878:5;1871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:83;;:::o;24898:210:3:-;24957:7;24998:16;25006:7;24998;:16::i;:::-;24977:81;;;;-1:-1:-1;;;24977:81:3;;;;;;;;;;;;;;;;;-1:-1:-1;25076:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;25076:24:3;;24898:210::o;24136:477::-;7805:6;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;24234:18;24255:16;24263:7;24255;:16::i;:::-;24234:37;;24309:10;-1:-1:-1;;;;;24303:16:3;:2;-1:-1:-1;;;;;24303:16:3;;;24282:84;;;;-1:-1:-1;;;24282:84:3;;;;;;;;;24414:10;-1:-1:-1;;;;;24398:26:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;24398:26:3;;:72;;;;24428:42;24445:10;24457:12;:10;:12::i;24428:42::-;24377:140;;;;-1:-1:-1;;;24377:140:3;;;;;;;;;24528:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;24528:29:3;-1:-1:-1;;;;;24528:29:3;;;;;;;;;24572:33;;24528:24;;24572:33;;;;;;;7822:1;24136:477;;:::o;1551:40::-;;;;:::o;2429:54::-;;;;;;;;;;;;;;;:::o;21497:98::-;21541:7;21568:19;:9;:17;:19::i;:::-;21561:26;;21497:98;:::o;26648:829::-;7805:6;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;26786:41;26805:12;:10;:12::i;:::-;26819:7;26786:18;:41::i;:::-;26765:109;;;;-1:-1:-1;;;26765:109:3;;;;;;;;;26885:14;26902:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;26902:32:3;;26960:16;26919:7;26960;:16::i;:::-;26986:19;27008:28;;;:19;:28;;;;;;;;;27051:16;:25;;;;;;:51;;;26944:32;;-1:-1:-1;27008:28:3;;;-1:-1:-1;;;27051:51:3;;;;27047:220;;27152:35;27169:4;27175:2;27179:7;27152:16;:35::i;:::-;:44;27127:129;;;;-1:-1:-1;;;27127:129:3;;;;;;;;;27298:8;;;:81;;-1:-1:-1;;;27298:81:3;;-1:-1:-1;;;;;27298:8:3;;;;:33;;:81;;27332:12;;27346:4;;27352:2;;27356:7;;27365:6;;27373:5;;27298:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27298:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27298:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27298:81:3;;;;;;;;;27277:149;;;;-1:-1:-1;;;27277:149:3;;;;;;;;;27437:32;27451:4;27457:2;27461:7;27437:13;:32::i;:::-;7822:1;;;26648:829;;;:::o;20390:973::-;20453:16;-1:-1:-1;;;;;20503:20:3;;20482:92;;;;-1:-1:-1;;;20482:92:3;;;;;;;;;-1:-1:-1;;;;;20606:26:3;;20585:18;20606:26;;;:18;:26;;;;;:36;;:34;:36::i;:::-;20585:57;-1:-1:-1;20656:15:3;20652:704;;20731:16;;;20745:1;20731:16;;;;;;;;;;;;20724:23;;;;;20652:704;20778:23;20818:10;20804:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;20804:25:3;;20778:51;;20843:19;20865:13;:11;:13::i;:::-;20843:35;-1:-1:-1;20892:19:3;21095:1;21080:238;21109:11;21098:7;:22;21080:238;;21155:25;;;;:16;:25;;;;;:32;-1:-1:-1;;;;;21155:42:3;;;:32;;:42;21151:153;;;21243:7;21221:6;21228:11;21221:19;;;;;;;;;;;;;;;;;:29;21272:13;;;;;21151:153;21122:9;;21080:238;;;21339:6;21332:13;;;;;;;;;8203:78;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;7946:6;;-1:-1:-1;;;7946:6:3;;;;7938:15;;;;;;8260:6;:14;;-1:-1:-1;;;;8260:14:3;;;8203:78::o;28126:134::-;28213:39;28230:4;28236:2;28240:7;28213:39;;;;;;;;;;;;:16;:39::i;:::-;28126:134;;;:::o;34477:550::-;7805:6;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;34540:14;34557:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;34557:32:3;;34620:16;34574:7;34620;:16::i;:::-;34646:19;34668:28;;;:19;:28;;;;;;34599:37;;-1:-1:-1;34668:28:3;;-1:-1:-1;;;;;34711:20:3;;;;;;;34707:172;;;34772:8;;-1:-1:-1;;;;;34772:8:3;:17;34790:12;34804;:10;:12::i;:::-;34772:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34772:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34772:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;34772:45:3;;;;;;;;;34747:121;;;;-1:-1:-1;;;34747:121:3;;;;;;;;;34910:41;34929:12;:10;:12::i;:::-;34943:7;34910:18;:41::i;:::-;34889:105;;;;-1:-1:-1;;;34889:105:3;;;;;;;;;35005:14;35011:7;35005:5;:14::i;:::-;7822:1;;;34477:550;:::o;1326:21::-;;;-1:-1:-1;;;;;1326:21:3;;:::o;11830:901::-;7805:6;;12103:7;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;12148:7;;12135:9;:20;;12127:29;;;;;;12190:1;12175:12;:16;;;12167:50;;;;-1:-1:-1;;;12167:50:3;;;;;;;;;12249:8;;-1:-1:-1;;;;;12249:8:3;:17;12267:12;12281;:10;:12::i;:::-;12249:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12249:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12249:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12249:45:3;;;;;;;;;12228:129;;;;-1:-1:-1;;;12228:129:3;;;;;;;;;12389:61;12406:9;12417;12428:7;12437:12;12389:16;:61::i;:::-;12368:125;;;;-1:-1:-1;;;12368:125:3;;;;;;;;;12504:15;12522:29;12532:12;:10;:12::i;:::-;12546:4;12522:9;:29::i;:::-;12504:47;;12561:84;12579:7;12588:9;12599;12610:7;12619:25;12561:17;:84::i;:::-;12655:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;12655:43:3;;;;;;12675:7;-1:-1:-1;11830:901:3;;;;;;;;:::o;1437:26::-;;;-1:-1:-1;;;1437:26:3;;;;;:::o;8346:305::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;8564:34;;8522:4;8514:21;;8499:12;;8564:10;;8514:21;;8564:34;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8545:53:3;;;8616:7;8608:35;;;;-1:-1:-1;;;8608:35:3;;;;;;;;;6614:1;;8346:305::o;22264:152::-;22319:7;22360:20;;;:11;:20;;;;;;-1:-1:-1;;;;;22360:20:3;;22264:152::o;21804:241::-;21864:7;-1:-1:-1;;;;;21905:24:3;;21884:96;;;;-1:-1:-1;;;21884:96:3;;;;;;;;;-1:-1:-1;;;;;21998:29:3;;;;;;:17;:29;;;;;:39;;:37;:39::i;:::-;21991:46;21804:241;-1:-1:-1;;21804:241:3:o;1299:21::-;;;-1:-1:-1;;;;;1299:21:3;;:::o;1769:32::-;;;-1:-1:-1;;;;;1769:32:3;;:::o;7506:105::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;7590:7;:13;7506:105::o;8047:78::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;7805:6;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;8105:6;:13;;-1:-1:-1;;;;8105:13:3;-1:-1:-1;;;8105:13:3;;;8047:78::o;22834:840::-;22899:16;22927:18;22948:21;22958:10;22948:9;:21::i;:::-;22927:42;-1:-1:-1;22983:15:3;22979:689;;23058:16;;;23072:1;23058:16;;;;;;;;;;;;22979:689;23105:23;23145:10;23131:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;23131:25:3;;23105:51;;23170:19;23192:13;:11;:13::i;:::-;23170:35;-1:-1:-1;23219:19:3;23415:1;23400:230;23429:11;23418:7;:22;23400:230;;23475:20;;;;:11;:20;;;;;;-1:-1:-1;;;;;23475:34:3;;;:20;;:34;23471:145;;;23555:7;23533:6;23540:11;23533:19;;;;;;;;;;;;;;;;;:29;23584:13;;;;;23471:145;23442:9;;23400:230;;1999:87:8;2072:7;2065:14;;;;;;;;-1:-1:-1;;2065:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:13;;2065:14;;2072:7;;2065:14;;2072:7;2065:14;;;;;;;;;;;;;;;;;;;;;;;;10801:868:3;7805:6;;11047:7;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;11092:7;;11079:9;:20;;11071:29;;;;;;11134:1;11119:12;:16;;;11111:50;;;;-1:-1:-1;;;11111:50:3;;;;;;;;;11193:8;;-1:-1:-1;;;;;11193:8:3;:17;11211:12;11225;:10;:12::i;:::-;11193:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11193:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11193:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11193:45:3;;;;;;;;;11172:129;;;;-1:-1:-1;;;11172:129:3;;;;;;;;;11333:61;11350:9;11361;11372:7;11381:12;11333:16;:61::i;:::-;11312:125;;;;-1:-1:-1;;;11312:125:3;;;;;;;;;11448:15;11466:23;11476:12;:10;:12::i;:::-;11466:9;:23::i;:::-;11448:41;;11499:84;11517:7;11526:9;11537;11548:7;11557:25;11499:17;:84::i;:::-;11593:28;;;;:19;:28;;;;;:43;;;;;-1:-1:-1;;11593:43:3;;;;;;11613:7;-1:-1:-1;10801:868:3;;;;;;;:::o;25401:286::-;7805:6;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;25521:12;:10;:12::i;:::-;-1:-1:-1;;;;;25515:18:3;:2;-1:-1:-1;;;;;25515:18:3;;;25507:57;;;;-1:-1:-1;;;25507:57:3;;;;;;;;;25614:8;25575:18;:32;25594:12;:10;:12::i;:::-;-1:-1:-1;;;;;25575:32:3;;;;;;;;;;;;;;;;;-1:-1:-1;25575:32:3;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;25575:47:3;;;;;;;;;;;25652:12;:10;:12::i;:::-;-1:-1:-1;;;;;25637:42:3;;25670:8;25637:42;;;;;;;;;;;;;;;25401:286;;:::o;19650:330::-;-1:-1:-1;;;;;19777:32:3;;;;;;:24;:32;;;;;;;;19748:61;;;;;;;;;;;;;;;;;19720:15;;;;19748:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19748:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19819:17;19852:1;:8;19839:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19819:42:3;-1:-1:-1;19877:6:3;19872:82;19893:1;:8;19889:1;:12;19872:82;;;19929:1;19931;19929:4;;;;;;;;;;;;;;:14;;;19922:1;19924;19922:4;;;;;;;;;;;;;;;;;:21;19903:3;;19872:82;;;-1:-1:-1;19971:1:3;19650:330;-1:-1:-1;;;19650:330:3:o;28982:862::-;7805:6;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;29143:41;29162:12;:10;:12::i;:::-;29176:7;29143:18;:41::i;:::-;29122:109;;;;-1:-1:-1;;;29122:109:3;;;;;;;;;29242:14;29259:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;29259:32:3;;29317:16;29276:7;29317;:16::i;:::-;29343:19;29365:28;;;:19;:28;;;;;;;;;29408:16;:25;;;;;;:51;;;29301:32;;-1:-1:-1;29365:28:3;;;-1:-1:-1;;;29408:51:3;;;;29404:220;;29509:35;29526:4;29532:2;29536:7;29509:16;:35::i;:::-;:44;29484:129;;;;-1:-1:-1;;;29484:129:3;;;;;;;;;29655:8;;;:81;;-1:-1:-1;;;29655:81:3;;-1:-1:-1;;;;;29655:8:3;;;;:33;;:81;;29689:12;;29703:4;;29709:2;;29713:7;;29722:6;;29730:5;;29655:81;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29655:81:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29655:81:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29655:81:3;;;;;;;;;29634:149;;;;-1:-1:-1;;;29634:149:3;;;;;;;;;29794:42;29812:4;29818:2;29822:7;29831:4;29794:17;:42::i;:::-;7822:1;;;28982:862;;;;:::o;12834:953::-;7805:6;;13124:7;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;13169:7;;13156:9;:20;;13148:29;;;;;;13211:1;13196:12;:16;;;13188:50;;;;-1:-1:-1;;;13188:50:3;;;;;;;;;13270:8;;-1:-1:-1;;;;;13270:8:3;:17;13288:12;13302;:10;:12::i;:::-;13270:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13270:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13270:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13270:45:3;;;;;;;;;13249:129;;;;-1:-1:-1;;;13249:129:3;;;;;;;;;13410:61;13427:9;13438;13449:7;13458:12;13410:16;:61::i;:::-;13389:125;;;;-1:-1:-1;;;13389:125:3;;;;;;;;;13525:15;13543:23;13553:12;:10;:12::i;13543:23::-;13525:41;;13576:84;13594:7;13603:9;13614;13625:7;13634:25;13576:17;:84::i;:::-;13670:31;13683:7;13692:8;13670:12;:31::i;7269:144::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;7367:8;:39;;-1:-1:-1;;;;;;7367:39:3;-1:-1:-1;;;;;7367:39:3;;;;;;;;;;7269:144::o;16529:210::-;16587:13;16634:16;16642:7;16634;:16::i;:::-;16613:81;;;;-1:-1:-1;;;16613:81:3;;;;;;;;;16712:19;;;;:10;:19;;;;;;;;;16705:26;;;;;;-1:-1:-1;;16705:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16712:19;;16705:26;;16712:19;16705:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16529:210;;;:::o;9767:945::-;7805:6;;10053:7;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;10098:7;;10085:9;:20;;10077:29;;;;;;10140:1;10125:12;:16;;;10117:50;;;;-1:-1:-1;;;10117:50:3;;;;;;;;;10199:8;;-1:-1:-1;;;;;10199:8:3;:17;10217:12;10231;:10;:12::i;:::-;10199:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10199:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10199:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10199:45:3;;;;;;;;;10178:129;;;;-1:-1:-1;;;10178:129:3;;;;;;;;;10339:61;10356:9;10367;10378:7;10387:12;10339:16;:61::i;:::-;10318:125;;;;-1:-1:-1;;;10318:125:3;;;;;;;;;10454:15;10472:19;10478:12;:10;:12::i;:::-;10472:5;:19::i;6947:169::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;-1:-1:-1;;;;;7044:22:3;;;7040:70;;7082:6;:17;;-1:-1:-1;;;;;;7082:17:3;-1:-1:-1;;;;;7082:17:3;;;;;7040:70;6947:169;:::o;18478:752::-;18548:14;18572:13;18595:23;18628:16;18654:14;18678:30;18718:19;18776:16;18784:7;18776;:16::i;:::-;18755:81;;;;-1:-1:-1;;;18755:81:3;;;;;;;;;18847:25;;:::i;:::-;18875;;;;:16;:25;;;;;;;;;18847:53;;;;;;;;;-1:-1:-1;;;;;18847:53:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18847:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;18875:25;;18847:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18847:53:3;;;-1:-1:-1;;18847:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18847:53:3;;;;;;;;;;;;;;;-1:-1:-1;18933:28:3;;;:19;:28;;;;;;18993:16;;;;-1:-1:-1;18933:28:3;;;19023:16;18933:28;19023:7;:16::i;:::-;19053:19;;;;19086;;;;19119:17;;;;19150:35;;;;;18972:250;;;;-1:-1:-1;19053:19:3;;-1:-1:-1;19086:19:3;-1:-1:-1;19119:17:3;;-1:-1:-1;19150:35:3;-1:-1:-1;19150:35:3;-1:-1:-1;18478:752:3;-1:-1:-1;;18478:752:3:o;8767:860::-;7805:6;;9009:7;;-1:-1:-1;;;7805:6:3;;;;7804:7;7796:16;;;;;;9054:7;;9041:9;:20;;9033:29;;;;;;9096:1;9081:12;:16;;;9073:50;;;;-1:-1:-1;;;9073:50:3;;;;;;;;;9155:8;;-1:-1:-1;;;;;9155:8:3;:17;9173:12;9187;:10;:12::i;:::-;9155:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9155:45:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9155:45:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9155:45:3;;;;;;;;;9134:129;;;;-1:-1:-1;;;9134:129:3;;;;;;;;;9295:61;9312:9;9323;9334:7;9343:12;9295:16;:61::i;:::-;9274:125;;;;-1:-1:-1;;;9274:125:3;;;;;;;;;9410:15;9428:19;9434:12;:10;:12::i;6771:169::-;6524:6;;-1:-1:-1;;;;;6524:6:3;6508:12;:10;:12::i;:::-;-1:-1:-1;;;;;6508:22:3;;6507:52;;;-1:-1:-1;6552:6:3;;-1:-1:-1;;;;;6552:6:3;6536:12;:10;:12::i;:::-;-1:-1:-1;;;;;6536:22:3;;6507:52;6486:118;;;;-1:-1:-1;;;6486:118:3;;;;;;;;;-1:-1:-1;;;;;6868:22:3;;;6864:70;;6906:6;:17;;-1:-1:-1;;;;;6906:17:3;;-1:-1:-1;;;;;;6906:17:3;;;;;;6771:169;:::o;26026:185::-;-1:-1:-1;;;;;26163:30:3;;;26135:4;26163:30;;;:18;:30;;;;;;;;:40;;;;;;;;;;;;;;;26026:185::o;31051:165::-;31108:4;31146:20;;;:11;:20;;;;;;-1:-1:-1;;;;;31146:20:3;31184:24;;;31051:165::o;5943:90::-;6015:10;5943:90;:::o;1061:112:1:-;1152:14;;1061:112::o;31577:384:3:-;31686:4;31728:16;31736:7;31728;:16::i;:::-;31707:81;;;;-1:-1:-1;;;31707:81:3;;;;;;;;;31799:18;31820:16;31828:7;31820;:16::i;:::-;31799:37;;31866:10;-1:-1:-1;;;;;31855:21:3;:7;-1:-1:-1;;;;;31855:21:3;;:56;;;;31904:7;-1:-1:-1;;;;;31880:31:3;:20;31892:7;31880:11;:20::i;:::-;-1:-1:-1;;;;;31880:31:3;;31855:56;:97;;;;31915:37;31932:10;31944:7;31915:16;:37::i;:::-;31847:106;31577:384;-1:-1:-1;;;;31577:384:3:o;36422:350::-;36569:4;36607:25;;;:16;:25;;;;;:32;-1:-1:-1;;;;;36607:32:3;;;;36654:14;;;;;:30;;;36678:6;-1:-1:-1;;;;;36672:12:3;:2;-1:-1:-1;;;;;36672:12:3;;36654:30;36650:115;;;36707:5;36700:12;;;;;36650:115;36750:4;36743:11;;;36422:350;;;;;;:::o;32342:486::-;32469:4;-1:-1:-1;;;;;32449:24:3;:16;32457:7;32449;:16::i;:::-;-1:-1:-1;;;;;32449:24:3;;32428:92;;;;-1:-1:-1;;;32428:92:3;;;;;;;;;-1:-1:-1;;;;;32552:16:3;;32531:87;;;;-1:-1:-1;;;32531:87:3;;;;;;;;;32629:23;32644:7;32629:14;:23::i;:::-;-1:-1:-1;;;;;32663:23:3;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;32708:21:3;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;32752:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;32752:25:3;-1:-1:-1;;;;;32752:25:3;;;;;;;;;32793:27;;32752:20;;32793:27;;;;;;;32342:486;;;:::o;36059:92::-;36111:32;36117:16;36125:7;36117;:16::i;:::-;36135:7;36111:5;:32::i;16797:461::-;17002:8;;;:63;;-1:-1:-1;;;17002:63:3;;16964:4;;-1:-1:-1;;;;;17002:8:3;;;;:38;;:63;;17041:12;;17055:9;;17002:63;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17002:63:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17002:63:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17002:63:3;;;;;;;;;16981:145;;;;-1:-1:-1;;;16981:145:3;;;;;;;;;17168:9;17158:19;;:7;:19;;;17137:91;;;;-1:-1:-1;;;17137:91:3;;;;;;;;;-1:-1:-1;17246:4:3;16797:461;;;;;;:::o;14980:301::-;15048:7;15068:15;15086:9;15092:2;15086:5;:9::i;:::-;15068:27;;15127:53;15158:1;15162:2;15166:7;15175:4;15127:22;:53::i;:::-;15106:142;;;;-1:-1:-1;;;15106:142:3;;;;;;;;17685:786;17907:16;17915:7;17907;:16::i;:::-;17886:81;;;;-1:-1:-1;;;17886:81:3;;;;;;;;;17978:25;;:::i;:::-;18006:257;;;;;;;;18045:12;:10;:12::i;:::-;-1:-1:-1;;;;;18006:257:3;;;;;18090:9;18006:257;;;;18132:9;18006:257;;;;;;18172:7;18006:257;;;;;;18226:25;18006:257;;;;;17978:285;;18302:9;18274:16;:25;18291:7;18274:25;;;;;;;;;;;:37;;;;;;;;;;;;;-1:-1:-1;;;;;18274:37:3;;;;;-1:-1:-1;;;;;18274:37:3;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18274:37:3;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18274:37:3;;;;;;;;-1:-1:-1;;18274:37:3;;;;;;;;;;;;;;-1:-1:-1;;18274:37:3;-1:-1:-1;;;18274:37:3;;;;;;;;;;18327;18354:9;18327:26;:37::i;:::-;18322:142;;18380:24;:38;18405:12;:10;:12::i;:::-;-1:-1:-1;;;;;18380:38:3;;;;;;;;;;;;;;;-1:-1:-1;18380:38:3;;;18425:26;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;18380:73:3;;;;;;;;;;;23:18:-1;;18380:73:3;;;;;;;;;;;;;;;:::i;:::-;;;;;17685:786;;;;;;:::o;14280:136::-;14329:7;14349:15;14367:17;14377:2;14367:17;;;;;;;;;;;;:9;:17::i;30548:308::-;30669:32;30683:4;30689:2;30693:7;30669:13;:32::i;:::-;30733:47;30756:4;30762:2;30766:7;30775:4;30733:22;:47::i;:::-;30712:136;;;;-1:-1:-1;;;30712:136:3;;;;;;;;16134:203;16233:16;16241:7;16233;:16::i;:::-;16212:81;;;;-1:-1:-1;;;16212:81:3;;;;;;;;;16304:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;15467:398::-;15512:7;-1:-1:-1;;;;;15540:16:3;;15532:49;;;;-1:-1:-1;;;15532:49:3;;;;;;;;;15592:21;:9;:19;:21::i;:::-;15623:15;15641:19;:9;:17;:19::i;:::-;15671:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;15671:25:3;-1:-1:-1;;;;;15671:25:3;;;;;;;;15706:21;;:17;:21;;;;;15671:20;;-1:-1:-1;15706:33:3;;:31;:33::i;:::-;-1:-1:-1;;;;;15749:22:3;;;;;;:18;:22;;;;;:34;;:32;:34::i;:::-;15799:33;;15824:7;;-1:-1:-1;;;;;15799:33:3;;;15816:1;;15799:33;;15816:1;;15799:33;15850:7;15467:398;-1:-1:-1;;15467:398:3:o;33935:173::-;34035:1;33999:24;;;:15;:24;;;;;;-1:-1:-1;;;;;33999:24:3;:38;33995:106;;34088:1;34053:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;34053:37:3;;;33935:173::o;1274:108:1:-;1354:14;;:21;;1373:1;1354:21;:18;:21;:::i;:::-;1337:38;;1274:108::o;1179:89::-;1242:19;;1260:1;1242:19;;;1179:89::o;35301:577:3:-;35414:10;-1:-1:-1;;;;;35394:30:3;:16;35402:7;35394;:16::i;:::-;-1:-1:-1;;;;;35394:30:3;;35373:94;;;;-1:-1:-1;;;35373:94:3;;;;;;;;;35478:23;35493:7;35478:14;:23::i;:::-;-1:-1:-1;;;;;35512:29:3;;;;;;:17;:29;;;;;:41;;:39;:41::i;:::-;35594:1;35563:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;35563:33:3;;;35654:10;:19;;;;;35648:33;;-1:-1:-1;;35563:33:3;35648;;;35563;35648;;;;;;:38;35644:95;;35709:19;;;;:10;:19;;;;;35702:26;;;:::i;:::-;35788:25;;;;:16;:25;;;;;35781:32;;-1:-1:-1;;;;;;35781:32:3;;;35788:25;35781:32;;;;35788:25;35781:32;:::i;:::-;-1:-1:-1;35781:32:3;;;;-1:-1:-1;;35781:32:3;;;35829:41;;35862:7;;35781:32;;-1:-1:-1;;;;;35829:41:3;;;;;35781:32;;35829:41;35301:577;;:::o;33416:357::-;33544:4;33570:15;:2;-1:-1:-1;;;;;33570:13:3;;:15::i;:::-;33565:58;;-1:-1:-1;33608:4:3;33601:11;;33565:58;33633:13;33665:2;-1:-1:-1;;;;;33649:36:3;;33686:12;:10;:12::i;:::-;33700:4;33706:7;33715:4;33649:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33649:71:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33649:71:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;33649:71:3;;;;;;;;;-1:-1:-1;;;;;;33738:26:3;-1:-1:-1;;;33738:26:3;;-1:-1:-1;;33416:357:3;;;;;;:::o;17265:413::-;17435:10;17364:4;17410:36;;;:24;:36;;;;;;;;17381:65;;;;;;;;;;;;;;;;;:26;;17364:4;;17381:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17381:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17381:65:3;;-1:-1:-1;17456:15:3;;-1:-1:-1;17456:15:3;;-1:-1:-1;;17489:155:3;17510:1;:8;17506:1;:12;17489:155;;;17543:39;17556:9;17567:1;17569;17567:4;;;;;;;;;;;;;;:14;;;17543:12;:39::i;:::-;17539:95;;;17615:4;17602:17;;17539:95;17520:3;;17489:155;;1276:134:10;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;559:797:0:-;619:4;1267:20;;1112:66;1306:15;;;;;:42;;-1:-1:-1;1325:23:0;;;1298:51;-1:-1:-1;;559:797:0:o;36186:230:3:-;36311:4;36403:1;36385:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;36385:21:3;;;36375:32;;;;;;36367:1;36349:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;36349:21:3;;;36339:32;;;;;;:68;36331:78;;36186:230;;;;:::o;1846:187:10:-;1932:7;1967:12;1959:6;;;;1951:29;;;;-1:-1:-1;;;1951:29:10;;;;;;;;;;-1:-1:-1;;;2002:5:10;;;1846:187::o;850:1239:8:-;;;;;;;;;-1:-1:-1;850:1239:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:1239:8;;;-1:-1:-1;850:1239:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;348:13;;366:30;348:13;366:30;;408:128;474:20;;499:32;474:20;499:32;;543:132;620:13;;638:32;620:13;638:32;;683:440;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;839:6;826:20;861:64;876:48;917:6;876:48;;;861:64;;;852:73;;945:6;938:5;931:21;981:4;973:6;969:17;1014:4;1007:5;1003:16;1049:3;1040:6;1035:3;1031:16;1028:25;1025:2;;;1066:1;1063;1056:12;1025:2;1076:41;1110:6;1105:3;1100;1076:41;;;744:379;;;;;;;;1582:130;1649:20;;1674:33;1649:20;1674:33;;1719:128;1785:20;;1810:32;1785:20;1810:32;;1854:128;1920:20;;1945:32;1920:20;1945:32;;1989:241;;2093:2;2081:9;2072:7;2068:23;2064:32;2061:2;;;2109:1;2106;2099:12;2061:2;2144:1;2161:53;2206:7;2186:9;2161:53;;2237:366;;;2358:2;2346:9;2337:7;2333:23;2329:32;2326:2;;;2374:1;2371;2364:12;2326:2;2409:1;2426:53;2471:7;2451:9;2426:53;;;2416:63;;2388:97;2516:2;2534:53;2579:7;2570:6;2559:9;2555:22;2534:53;;;2524:63;;2495:98;2320:283;;;;;;2610:491;;;;2748:2;2736:9;2727:7;2723:23;2719:32;2716:2;;;2764:1;2761;2754:12;2716:2;2799:1;2816:53;2861:7;2841:9;2816:53;;;2806:63;;2778:97;2906:2;2924:53;2969:7;2960:6;2949:9;2945:22;2924:53;;;2914:63;;2885:98;3014:2;3032:53;3077:7;3068:6;3057:9;3053:22;3032:53;;;3022:63;;2993:98;2710:391;;;;;;3108:721;;;;;3272:3;3260:9;3251:7;3247:23;3243:33;3240:2;;;3289:1;3286;3279:12;3240:2;3324:1;3341:53;3386:7;3366:9;3341:53;;;3331:63;;3303:97;3431:2;3449:53;3494:7;3485:6;3474:9;3470:22;3449:53;;;3439:63;;3410:98;3539:2;3557:53;3602:7;3593:6;3582:9;3578:22;3557:53;;;3547:63;;3518:98;3675:2;3664:9;3660:18;3647:32;3699:18;3691:6;3688:30;3685:2;;;3731:1;3728;3721:12;3685:2;3751:62;3805:7;3796:6;3785:9;3781:22;3751:62;;;3741:72;;3626:193;3234:595;;;;;;;;3836:360;;;3954:2;3942:9;3933:7;3929:23;3925:32;3922:2;;;3970:1;3967;3960:12;3922:2;4005:1;4022:53;4067:7;4047:9;4022:53;;;4012:63;;3984:97;4112:2;4130:50;4172:7;4163:6;4152:9;4148:22;4130:50;;4203:366;;;4324:2;4312:9;4303:7;4299:23;4295:32;4292:2;;;4340:1;4337;4330:12;4292:2;4375:1;4392:53;4437:7;4417:9;4392:53;;;4382:63;;4354:97;4482:2;4500:53;4545:7;4536:6;4525:9;4521:22;4500:53;;4576:257;;4688:2;4676:9;4667:7;4663:23;4659:32;4656:2;;;4704:1;4701;4694:12;4656:2;4739:1;4756:61;4809:7;4789:9;4756:61;;4840:239;;4943:2;4931:9;4922:7;4918:23;4914:32;4911:2;;;4959:1;4956;4949:12;4911:2;4994:1;5011:52;5055:7;5035:9;5011:52;;5086:261;;5200:2;5188:9;5179:7;5175:23;5171:32;5168:2;;;5216:1;5213;5206:12;5168:2;5251:1;5268:63;5323:7;5303:9;5268:63;;5354:837;;;;;;5530:3;5518:9;5509:7;5505:23;5501:33;5498:2;;;5547:1;5544;5537:12;5498:2;5582:31;;5633:18;5622:30;;5619:2;;;5665:1;5662;5655:12;5619:2;5685:63;5740:7;5731:6;5720:9;5716:22;5685:63;;;5675:73;;5561:193;5785:2;5803:52;5847:7;5838:6;5827:9;5823:22;5803:52;;;5793:62;;5764:97;5892:2;5910:52;5954:7;5945:6;5934:9;5930:22;5910:52;;;5900:62;;5871:97;5999:2;6017:50;6059:7;6050:6;6039:9;6035:22;6017:50;;;6007:60;;5978:95;6104:3;6123:52;6167:7;6158:6;6147:9;6143:22;6123:52;;;6113:62;;6083:98;5492:699;;;;;;;;;6198:1067;;;;;;;6400:3;6388:9;6379:7;6375:23;6371:33;6368:2;;;6417:1;6414;6407:12;6368:2;6452:31;;6503:18;6492:30;;6489:2;;;6535:1;6532;6525:12;6489:2;6555:63;6610:7;6601:6;6590:9;6586:22;6555:63;;;6545:73;;6431:193;6655:2;6673:52;6717:7;6708:6;6697:9;6693:22;6673:52;;;6663:62;;6634:97;6762:2;6780:52;6824:7;6815:6;6804:9;6800:22;6780:52;;;6770:62;;6741:97;6869:2;6887:50;6929:7;6920:6;6909:9;6905:22;6887:50;;;6877:60;;6848:95;6974:3;6993:52;7037:7;7028:6;7017:9;7013:22;6993:52;;;6983:62;;6953:98;7110:3;7099:9;7095:19;7082:33;7135:18;7127:6;7124:30;7121:2;;;7167:1;7164;7157:12;7121:2;7187:62;7241:7;7232:6;7221:9;7217:22;7187:62;;;7177:72;;7061:194;6362:903;;;;;;;;;8348:241;;8452:2;8440:9;8431:7;8427:23;8423:32;8420:2;;;8468:1;8465;8458:12;8420:2;8503:1;8520:53;8565:7;8545:9;8520:53;;8597:181;;8710:62;8768:3;8760:6;8710:62;;8787:173;;8874:46;8916:3;8908:6;8874:46;;;-1:-1;;8949:4;8940:14;;8867:93;8968:113;9051:24;9069:5;9051:24;;;9046:3;9039:37;9033:48;;;9117:896;;9274:60;9328:5;9274:60;;;9347:92;9432:6;9427:3;9347:92;;;9340:99;;9462:3;9504:4;9496:6;9492:17;9487:3;9483:27;9531:62;9587:5;9531:62;;;9613:7;9641:1;9626:348;9651:6;9648:1;9645:13;9626:348;;;9713:9;9707:4;9703:20;9698:3;9691:33;9758:6;9752:13;9780:76;9851:4;9836:13;9780:76;;;9772:84;;9873:66;9932:6;9873:66;;;9962:4;9953:14;;;;;9863:76;-1:-1;;9673:1;9666:9;9626:348;;;-1:-1;9987:4;;9253:760;-1:-1;;;;;;;9253:760;10052:690;;10197:54;10245:5;10197:54;;;10264:86;10343:6;10338:3;10264:86;;;10257:93;;10371:56;10421:5;10371:56;;;10447:7;10475:1;10460:260;10485:6;10482:1;10479:13;10460:260;;;10552:6;10546:13;10573:63;10632:3;10617:13;10573:63;;;10566:70;;10653:60;10706:6;10653:60;;;10643:70;-1:-1;;10507:1;10500:9;10460:260;;;-1:-1;10733:3;;10176:566;-1:-1;;;;;10176:566;10750:104;10827:21;10842:5;10827:21;;10861:343;;10971:38;11003:5;10971:38;;;11021:70;11084:6;11079:3;11021:70;;;11014:77;;11096:52;11141:6;11136:3;11129:4;11122:5;11118:16;11096:52;;;11169:29;11191:6;11169:29;;;11160:39;;;;10951:253;-1:-1;;;10951:253;11211:174;11318:61;11373:5;11318:61;;11746:360;;11876:39;11909:5;11876:39;;;11927:89;12009:6;12004:3;11927:89;;;11920:96;;12021:52;12066:6;12061:3;12054:4;12047:5;12043:16;12021:52;;;12085:16;;;;;11856:250;-1:-1;;11856:250;12440:364;;12600:67;12664:2;12659:3;12600:67;;;12700:66;12680:87;;12795:2;12786:12;;12586:218;-1:-1;;12586:218;12813:364;;12973:67;13037:2;13032:3;12973:67;;;13073:66;13053:87;;13168:2;13159:12;;12959:218;-1:-1;;12959:218;13186:465;;13346:67;13410:2;13405:3;13346:67;;;13446:66;13426:87;;-1:-1;;;13542:2;13533:12;;13526:88;13642:2;13633:12;;13332:319;-1:-1;;13332:319;13660:364;;13820:67;13884:2;13879:3;13820:67;;;13920:66;13900:87;;14015:2;14006:12;;13806:218;-1:-1;;13806:218;14033:364;;14193:67;14257:2;14252:3;14193:67;;;14293:66;14273:87;;14388:2;14379:12;;14179:218;-1:-1;;14179:218;14406:364;;14566:67;14630:2;14625:3;14566:67;;;14666:66;14646:87;;14761:2;14752:12;;14552:218;-1:-1;;14552:218;14779:364;;14939:67;15003:2;14998:3;14939:67;;;15039:66;15019:87;;15134:2;15125:12;;14925:218;-1:-1;;14925:218;15152:364;;15312:67;15376:2;15371:3;15312:67;;;15412:66;15392:87;;15507:2;15498:12;;15298:218;-1:-1;;15298:218;15525:465;;15685:67;15749:2;15744:3;15685:67;;;15785:66;15765:87;;-1:-1;;;15881:2;15872:12;;15865:88;15981:2;15972:12;;15671:319;-1:-1;;15671:319;15999:364;;16159:67;16223:2;16218:3;16159:67;;;16259:66;16239:87;;16354:2;16345:12;;16145:218;-1:-1;;16145:218;16372:364;;16532:67;16596:2;16591:3;16532:67;;;16632:66;16612:87;;16727:2;16718:12;;16518:218;-1:-1;;16518:218;16745:364;;16905:67;16969:2;16964:3;16905:67;;;17005:66;16985:87;;17100:2;17091:12;;16891:218;-1:-1;;16891:218;17118:364;;17278:67;17342:2;17337:3;17278:67;;;17378:66;17358:87;;17473:2;17464:12;;17264:218;-1:-1;;17264:218;17491:296;;17668:83;17749:1;17744:3;17668:83;;17796:364;;17956:67;18020:2;18015:3;17956:67;;;18056:66;18036:87;;18151:2;18142:12;;17942:218;-1:-1;;17942:218;18169:364;;18329:67;18393:2;18388:3;18329:67;;;18429:66;18409:87;;18524:2;18515:12;;18315:218;-1:-1;;18315:218;18542:465;;18702:67;18766:2;18761:3;18702:67;;;18802:66;18782:87;;-1:-1;;;18898:2;18889:12;;18882:88;18998:2;18989:12;;18688:319;-1:-1;;18688:319;19016:364;;19176:67;19240:2;19235:3;19176:67;;;19276:66;19256:87;;19371:2;19362:12;;19162:218;-1:-1;;19162:218;19389:364;;19549:67;19613:2;19608:3;19549:67;;;19649:66;19629:87;;19744:2;19735:12;;19535:218;-1:-1;;19535:218;19761:103;19834:24;19852:5;19834:24;;19991:110;20072:23;20089:5;20072:23;;20108:110;20189:23;20206:5;20189:23;;20225:266;;20371:95;20462:3;20453:6;20371:95;;20498:370;;20696:147;20839:3;20696:147;;20875:213;20993:2;20978:18;;21007:71;20982:9;21051:6;21007:71;;21095:947;21389:3;21374:19;;21404:71;21378:9;21448:6;21404:71;;;21486:72;21554:2;21543:9;21539:18;21530:6;21486:72;;;21606:9;21600:4;21596:20;21591:2;21580:9;21576:18;21569:48;21631:78;21704:4;21695:6;21631:78;;;21623:86;;21720:70;21786:2;21775:9;21771:18;21762:6;21720:70;;;21801:71;21867:3;21856:9;21852:19;21843:6;21801:71;;;21883:67;21945:3;21934:9;21930:19;21921:6;21883:67;;;21961:71;22027:3;22016:9;22012:19;22003:6;21961:71;;;21360:682;;;;;;;;;;;22049:631;22269:3;22254:19;;22284:71;22258:9;22328:6;22284:71;;;22366:72;22434:2;22423:9;22419:18;22410:6;22366:72;;;22449;22517:2;22506:9;22502:18;22493:6;22449:72;;;22569:9;22563:4;22559:20;22554:2;22543:9;22539:18;22532:48;22594:76;22665:4;22656:6;22594:76;;;22586:84;22240:440;-1:-1;;;;;;22240:440;22687:385;22867:2;22881:47;;;22852:18;;22942:120;22852:18;23048:6;22942:120;;23079:361;23247:2;23261:47;;;23232:18;;23322:108;23232:18;23416:6;23322:108;;23447:201;23559:2;23544:18;;23573:65;23548:9;23611:6;23573:65;;23655:261;23797:2;23782:18;;23811:95;23786:9;23879:6;23811:95;;23923:301;24061:2;24075:47;;;24046:18;;24136:78;24046:18;24200:6;24136:78;;24231:407;24422:2;24436:47;;;24407:18;;24497:131;24407:18;24497:131;;24645:407;24836:2;24850:47;;;24821:18;;24911:131;24821:18;24911:131;;25059:407;25250:2;25264:47;;;25235:18;;25325:131;25235:18;25325:131;;25473:407;25664:2;25678:47;;;25649:18;;25739:131;25649:18;25739:131;;25887:407;26078:2;26092:47;;;26063:18;;26153:131;26063:18;26153:131;;26301:407;26492:2;26506:47;;;26477:18;;26567:131;26477:18;26567:131;;26715:407;26906:2;26920:47;;;26891:18;;26981:131;26891:18;26981:131;;27129:407;27320:2;27334:47;;;27305:18;;27395:131;27305:18;27395:131;;27543:407;27734:2;27748:47;;;27719:18;;27809:131;27719:18;27809:131;;27957:407;28148:2;28162:47;;;28133:18;;28223:131;28133:18;28223:131;;28371:407;28562:2;28576:47;;;28547:18;;28637:131;28547:18;28637:131;;28785:407;28976:2;28990:47;;;28961:18;;29051:131;28961:18;29051:131;;29199:407;29390:2;29404:47;;;29375:18;;29465:131;29375:18;29465:131;;29613:407;29804:2;29818:47;;;29789:18;;29879:131;29789:18;29879:131;;30027:407;30218:2;30232:47;;;30203:18;;30293:131;30203:18;30293:131;;30441:407;30632:2;30646:47;;;30617:18;;30707:131;30617:18;30707:131;;30855:407;31046:2;31060:47;;;31031:18;;31121:131;31031:18;31121:131;;31269:407;31460:2;31474:47;;;31445:18;;31535:131;31445:18;31535:131;;31683:213;31801:2;31786:18;;31815:71;31790:9;31859:6;31815:71;;31903:209;32019:2;32004:18;;32033:69;32008:9;32075:6;32033:69;;32119:320;32263:2;32248:18;;32277:69;32252:9;32319:6;32277:69;;;32357:72;32425:2;32414:9;32410:18;32401:6;32357:72;;32446:767;32702:3;32687:19;;32717:69;32691:9;32759:6;32717:69;;;32797:72;32865:2;32854:9;32850:18;32841:6;32797:72;;;32880;32948:2;32937:9;32933:18;32924:6;32880:72;;;32963;33031:2;33020:9;33016:18;33007:6;32963:72;;;33046:73;33114:3;33103:9;33099:19;33090:6;33046:73;;;33130;33198:3;33187:9;33183:19;33174:6;33130:73;;;32673:540;;;;;;;;;;33220:408;33384:2;33369:18;;33398:69;33373:9;33440:6;33398:69;;;33515:9;33509:4;33505:20;33500:2;33489:9;33485:18;33478:48;33540:78;33613:4;33604:6;33540:78;;33635:256;33697:2;33691:9;33723:17;;;33798:18;33783:34;;33819:22;;;33780:62;33777:2;;;33855:1;33852;33845:12;33777:2;33871;33864:22;33675:216;;-1:-1;33675:216;33898:321;;34041:18;34033:6;34030:30;34027:2;;;34073:1;34070;34063:12;34027:2;-1:-1;34204:4;34140;34117:17;;;;-1:-1;;34113:33;34194:15;;33964:255;34555:157;34685:4;34676:14;;34633:79;34877:143;34986:12;;34957:63;35790:184;35914:19;;;35963:4;35954:14;;35907:67;36981:91;;37043:24;37061:5;37043:24;;37079:85;37145:13;37138:21;;37121:43;37171:144;-1:-1;;;;;;37232:78;;37215:100;37322:121;-1:-1;;;;;37384:54;;37367:76;37529:88;37601:10;37590:22;;37573:44;37624:92;37696:14;37685:26;;37668:48;37723:169;;37826:61;37881:5;37826:61;;38039:145;38120:6;38115:3;38110;38097:30;-1:-1;38176:1;38158:16;;38151:27;38090:94;38193:268;38258:1;38265:101;38279:6;38276:1;38273:13;38265:101;;;38346:11;;;38340:18;38327:11;;;38320:39;38301:2;38294:10;38265:101;;;38381:6;38378:1;38375:13;38372:2;;;-1:-1;;38446:1;38428:16;;38421:27;38242:219;38469:97;38557:2;38537:14;-1:-1;;38533:28;;38517:49;38574:117;38643:24;38661:5;38643:24;;;38636:5;38633:35;38623:2;;38682:1;38679;38672:12;38698:111;38764:21;38779:5;38764:21;;38816:115;38884:23;38901:5;38884:23;;38938:117;39007:24;39025:5;39007:24;;39062:115;39130:23;39147:5;39130:23;;39184:115;39252:23;39269:5;39252:23;",
  "source": "pragma solidity ^0.5.11;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721.sol\";\n\n/**\n * Customized for Microsponsors\n * from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\ncontract Microsponsors is ERC721 {\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor (string memory name, string memory symbol, address registryAddress) public {\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n\n        super.updateRegistryAddress(registryAddress);\n\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2372
      ]
    },
    "id": 2373,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2317,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2318,
        "nodeType": "ImportDirective",
        "scope": 2373,
        "sourceUnit": 2163,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2319,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2162,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2162",
                "typeString": "contract ERC721"
              }
            },
            "id": 2320,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2162,
          2172,
          2275
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2372,
        "linearizedBaseContracts": [
          2372,
          2162,
          2275,
          142,
          2172
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2322,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2372,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2321,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2324,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2372,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2323,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2327,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2372,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2325,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2326,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2354,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2336,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2337,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2340,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2324,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2341,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2331,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2343,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2345,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2327,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2344,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2347,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2351,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2333,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2348,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2666,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2372",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 382,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2355,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2372,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2322,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2359,
                  "id": 2361,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2372,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2370,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2368,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2324,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2367,
                  "id": 2369,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2366,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2372,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2373,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/erc-721/contracts/Microsponsors.sol",
    "exportedSymbols": {
      "Microsponsors": [
        2372
      ]
    },
    "id": 2373,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "id": 2317,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/erc-721/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2318,
        "nodeType": "ImportDirective",
        "scope": 2373,
        "sourceUnit": 2163,
        "src": "60:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2319,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2162,
              "src": "876:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2162",
                "typeString": "contract ERC721"
              }
            },
            "id": 2320,
            "nodeType": "InheritanceSpecifier",
            "src": "876:6:8"
          }
        ],
        "contractDependencies": [
          142,
          2162,
          2172,
          2275
        ],
        "contractKind": "contract",
        "documentation": "Customized for Microsponsors\nfrom Open Zeppelin's ERC721Metadata contract, which is MIT Licensed:\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
        "fullyImplemented": true,
        "id": 2372,
        "linearizedBaseContracts": [
          2372,
          2162,
          2275,
          142,
          2172
        ],
        "name": "Microsponsors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2322,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2372,
            "src": "908:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2321,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2324,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2372,
            "src": "955:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2323,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "955:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2327,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 2372,
            "src": "1244:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2325,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1244:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 2326,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:10:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2354,
              "nodeType": "Block",
              "src": "1453:249:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2336,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "1464:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2337,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "1472:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2340,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2324,
                      "src": "1486:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2341,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2331,
                      "src": "1496:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1486:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2343,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2345,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2327,
                        "src": "1609:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2344,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1590:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2347,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:49:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2351,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2333,
                        "src": "1678:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2348,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2666,
                        "src": "1650:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Microsponsors_$2372",
                          "typeString": "contract super Microsponsors"
                        }
                      },
                      "id": 2350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateRegistryAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 382,
                      "src": "1650:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:44:8"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 2355,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1379:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1399:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2355,
                  "src": "1421:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1378:67:8"
            },
            "returnParameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2372,
            "src": "1366:336:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "1861:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2322,
                    "src": "1878:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2359,
                  "id": 2361,
                  "nodeType": "Return",
                  "src": "1871:12:8"
                }
              ]
            },
            "documentation": "@dev Gets the token name.\n@return string representing the token name",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:8"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "1846:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1845:15:8"
            },
            "scope": 2372,
            "src": "1807:83:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2370,
              "nodeType": "Block",
              "src": "2055:31:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2368,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2324,
                    "src": "2072:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2367,
                  "id": 2369,
                  "nodeType": "Return",
                  "src": "2065:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol",
            "id": 2371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:2:8"
            },
            "returnParameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2366,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "2040:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2039:15:8"
            },
            "scope": 2372,
            "src": "1999:87:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2373,
        "src": "850:1239:8"
      }
    ],
    "src": "0:2090:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1614729567093": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8cc3D624c1b5EDaa9a3A9599933D3636A1ADa5dA",
      "transactionHash": "0xfec37a6010c3233a37387f5db98a32a4b60080397ab60329d0a25b27a3ec9e25"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-03T00:07:53.988Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "tokenOwner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Customized for MicrosponsorsBurns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned"
        }
      },
      "constructor": {
        "details": "Constructor function"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given token owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "tokenOwner": "token owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the token owner"
      },
      "mint(string,uint48,uint48,bool,uint32)": {
        "details": "Function to mint tokens.",
        "return": "tokenId"
      },
      "mintWithTokenURI(string,uint48,uint48,bool,uint32,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by contract owner to pause minting and transfers."
      },
      "safeMint(string,uint48,uint48,bool,uint32)": {
        "details": "Function to safely mint tokens.",
        "return": "tokenId"
      },
      "safeMint(string,uint48,uint48,bool,uint32,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "data": "bytes data to send along with a safe transfer check."
        },
        "return": "tokenId"
      },
      "safeMintWithTokenURI(string,uint48,uint48,bool,uint32,string)": {
        "params": {
          "tokenURI": "The token URI of the minted token."
        },
        "return": "tokenId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenMinterContentIds(address)": {
        "details": "Look up all Content IDs a Minter has tokenized TimeSlots for.      We're not getting this from the Registry because we want to keep      a separate record here of all Content ID's the acct has *ever*      minted tokens for. The registry is for keeping track of their      current (not necessarily past) Content ID registrations."
      },
      "tokenURI(uint256)": {
        "params": {
          "tokenId": "uint256 ID of the token to query"
        },
        "return": "URI for a given token ID."
      },
      "tokensMintedBy(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to minter), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time)."
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire _tokenIds array looking for tokens belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls (at this time).",
        "params": {
          "tokenOwner": "The owner whose tokens we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Gets the total number of tokens ever minted."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership1(address)": {
        "details": "Transfer owner (admin) functions to another address",
        "params": {
          "newOwner": "Address of new owner/ admin of contract"
        }
      },
      "unpause()": {
        "details": "Called by contract owner to unpause minting and transfers."
      },
      "updateMintFee(uint256)": {
        "details": "Update the fee (in wei) charged for minting a single token"
      },
      "updateRegistryAddress(address)": {
        "details": "Update contract address for Microsponsors Registry contract",
        "params": {
          "newAddress": "where the Registry contract lives"
        }
      },
      "withdrawBalance()": {
        "details": "Admin withdraws entire balance from contract."
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenURI(uint256)": {
        "notice": "Throws if the token ID does not exist. May return an empty string."
      },
      "tokensMintedBy(address)": {
        "notice": "Return all the Token IDs minted by a given account."
      }
    },
    "notice": "Customized for Microsponsors from Open Zeppelin's ERC721Metadata contract, which is MIT Licensed: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Metadata.sol Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  }
}